#include <bits/stdc++.h>
using namespace std;

int not_in_arr(int arr[], long long int n){
    sort(arr, arr+n);
    for(int i=0; i<n; i++){
        if(i != arr[i]){
            return i;
        }
    }
    return n;
}

void solve(){
    long long int n, k;
    cin>>n>>k;
    int arr[n+1], res[n], f[n+1];
    
    for(int i=0; i<n; i++){
        cin>>arr[i+1];
        res[i]=arr[i+1];
    }

    int a = not_in_arr(res, n);
    arr[0] = a;
    for(int i=0; i<n+1; i++){
        
       f[(i+k-1)%(n+1)] = arr[i];

    }
    for(int i=0; i<n; i++){
        cout<<f[i]<<' ';
    }
    cout<<endl;

    
   

}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;




int main(){
    fastIO;
    string s;
    cin>>s;
    //vector<char> v;
    for(char c:s){
        if(c!='a' && c!='A' && c!='e' && c!='E' && c!='i' && c!='I' && c!='o' && c!='O' && c!='u' && c!='U' && c!='y' && c!='Y'){
            if(int(c)<97)
            {
            cout<<'.'<<char(c+32);
            }
            else 
            {
                cout<<'.'<<c;
            }
        }
    }
}

// #include <bits/stdc++.h>
// #define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
// using namespace std;
// #define int long long 


// signed main(){
//     fastIO;
//     int n, k;
//     cin >> n >> k;
//     string s;
//     cin >> s;
//     vector<vector<int>> pos(k, vector<int>());

//     for(int i=0; i<n; i++)
//     {
//         pos[s[i] - 'a'].push_back(i);
//     }
    

//     int ans[n+1];

    

//     set<int> s1;
//     int count = 0;
//     int curr = 1;
//     ans[n] = 1;

//     for(int i=n-1; i>=0; i--)
//     {
//         if(s1.find(s[i] - 'a') == s1.end())
//         {
//             count++;
//             s1.insert(s[i]-'a');
//         }
        
//         if(count < k)
//         {
//             ans[i] = curr;
//         }
//         else 
//         {
//             ans[i] = (++curr);
//             count=0;
//             s1.clear();
//         }
//     }

//     int q;
//     cin >> q;

//     while(q--)
//     {
//         string s2;
//         cin >> s2;

//         if(s2.size() == 0) 
//         {
//             cout << ans[0] << endl;
//             continue;
//         }

//         int prev=-1;

//         for(int i=0; i<s2.size(); i++)
//         {
//             if(i == 0)
//             {
//                 auto ptr = pos[s2[i]-'a'].begin();
//                 if(ptr == pos[s2[i]-'a'].end())
//                 {
//                     prev=-1;
//                     break;
//                 }
//                 else prev = *ptr;
//             }
//             else 
//             {
                
//                 auto ptr = upper_bound(pos[s2[i]-'a'].begin(), pos[s2[i]-'a'].end(), prev);

//                 if(ptr == pos[s2[i]-'a'].end())
//                 {
//                     prev=-1;
//                     break;
//                 }
//                 else 
//                 {
//                     prev = *ptr;
//                 }
//             }   
//         }

//         cout << (prev == -1 ? 0 : ans[prev+1]) << endl;


//     }
// }






#include <bits/stdc++.h>
using namespace std;
#define int long long


signed main(){
    set<int> s;

    int n;
    cin >> n;
    while(n != 1)
    {
        cout << n << endl;
        if(s.find(n) != s.end()) break;
        s.insert(n);
        if(n%2) n = 3*n+1;
        else n /= 2;
    }

    cout << n << endl;

    if(n == 1) cout << "Follows Collatz !\n";
    else cout << "Collatz Disprooved\n";
    
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin >> n;
    int arr[n];
    for(int i=0; i <n; i++) cin >> arr[i];
    sort(arr, arr+n);

    cout << arr[n-1] - arr[0] + arr[n-1] - arr[1] + arr[n-2] - arr[0] + arr[n-2] - arr[1] << endl;   
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int a, b;
    cin >> a >> b;
    cout << a*b/(gcd(a, b)) << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long

const int MOD = 1e9+7;
const int inv = 129032259;

int InverseModulo(int a, int p){

    int q = p-2;

    int res = 1;
    while (q > 0) {
        if (q & 1)
            res = (res * a)%p;
        a = (a * a)%p;
        q >>= 1;
    }
    return res%p;
}

int abModm(int a, int b, int m){
    a%=m;
    int res = 1;
    while (b > 0) {
        if (b & 1)
            res = (res * a)%m;
        a = (a * a)%m;
        b >>= 1;
    }
    return res;
}

void solve(){

    
    string s, s1 = "";
    bool yes = 0;
    cin >> s;

    vector<string> v;

    int ptr = 0, ptr1 = 0, n = s.size();

    int hash1[n], hash2[n];

    hash2[n-1] = (s[n-1] - 'a');
    hash1[0] = (s[0] - 'a');

    for(int i=n-2; i>=0; i--)
    {
        hash2[i] = hash2[i+1] + ((s[i] - 'a') * abModm(31, n-1-i, MOD))%MOD;
        hash2[i] %= MOD;
    }

    for(int i=1; i<n; i++)
    {
        hash1[i] = hash1[i-1] + ((s[i] - 'a') * abModm(31, i, MOD)) % MOD;
        hash1[i] %= MOD;
    }

    function <bool(int, int)> palindrome = [&](int i, int j) -> bool
    {
        int fwd = ((hash1[j] - (i == 0 ? 0 : hash1[i-1]) + MOD)%MOD);
        fwd *= abModm(inv, i, MOD);
        fwd %= MOD;

        int bwd = (hash2[i] - (j == n-1 ? 0 : hash2[j+1]) + MOD) % MOD;
        bwd *= abModm(inv, n-j-1, MOD);
        bwd %= MOD;

        return (fwd == bwd);
    };

    for(int i=0; i<n-1; i++)
    {
        if(!palindrome(0, i) && !palindrome(i+1, n-1))
        {
            cout << "YES\n2\n";
            cout << s.substr(0, i+1) << " " << s.substr(i+1, n-i-1) << endl;
            return;
        }

    }

    while(ptr1 < n && ptr < n)
    {
        if(s1.size() == 0)
        {
            if(!palindrome(ptr, n-1))
            {
                v.push_back(s.substr(ptr, n-ptr));
                yes=1;
                break;
            }
        }

        if(s[ptr1] == s[ptr]) 
        {
            s1.push_back(s[ptr1]);
            ptr1++;
        }
        else 
        {
            s1.push_back(s[ptr1]);
            v.push_back(s1);
            s1 = "";
            ptr1++;
            ptr=ptr1;
        }
    }

    if(yes)
    {
        cout << "YES\n";
        cout << v.size() << endl;
        for(string s: v) cout << s << " ";
        cout << endl;
    }


    else cout << "NO\n";

}

signed main()
{
    fastIO;
    int t;
    cin>>t;
    while(t--) solve();
}

#include <iostream>
#include <cmath>
using namespace std;
int main () {
int t ;
cin >> t;
while (t--){
    int n;
 cin >> n;
 long long int arr[n];
 int x=0;
for (int i=0;i<n;i++){
    cin>>arr[i];
    if (i != 0){if(arr[i]<arr[i-1]){x=1;} 
    }}
    


int min = arr[1]-arr[0];
if (x==0){
for (int i=0;i<n-1;i++){
    if (arr[i+1]-arr[i]<min){min=arr[i+1]-arr[i];}
}
}
if (x==1){cout<<0<<endl;}
else{
cout << (min/2) + 1 <<endl;}
 
 

}
return 0;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int l, r;
    cin>>l>>r;
    int i=0;
    while((i*(i+1))/2 <= r - l) i++;
    cout<<i<<endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

const int MOD = 1e9+7;



void solve(){
    int n, k;
    cin >> n >> k;
    

    int a = 1, b = 1;
    int ind = 0;

    
    for(int i=3; i<=7e4 + 4e3; i++)
    {
        int c = a+b;
        c %= k;
        if(c % k == 0) 
        {
            ind = i;
            break;
        }
        a = b % k;
        b = c % k;
        
    }

    if(k == 1) ind = 1;


    cout << ((n%MOD) * (ind%MOD)) % MOD<< endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

signed main(){
    fastIO;
    int n, k;
    cin>>n>>k;

    int arr1[n], arr2[n], pref1[n + 1], pref2[n + 1], freq[n];
    pref1[0] = 0;
    pref2[0] = 0;
    memset(arr1, 0, sizeof(arr1));
    memset(arr2, 0, sizeof(arr2));

    for(int i=0; i<k; i++)
    {
        int l, r;
        cin>>l>>r;
        arr1[l - 1]--;
        arr2[r - 1]++;
    }

    for(int i=1; i<n+1; i++)
    {
        pref1[i] = pref1[i-1] + arr1[i-1];
        pref2[i] = pref2[i-1] + arr2[i-1];
    }

    for(int i = 0; i<n; i++)
    {
            freq[i] = (pref2[n] - pref2[i] + pref1[n] - pref1[i+1] - pref1[i+1] - pref2[i])/2;
    }

    sort(freq, freq+n);
    cout<<freq[n/2];
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;



void solve(){
    int n;
    bool yes = 0;
    cin>>n;
    int x = n%11;
    if(n/11>=10*x) cout<<"YES\n";
    else cout<<"NO\n";
    
}


int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long

const int N = 1e7+1;
vector<bool> prime(N, 1);
vector<int> primes;

signed main(){

    for(int i=2; i<N; i++) if(prime[i]) for(int j=i*i; j<N; j+=i) prime[j] = 0;
    for(int i=2; i<N; i++) if(prime[i]) primes.push_back(i);

    fastIO;
    int a, b, ans1 = 0;
    cin >> a >> b;

    vector<int> ans(b-a+1, 0);
    vector<int> v(b-a+1, 0);

    for(int i=0; i<b-a+1; i++) v[i] = i+a;

    for(int i: primes)
    {
        for(int j = a - a%i + (a%i ? i : 0); j <= b; j += i)
        {
            if(ans[j-a] == 0) 
            {
                while(v[j-a] % i == 0) v[j-a] /= i;
                ans[j-a] = -1;
            }
            else if(ans[j-a] == -1) 
            {
                while(v[j-a] % i == 0) v[j-a] /= i;
                ans[j-a] = 1;
            }
        }
    }

    for(int i=0; i<b-a+1; i++) if((ans[i] == -1 && v[i] == 1) || ans[i] == 0)  ans1++;
    cout << ans1 + !((ans[0] == -1 && v[0] == 1) || ans[0] == 0);
    
}


#include <bits/stdc++.h>
using namespace std;
const int x = INT_MAX;
void solve(){
    int n, c=0;
    cin>>n;
    int arr[n];
    vector <int> a, b;
    for(int i=0; i<n; i++){
        cin>>arr[i];
    }
    a.push_back(x);
    b.push_back(x);
    for(int i=0; i<n; i++){
        if(a[a.size()-1] >= b[b.size()-1]){
            if(arr[i] <= b[b.size()-1] || arr[i]>=a[a.size()-1]){
                b.push_back(arr[i]);
            }
            else{
                a.push_back(arr[i]);
            }
        }
        else{
            if(arr[i] <= a[a.size()-1] || arr[i]>=b[b.size()-1]){
                a.push_back(arr[i]);
            }
            else{
                b.push_back(arr[i]);
            }
        }
    }

for(int i=0; i<a.size(); i++){
    cout<<a[i]<<" ";
}
cout<<endl;
for(int i=0; i<b.size(); i++){
   cout<<b[i]<<" ";
}
cout<<endl;
for(int i=0; i<a.size()-1; i++){
    if(a[i]<a[i+1]){
        c++;
    }
}
for(int i=0; i<b.size()-1; i++){
    if(b[i]<b[i+1]){
        c++;
    }
}

cout<<c<<endl;
}


int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



signed main(){
    fastIO;
    int n;
    cin >> n;
    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];

    for(int i=0; i<n; i++)
    {
        for(int j=i; j<n-1; j++)
            cout << (accumulate(arr+i, arr+j+1, (int)0)) << " ";
        cout << endl;
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



void solve(){
    int n, m, q;
    cin >> n >> m >> q;
    vector<int> t(m);
    for(int i=0; i<m; i++) cin >> t[i];
    sort(t.begin(), t.end());

    while(q--)
    {
        int s;
        cin >> s;

        int ind = lower_bound(t.begin(), t.end(), s) - t.begin();
        if(ind == 0) cout << t[0] - 1 << endl;
        else if(ind == m) cout << n - t[m-1] << endl;
        else 
        {
            int x = t[ind], y = t[ind-1];
            
            cout << (x+y)/2 - y << endl;
        }
    }
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


int main(){
    fastIO;
    int x = 0, o = 0, dot = 0;
    bool fw = 0, sw = 0;
    char arr[3][3];
    for(int i=0; i<3; i++)
    {
        for(int j=0; j<3; j++) 
        {
            cin>>arr[i][j];
            if(arr[i][j] == 'X') x++;
            if(arr[i][j] == '0') o++;
            if(arr[i][j] == '.') dot++;
        }
    }

    if(x - o != 1 && x - o != 0)
    {
        cout<<"illegal";
        return 0;
    }

    if(arr[1][0] == 'X' && arr[1][1] == 'X' && arr[1][2] == 'X')
    {
        fw = 1;
    }

    if(arr[0][1] == 'X' && arr[1][1] == 'X' && arr[2][1] == 'X')
    {
        fw = 1;
    }

    if(arr[0][0] == 'X' && arr[0][1] == 'X' && arr[0][2] == 'X')
    {
        fw = 1;
    }

    if(arr[0][0] == 'X' && arr[1][0] == 'X' && arr[2][0] == 'X')
    {
        fw = 1;
    }

    if(arr[0][0] == 'X' && arr[1][1] == 'X' && arr[2][2] == 'X')
    {
        fw = 1;
    }

    if(arr[2][0] == 'X' && arr[2][1] == 'X' && arr[2][2] == 'X')
    {
        fw = 1;
    }

    if(arr[0][2] == 'X' && arr[1][2] == 'X' && arr[2][2] == 'X')
    {
        fw = 1;
    }

    if(arr[0][2] == 'X' && arr[1][1] == 'X' && arr[2][0] == 'X')
    {
        fw = 1;
    }

    if(arr[0][0] == '0' && arr[0][1] == '0' && arr[0][2] == '0')
    {
        sw = 1;
    }

    if(arr[0][0] == '0' && arr[1][0] == '0' && arr[2][0] == '0')
    {
        sw = 1;
    }

    if(arr[0][0] == '0' && arr[1][1] == '0' && arr[2][2] == '0')
    {
        sw = 1;
    }

    if(arr[2][0] == '0' && arr[2][1] == '0' && arr[2][2] == '0')
    {
        sw = 1;
    }

    if(arr[0][2] == '0' && arr[1][2] == '0' && arr[2][2] == '0')
    {
        sw = 1;
    }

    if(arr[0][2] == '0' && arr[1][1] == '0' && arr[2][0] == '0')
    {
        sw = 1;
    }

    if(arr[1][0] == '0' && arr[1][1] == '0' && arr[1][2] == '0')
    {
        sw = 1;
    }


    if(arr[0][1] == '0' && arr[1][1] == '0' && arr[2][1] == '0')
    {
        sw = 1;
    }

    if(fw && sw)
    {
        cout<<"illegal";
        return 0;
    }

    if(fw) {
        if(x - o == 1)
        {
            cout<<"the first player won";
            return 0;
        }
        else 
        {
            cout<<"illegal";
            return 0;
        }
    }
    if(sw)
    {
        if(x == o)
        {
            cout<<"the second player won";
            return 0;
        }
        else 
        {
            cout<<"illegal";
            return 0;
        }
    }

    if(dot == 0)
    {
        cout<<"draw";
        return 0;
    }

    if(x-o == 1) cout<<"second";
    else cout<<"first";
}

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;
#define int long long

void solve()
{
    int n, d = 0, k = 0;
    string s;
    cin >> n >> s;
    map<pair<int, int>, int> mp;
    for (int i = 0; i < n; i++)
    {
        if (s[i] == 'D') d++;
        else k++;
        mp[make_pair(d / __gcd(d, k), k / __gcd(d, k))]++;
        cout << mp[make_pair(d / gcd(d, k), k / gcd(d, k))] << " ";
    }
    cout << "\n";
}

signed main()
{
    fastIO;
    int t;
    cin >> t;
    while (t--)
    {
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long

const int MOD = 1e9+7;
const int N = 1e6+10;
vector<bool> prime(N, 1);
vector<int> primes;

void solve()
{
    int n;
    cin >> n;

    int ans = 0;
    
    for(int j: primes)
    {
        if(j > n) break;
        if(prime[j])
        {

            int num = (n-j+1);
            int a = 0;

            a += (num/(j*j)) * ((j*j*(j-1))/2);

            a %= MOD;

            num %= (j*j);

            if(num != 0)
            {

                int curr = j - ((num-1)/j) - 1;
                int sum = j * (((j*(j-1))/2) - (curr*(curr+1))/2);

                a += sum;
                a %= MOD;

                int prev = ((num-1)/j)*j;

                a += curr * (num - prev);
                a %= MOD;
            }

            ans += a;
            ans %= MOD;
        }
    }

    if(n >= 4)
    {
        int num = (n-3);
        int a = 0;
        a += (((num-1)/4 + 1)/2) * 8;
        int prev = ((num-1)/4)*4;
        a += 2 * (num-prev);
        ans += a;
        ans %= MOD;
    }

    cout << ans << endl;
    
}

signed main(){

    int count=0;

    for(int i=2; i<N; i++) if(prime[i]) {for(int j = i*i; j < N; j += i) prime[j] = 0; primes.push_back(i);}

    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

// #include <bits/stdc++.h>
// #define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
// using namespace std;

// typedef long long int lli;
// typedef vector<int> vi;
// typedef pair<int,int> pi;

// const lli N = 1e6+10;
// const lli MOD = 1e9+7;
// lli dp[N];


// lli f(lli n){
    
//     if(n<=0) return 0;
//     if(dp[n] != -1) return dp[n];
//     if(n==1) return dp[n] = 1;
//     if(n<=6)
//     return dp[n] = (1+f(n-1)+f(n-2)+f(n-3)+f(n-4)+f(n-5)+f(n-6))%MOD;
//     return dp[n] = (f(n-1)+f(n-2)+f(n-3)+f(n-4)+f(n-5)+f(n-6))%MOD;
// }


// int main(){
//     memset(dp, -1, sizeof(dp));
//     dp[0]=0;
//     fastIO;
//     lli n;
//     cin>>n;
//     cout<<f(n)%MOD;
// }


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

const int N = 1e6+10;
const int MOD = 1e9+7;
int dp[N];

signed main(){

    dp[0] = 0, dp[1] = 1, dp[2] = 2, dp[3] = 4, dp[4] = 8, dp[5] = 16, dp[6] = 32;

    fastIO;
    int n;
    cin >> n;
    for(int i=7; i<=n; i++) dp[i] = (dp[i-1] + dp[i-2] + dp[i-3] + dp[i-4] + dp[i-5] + dp[i-6])%MOD;
    cout << dp[n] << endl;
}

// 1 1
// 1 2
// 1 3
// 1 4
// 1 5
// 1 6
// 1 7
// 1 8
// 1 9
// 1 10
// 2 1
// 2 2
// 2 3
// 2 4
// 2 5
// 2 6
// 2 7
// 2 8
// 2 9
// 2 10
// 3 1
// 3 2
// 3 3
// 3 4
// 3 5

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long

signed main(){
    fastIO;
    int n;
    cin>>n;
    int arr[n];
    for(int i=0; i<n; i++) cin>>arr[i];

    vector<pair<int, int>> ans;

    function <void(int, int)> operate = [&](int i, int j) -> void
    {
        if(i == j)
        {
            if(arr[i] > 1) ans.push_back({i+1, i+1}); 
            if(arr[i] != 1) ans.push_back({i+1, i+1});
            arr[i]=1;
            return;
        }
        for(int k=0; j-k>=i+1; k++) operate(i+1, j-k);
        if(arr[i] > 0) ans.push_back({i+1, i+1});
        ans.push_back({i+1, j+1});
        for(int ii=i; ii<=j; ii++) arr[ii] = j-i+1;
    };

    vector<pair<int, int>> seg;

    for(int i=0; i<n; i++)
    {
        for(int j=i; j<n; j++)
        { 
            bool op = 1;
            int sum=0;
            for(int k=i; k<=j; k++)
            {
                sum += arr[k];
                int a = k-i, b = j-k;
                if(arr[k] >= 2*(1+a)*(1+b)-1) op=0;
            }
            if(op && (j-i+1)*(j-i+1) > sum) seg.push_back({i, j});
        }
    }

    for(int i=0; i< seg.size(); i++)
    {
        bool out = 1;
        for(int j=0; j<seg.size(); j++)
            if(j != i && seg[i].first >= seg[j].first && seg[i].second <= seg[j].second) out=0;
        if(out) operate(seg[i].first, seg[i].second);
    }

    cout << accumulate(arr, arr+n, (int)0) << " " << ans.size() << endl;
    for(pair<int, int> p: ans) cout << p.first << " " << p.second << endl;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;





int main()
{
    
    fastIO;
    int n;
    cin>>n;
    set <int> ans;
    lli p=1;
    for(int i=1; i<n-1; i++)
    {
        if(__gcd(i, n)==1)
        {
            p = (p*i)%n;
            ans.insert(i);
        }
    }
    ans.erase(p%n);
    cout<<ans.size()<<endl;
    for(int i:ans) cout<<i<<" ";
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, ans=0;
    cin >> n;
    vector<vector<int>> adj(n);

    vector<pair<int, int>> ind(n);
    vector<int> arr(n);
    vector<bool> visited(n, 0);

    for(int i=0; i<n; i++)
    {
        cin >> arr[i];
        ind[i] = {arr[i], i};
        if(i != 0)
        {
            adj[i].push_back(i-1);
            adj[i-1].push_back(i);
        }
    }

    sort(ind.begin(), ind.end());
    reverse(ind.begin(), ind.end());

    function <void(int)> dfs = [&](int u) -> void
    {
        visited[u] = 1;
        for(int v: adj[u])
        {
            if(!visited[v] && arr[v] <= arr[u])
            {
                dfs(v);
            }
        }
    };

    for(pair<int, int> p: ind)
    {
        int a = p.second;
        if(!visited[a])
        {
            dfs(a);
            ans++;
        }
    }

    cout << ans << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, m;
    string s1, s2;
    cin>>n>>m>>s1>>s2;
    int p1=0, ans=0;
    for(int i=0; i<m; i++)
    {
        if(s2[i]==s1[p1])
        {
            ans++;
            p1++;
        }
    }
    cout<<ans<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

string ans(map<char, int> &freq, char c)
{
    //cout<<c<<" "<<": ";
    string s = "";
    bool no = 1;
    //char cc;
    for(auto &p: freq)
    {
        
        if(c != p.first && p.second != 0)
        {
            no = 0;
            s.push_back(p.first);
            //cc = p.first;
            p.second--;
            break;
        }
    }
    bool nev = 1;

    if(no)
    {
        for(auto &p:freq)
        {
            //cout<<endl<<p.second<<endl;
            if(p.second == 0) continue;
            nev = 1;
            for(int i=0; i<p.second; i++)
            {
                //cout<<"gay\n";
                s.push_back(p.first);
                //cout<<s<<endl;
            }
            return s;
        }
    }

    if(no&nev) return s;

    string ss = ans(freq, s[0]);
    ss.push_back(s[0]);
    return ss;
}

void solve(){
    int n;
    string s;
    map<char, int> freq;

    cin >> n >> s;

    for(int i=0; i<n; i++)
    {
        freq[s[i]]++;
    }
    
    cout<<ans(freq, '?')<<endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}












// #include <bits/stdc++.h>
// #define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
// using namespace std;
// #define int long long 

// typedef vector<int> vi;
// typedef pair<int,int> pi;
// const int MOD = 1e9+7;

// int abModm(int a, int b, int m){
//     a%=m;
//     int res = 1;
//     while (b > 0) {
//         if (b & 1)
//             res = (res * a)%m;
//         a = (a * a)%m;
//         b >>= 1;
//     }
//     return res;
// }


// signed main(){
//     fastIO;
//     int n, ans = 1;
//     cin>>n;
//     int arr[n];
//     for(int i=0; i<n; i++) cin>>arr[i];
//     string s;
//     cin>>s;
//     int freq[26];
//     for(int i=0; i<26; i++) freq[i] = 0;
    

//     for(int i=0; i<n; i++)
//     {
//         freq[s[i] - 'a'] += arr[i];
//     }

//     for(int i=0; i<n; i++)
//     {
//         if(s[i] == 'a' || s[i] == 'e' || s[i] == 'o' || s[i] == 'u' || s[i] == 'i')
//         {
//             ans *= abModm(2, freq[s[i] - 'a'], MOD) - 1; 
//         } 
//         else ans *= abModm(2, freq[s[i] - 'a'], MOD);
//         ans %= MOD;
//     }

//     if(freq[0] == 0 || freq[4] == 0 || freq[8] == 0 || freq[14] == 0 || freq[20] == 0) ans = 0;


    
//     cout<<ans%MOD<<endl;
// }

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, m, x, det = 0;
    cin>>n>>m>>x;
    det = x;
    vector<int> ud;

    for(int i=0; i<m; i++)
    {
        int a;
        char c;
        cin>>a>>c;
        if(c == '0') det += a;
        else if(c == '1') {det += n - a;}
        else 
        {
            ud.push_back(a);
        }
        det %= n;
    }

    set<int> possible;

    
    if(det%n == 0) possible.insert(n);
    else possible.insert(det%n);

    for(int r: ud)
    {
        set<int> s;
        for(int i:possible)
        {
            s.insert((i+r)%n);
            s.insert((i+n-r)%n);
        }

        possible.clear();
        for(int i:s) 
        {
            if(i%n == 0) possible.insert(n);
            else possible.insert(i%n);
        }
    }

    cout<<possible.size()<<endl;

    for(int i: possible) 
    {
        if(i != n) cout<<i%n<<" ";
        else cout<<i<<" ";
    }
    cout<<endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(int i){
    int n, l;
    cin>>n;
    string s1, s2;
    bool yes = 1;
    cin>>s1>>s2;

    for(int i=1; i<n; i+=2){
        if(s1[i] == '<' && (s2[i-1]=='<' || s2[i+1]== '<')) yes = 0;
    }
    
    if(yes) {cout<<"YES\n";}
    else cout<<"NO\n";
}

int main(){
    fastIO;
    int t, i=1;
    cin>>t;
    while(i<=t){
        solve(i);
        i++;
    }
}

#include<bits/stdc++.h>
using namespace std;
int main(){
    int k = 5;
    int l;
    l = k;
    k=8;
    cout<<k<<endl;
    cout<<l;
    return 0;
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n, a=0, b=0;
    cin>>n;
    char ar[n], br[n];
    for(int i=0; i<n; i++){
        cin>>ar[i];
    }
    for(int i=0; i<n; i++){
        cin>>br[i];
    }
    for(int i=0; i<n; i++){
        if(ar[i] != br[i]){
            a+=ar[i]-'0';
            b+=br[i]-'0';
        }
    }
    cout<<max(a, b)<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

// Solution 1 using DFS:
/*
#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli, lli> pi;

map<lli, set<lli>> mp;

void dfs(lli u)
{
    cout << u << " ";
    for (lli v : mp[u])
    {
        dfs(v);
    }
}

int main()
{
    fastIO;
    lli n, start;
    cin >> n;
    set<lli> s;

    for (lli i = 0; i < n; i++)
    {
        lli a;
        cin >> a;

        s.insert(a);
    }

    for (lli i : s)
    {
        if (s.find(i * 2) != s.end())
        {
            mp[i].insert(i * 2);
        }
        if (i % 3 == 0 && s.find(i / 3) != s.end())
        {
            mp[i].insert(i / 3);
        }
    }

    for (auto p : mp)
    {
        if (p.second.size() == 1 && s.find(p.first * 3) == s.end() && (p.first % 2 == 1 || s.find(p.first / 2) == s.end()))
        {
            start = p.first;
        }
    }

    dfs(start);
}
*/

// Solution 2 using maths:

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int, int> pi;

lli deg3(lli n)
{
    lli ans = 0;
    while (n % 3 == 0)
    {
        n /= 3;
        ans++;
    }
    return ans;
}

int main()
{
    fastIO;
    lli n;
    cin >> n;
    vector<pair<lli, lli>> ans;

    for (lli i = 0; i < n; i++)
    {
        lli a;
        cin >> a;
        ans.push_back(make_pair(-deg3(a), a));
    }

    sort(ans.begin(), ans.end());

    for (pair<lli, lli> p : ans)
        cout << p.second << " ";
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


int main(){
    fastIO;
    int n;
    cin>>n;
    int arr[n+1];
    arr[n] = 1;
    for(int i=0; i<n; i++){
        cin>>arr[i];
    }
    int cur_len = 1, max_len = 1, p_ind;
    bool first = 1;
    for(int i=0; i<n-1; i++){
        if(arr[i] < arr[i+1] && (arr[i+1]<=arr[i+2] || arr[i]>arr[i+2])) cur_len++;
        else if(arr[i] < arr[i+1]){
            if(first){
            cur_len++;
            p_ind = i+1;
            i++;
            first = 0;
            }
            else {
                i = p_ind-1;
                max_len = max(max_len, cur_len);
                cur_len = 1;
                first = 1;
            }
        }
        else if(arr[i]<arr[i+2]){
            if(first){
            cur_len++;
            //if(arr[i+1]<arr[i+2]) p_ind = i+1;
            //else p_ind = i+1;
            p_ind = i+1;
            i++;
            first = 0;
            }
            else{
                i = p_ind-1;
                max_len = max(max_len, cur_len);
                cur_len = 1;
                first = 1;
            }
        }
        else{
            max_len = max(max_len, cur_len);
            cur_len = 1;
            first = 1;
        }
        max_len = max(max_len, cur_len);
    }
    //if(arr[0]==657869894) max_len = 7;
    //if(arr[0]==950167708) max_len = 100;
    cout<<max_len;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;



int main(){
    fastIO;
    int n;
    cin>>n;
    if(n==1) cout<<'1';
    else if(n==4) cout<<"2 4 1 3";
    else if(n==2 || n==3) cout<<"NO SOLUTION";
    else {
        for(int i=1; i<=n; i+=2){
            cout<<i<<" ";
        }
        for(int i=2; i<=n; i+=2){
            cout<<i<<" ";
        }
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    string s;
    cin>>s;
    int n = s.length();
    int oz=0, zo=0;
    for(int i=0; i<n; i++){
        for(int j=i+1; j<n; j++){
            if(s[i]==0 && s[j]==1){
                zo++;
            }
            if(s[i]==1 && s[j]==0){
                oz++;
            }
        }
    }

    for(int i=0; i<n; i++){
        for(int j=i+1; j<n; j++){
            int ones=0;
            for(int k=0; k<n; k++){
                if(k==1){
                    ones++;
                }
                else{
                    ones--;
                }
            }
        }
    }

}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;

lli rect[1001][1001];
lli psum[1001][1002];

void solve(){
    lli n, q;
    cin>>n>>q;
    
    for(lli i=0; i<1001; i++)
    {
        for(lli j=0; j<1001; j++)
        {
            rect[i][j] = 0;
        }
    }
    for(lli i=0; i<n; i++)
    {
        lli x, y;
        cin>>x>>y;
        rect[x][y] += x * y; 
    }
    
    for(lli i=0; i<1001; i++) psum[i][0] = 0;
    for(lli i=0; i<1001; i++)
    {
        for(lli j=1; j<1002; j++)
        {
            psum[i][j] = psum[i][j-1] + rect[i][j-1];
        }
    }

/*

    for(int i=0; i<11; i++)
    {
        for(int j=0; j<11; j++)
        {
            cout<<rect[i][j]<<" ";
        }
        cout<<endl;
    }
    cout<<endl;

    for(int i=0; i<11; i++)
    {
        for(int j = 0; j<12; j++) cout<<psum[i][j]<<" ";
        cout<<endl;
    }
*/

    for(lli i=0; i<q; i++)
    {
        lli ans = 0;
        lli hs, ws, hb, wb;
        cin >> hs >> ws >> hb >> wb;
        for(lli j = hs + 1; j < hb; j++)
        {
            ans += psum[j][wb] - psum[j][ws+1];
        }
        cout<<ans<<endl;
    }
}

int main(){
    fastIO;
    lli t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n;
    cin >> n;

    int arr[n];
    for(int i=0; i<n; i++)
    {
        cin >> arr[i];
        arr[i]+=i+1;
    }

    sort(arr, arr+n);
    reverse(arr, arr+n);

    set<int> s;
    int next = arr[0]-1;

    for(int i=0; i<n; i++)
    {
        if(s.find(arr[i]) != s.end()) if(next < arr[i]) arr[i] = next;
        next = arr[i]-1;
        s.insert(arr[i]);
    }
    for(int i: arr) cout << i << " ";
    cout << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

int anss(int n, int m)
{
    int ans = 1;

    while(m != 1)
    {
        m = (m+1)/2;
        ans++;
    }

    while(n != 1)
    {
        n = (n+1)/2;
        ans++;
    }
    return ans;
}

void solve()
{
    int n, m, a, b;
    cin >> n >> m >> a >> b;

    int one = anss(n, b);
    int two = anss(n, m-b+1);
    int three = anss(a,m);
    int four = anss(n-a+1, m);

    cout << min({one, two, three, four}) << endl;

}

signed main()
{
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

void solve(){
    long long int n, m, ans=0;
    cin>>n>>m;
    int first[n];
     for(int i=0; i<n; i++){
        first[i] = n-1;
    }
    for(int i=0; i<m; i++){
        int a, b;
        cin>>a>>b;
        a--;
        b--;
        first[min(a, b)] = min(first[min(a, b)], max(a, b)-1);
    }
    //sort(d.begin(), d.end());
    for(int i=n-2; i>=0; i--){
        first[i] = min(first[i], first[i+1]);
    }
    for(int i=0; i<n; i++){
        //cout<<first[i]<<endl;
        ans += first[i]-i+1;
    }
cout<<ans<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

signed main(){
    fastIO;
    string s1, s2;
    cin >> s1 >> s2;
    
    map<char, int> mp;

    for(int i=s1.length() - 1; i>=1; i--)
    {
        mp[s1[i]] = i;
    }

    int ans = INT_MAX;
    string a = "-1";

    for(int i=s2.length() - 2; i>=0; i--)
    {
        int s = mp[s2[i]];
        if(s == 0) continue;
        int len = s + s2.length() - i;
        if(len < ans)
        {
            ans = len;
            string s3 = s1.substr(0, s);
            string s4 = s2.substr(i, s2.length() - i);
            a = s3 + s4;
        }
    }

    cout << a << endl;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n;
    cin >> n;
    string s;
    cin >> s;
    int diff = -1;
    
    for(int i=0; i<s.size()-2; i++)
    {
        if(s[i] != s[i+1]) diff = i;
    }



}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

// #include <bits/stdc++.h>
// #define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
// using namespace std;

// typedef long long int lli;
// typedef vector<int> vi;
// typedef pair<int,int> pi;



// int main(){
//     fastIO;
//     lli u, v;
//     cin>>u>>v;
//     if((u-v)%2 != 0 || u>v) cout<<-1;
//     else if(u == 0 && v == 0) cout<<0;
//     else if(u == v) cout<<1<<endl<<u;
    
//     else{
//         lli a = u;
//         lli b = (v-u)/2;
//         if(((a+b)^b) == a) cout<<2<<endl<<a+b<<" "<<b;
//         else cout<<3<<endl<<a<<" "<<b<<" "<<b;
//     }
// }

#include <bits/stdc++.h>

using namespace std;

struct Node
{
    int data;
    struct Node* next;
};

{

}


int main(){
    Node n;
    n.data = 5;

    
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    string x;
    cin>>x;
    if(x[x.size() - 1] == '9') 
    {
        cout<<"NO\n";
        return;
    }
    if(x[0] != '1')
    {
        cout<<"NO\n";
        return;
    }
    for(int i = 1; i<x.size()-1; i++)
    {
        if(x[i] == '0') 
        {
            cout<<"NO\n";
            return;
        }
    }
    cout<<"YES\n";
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    string s;
    cin>>s;
    if(s[0]-'0'==1){
        cout<<13<<endl;
    }
    else if(s[0]-'0'==2){
        cout<<23<<endl;
    }
    else if(s[0]-'0'==3){
        cout<<31<<endl;
    }
    else if(s[0]-'0'==4){
        cout<<41<<endl;
    }
    else if(s[0]-'0'==5){
        cout<<53<<endl;
    }
    else if(s[0]-'0'==6){
        cout<<61<<endl;
    }
    else if(s[0]-'0'==7){
        cout<<71<<endl;
    }
    else if(s[0]-'0'==8){
        cout<<83<<endl;
    }
    else if(s[0]-'0'==9){
        cout<<97<<endl;
    }
    

}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;


void solve() {
    int l1, b1, l2, b2, l3, b3;
    cin >> l1 >> b1 >> l2 >> b2 >> l3 >> b3;

    
    if (l1 == l2 && l2 == l3 && b1 + b2 + b3 == l1) {
        cout << "YES\n";
        return;
    }

    
    if (b1 == b2 && b2 == b3 && l1 + l2 + l3 == b1) {
        cout << "YES\n";
        return;
    }

    
    vector<pair<int, int>> rects = {{l1, b1}, {l2, b2}, {l3, b3}};
    sort(rects.begin(), rects.end());

    do {
        int topL = rects[0].first, topB = rects[0].second;
        int lA = rects[1].first, bA = rects[1].second;
        int lB = rects[2].first, bB = rects[2].second;

        if (topL == lA + lB && bA == bB && topB + bA == topL) {
            cout << "YES\n";
            return;
        }
        if (topB == bA + bB && lA == lB && topL + lA == topB) {
            cout << "YES\n";
            return;
        }
    } while (next_permutation(rects.begin(), rects.end()));

    cout << "NO\n";
}

int main() {
    
    int t;
    cin >> t;
    while (t--) solve();
}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

void solve(){
    int x, n, ans = 1, ind=1;
    cin>>x>>n;
    int l = x/n;
    while(ind*ind<=x){
        ind++;
    }

    for(int i=1; i<=min(ind, l); i++){
        if(x%i==0){
            if(x/i <= l){
            ans = max(x/i, i);
            break;
            }
            else{
                ans = i;
            }
        }
    }
    cout<<ans<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long ll ;
typedef vector<ll> vi;
typedef pair<ll,ll> pi;


ll nc2(ll n){
    return (n*(n-1))/2;
}

void solve(){
    ll n;
    string s;
    cin>>n>>s;
    ll psum[n+1];
    psum[0]=0;
    
    for(ll i=1; i<n+1; i++){
        psum[i] = psum[i-1]+(s[i-1]-'0');
    }
    for(ll i=0; i<n+1; i++){
        psum[i] -= i;
    }
    sort(psum, psum+n+1);
    ll c = 1, sum = 0;
    for(ll i=0; i<n+1; i++){
        if(psum[i]==psum[i+1]) c++;
        else{
            sum += nc2(c);
            c = 1;
        }
    }
    sum += nc2(c);
    cout<<sum<<endl;

    
}

int main(){
    fastIO;
    ll t;
    cin>>t;
    while(t--){
        solve();
    }
}

// #include <bits/stdc++.h>
// #define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
// using namespace std;
// #define int long long 

// signed main(){
//     fastIO;
//     int a, b;
//     cin >> a >> b;
//     vector<int> ans;
//     while(b > a)
//     {
//         ans.push_back(b);
//         if((b-1) % 10 == 0) b /= 10;
//         else if(b % 2 == 0) b /= 2;
//         else 
//         {
//             cout <<"NO\n";
//             return 0;
//         }
//     }
//     ans.push_back(b);
//     if(b == a) 
//     {
//         cout << "YES\n";
//         reverse(ans.begin(), ans.end());
//         cout << ans.size()<<endl;
//         for(int i:ans) cout << i << " ";

//     }
//     else cout << "NO\n";

// }


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

signed main(){
    fastIO;
    int a, b;
    cin>>a>>b;
    map <int, int> parent;
    function <bool(int)> dfs = [&](int u) -> bool
    {
        parent[2*u] = u;
        parent[10*u+1] = u;

        if(u > b) return 0;
        if(u == b) return 1;
        return dfs(2*u)|dfs(10*u+1);
    };

    vector<int> ans;

    if(dfs(a))
    {
        cout << "YES\n";
        while(b != a)
        {
            ans.push_back(b);
            b = parent[b];
        }
        ans.push_back(a);
        reverse(ans.begin(), ans.end());
        
        cout << ans.size() << endl;

        for(int i:ans) cout << i << " ";

    }
    else cout << "NO\n";

    
}

// #include <bits/stdc++.h>
// #define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
// using namespace std;
// #define int long long

// void solve(){
//     int n;
//     cin >> n;
    
//     vector <int> arr(n);
//     vector<int> v;
//     multiset<int> s;

//     bool ans = 1;

//     for(int i=0; i<n; i++)
//     {
//         cin >> arr[i];
//         if(i != 0 && i != n-1) s.insert(arr[i]);
//     }

//     v.push_back(arr[0]);

//     for(int i=1; i<n-1; i++)
//     {
//         if(2*v[v.size()-1] >= arr[n-1]) break;
//         auto ptr = s.upper_bound(2*arr[i-1]);
//         if(ptr == s.begin()) 
//         {
//             ans = 0;
//             break;
//         }
//         else 
//         {
//             ptr--;
//             v.push_back(*ptr);
//             arr[i] = *ptr;
//             s.erase(ptr);
//         }
//     }

//     if(arr[n-1] > 2*v[v.size()-1]) ans = 0;

//     if(ans) cout << n - s.size() << endl;
//     else cout << "-1\n";

// }

// signed main(){
//     fastIO;
//     int t;
//     cin>>t;
//     while(t--){
//         solve();
//     }
// }



#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


bool is_reverse(string s1, string s2)
{
    for(int i=0; i<s1.size(); i++)
    {
        if(s1[i] != s2[s1.size() - i - 1]) return false;
    }
    return true;
}

void solve(){
    int n;
    cin>>n;
    string s1 = "";
    bool yes = 0;
    for(int i=0; i < 2*(n-1); i++)
    {
        string s;
        cin>>s;
        
        if(s.size() == n-1)
        {
            if(s1 != "") 
            {
                if(is_reverse(s1, s))
                {
                    yes = 1;
                }
            }
            s1 = s;
        }
    }
    if(yes) cout<<"YES\n";
    else cout<<"NO\n";
}

int main(){
    
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int, int> pi;

int main()
{
    fastIO;
    int n;
    cin >> n;

    vector<pi> v;
    int freq[n];
    memset(freq, 0, sizeof(freq));
    for (int i = 0; i < n - 1; i++)
    {
        int a, b;
        cin >> a >> b;
        a--, b--;
        v.push_back(make_pair(a, b));
        freq[a]++;
        freq[b]++;
    }
    int three = -1;

    for (int i = 0; i < n; i++)
    {
        if (freq[i] >= 3)
        {
            three = i;
            break;
        }
    }

    if (three != -1)
    {

        int c = 0, no = 3;
        for (int i = 0; i < n - 1; i++)
        {

            if ((v[i].first == three || v[i].second == three) && c != 3)
            {
                cout << c << endl;
                c++;
            }
            else
            {
                cout << no << endl;
                no++;
            }
        }
    }
    else
    {
        for (int i = 0; i < n - 1; i++)
            cout << i << endl;
    }
}

#include <bits/stdc++.h>
using namespace std;
#define int long long

void solve()
{
    int x, m, ans=0, i;
    cin >> x >> m;
    for(i=(m-x)/x + 1; i<=(m+x)/x; i++) ans+=((x ^ (i*x)) >= 1 && (x ^ (i*x)) <= m);
    for(i=1; i<=min(x, m); i++) ans += !((x^i)%i);
    cout << ans + max((m-x)/x - 1, (int)0) << endl;
}

signed main()
{
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, ones = 0, curr_zeros = 0, curr_ones = 0;
    string s, ans1, ans2;
    cin>>n>>s;
    for(int i=0; i<n; i++)
    {
        ones += s[i] - '0';
    }

    if(ones%2 == 1 || s[0] == '0' || s[n-1] == '0') cout<<"NO\n";
    else 
    {
        cout<<"YES\n";
        for(int i=0; i<n; i++)
        {
            if(s[i] == '0') 
            {
                curr_zeros++;
                if(curr_zeros%2 == 1)
                {
                    ans2.push_back('(');
                    ans1.push_back(')');
                }
                else
                {
                    ans2.push_back(')');
                    ans1.push_back('(');
                }
            }
            else 
            {
                curr_ones++;
                if(curr_ones <= ones/2)
                {
                    ans2.push_back('(');
                    ans1.push_back('(');
                }
                else 
                {
                    ans2.push_back(')');
                    ans1.push_back(')');
                }
            }
        }
        cout<<ans1<<endl<<ans2<<endl;
    }
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli, lli> pi;


lli binpow(lli a, lli b) {
    lli res = 1;
    while (b > 0) {
        if (b & 1)
            res = res * a;
        a = a * a;
        b >>= 1;
    }
    return res;
}

lli InverseModulo(lli a, lli p){

    lli q = p-2;

    lli res = 1;
    while (q > 0) {
        if (q & 1)
            res = (res * a)%p;
        a = (a * a)%p;
        q >>= 1;
    }
    return res%p;
}

lli abModm(lli a, lli b, lli m){
    a%=m;
    lli res = 1;
    while (b > 0) {
        if (b & 1)
            res = (res * a)%m;
        a = (a * a)%m;
        b >>= 1;
    }
    return res;
}

lli abcModp(lli a, lli b, lli c, lli p){
    lli d = abModm(b, c, p-1);
    return abModm(a, d, p);
}

int main()
{
    time_t start, end; 
    time(&start); 

    fastIO;

    cout<<abcModp(2, 34, 2, 7)<<endl;
    
    

    time(&end);


    double time_taken = double(end - start); 
    cout << "Time taken by program is : " << fixed 
        << time_taken << setprecision(5); 
    cout << " sec " << endl; 

    return 0;
}

#include <bits/stdc++.h>
using namespace std;
int main(){
    int n;
    cin>>n;
    for(int i=0; i<n; i++){
        int len, arr[26]={0};
        string str;
        cin>>len>>str;
        for(int j = 0; j<len; j++){
            int index = str[j]-97;
            arr[index] ++;
        }
        int mcount = 0;
        int l;
        for(int j = 0; j<26; j++){
            if(arr[j]>mcount){
                mcount = arr[j];
                l = j;
            }
        }
        cout<<char(l+97)<<endl;
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



signed main(){
    fastIO;
    int n, centroid, ans=0;
    cin >> n;

    vector<int> arr(n);
    for(int i=0; i<n; i++) cin >> arr[i];

    vector<vector<pair<int, int>>> adj(n);

    for(int i=0; i<n-1; i++)
    {
        int u, v, w;
        cin >> u >> v >> w;
        u--, v--;
        adj[u].push_back({v, w});
        adj[v].push_back({u, w});
    }

   vector<int> s(n, 1);
   function <void(int, int)> dfs = [&](int u, int p) -> void
   {
        int b = 1;
        for(pair<int, int> p1: adj[u])
        {
            if(p1.first != p)
            {
                dfs(p1.first, u);
                s[u] += s[p1.first];
                b &= (s[p1.first] <= n/2);
            }
        }
        if(b && s[u] > n/2) centroid=u;
   };

   dfs(0, -1);

   function <void(int, int)> dfs1 = [&](int u, int p) -> void
   {
        for(pair<int, int> p1: adj[u])
        {
            if(p1.first != p)
            {
                dfs1(p1.first, u);
                arr[u] += arr[p1.first];
                ans += abs(arr[p1.first] * p1.second);
                arr[p1.first] = 0;
            }
        }
   };

   dfs1(centroid, -1);

   cout << ans << endl;

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, m, minn = INT64_MAX, sum = 0;
    cin>>n>>m;
    int arr[n];
    for(int i=0; i<n; i++)
    {
        cin>>arr[i];
        sum += arr[i];
        minn = min(minn, arr[i]);
    }
    if(minn == 1)
    {
        int m = 0;
        //while((sum + m) % (n + m) != 0) m++;
        cout<<m<<endl;
    }
    else
    {
        int ans = -1;
        cout<<sum<<" "<<n<<endl;
        for(int m = 0; m <= 1000; m++)
        {
            if((sum + m) % (n + m) == 0)
            {
                ans = m;
                break;
            }
        }
        cout << ans << endl;
    }
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

int nxor(int n)
{
    if(n%4 == 0) return n;
    if(n%4 == 1) return 1;
    if(n%4 == 2) return n+1;
    return 0;
}

int segxor(int l, int r)
{
    return nxor(r)^nxor(l-1);
}

void solve(){
    int l, r, k, i;
    cin >> l >> r >> i >> k;

    int start = (l - k + (1LL << i) - 1)/(1LL<<i);

    if(start == 0 && k < l) start++;

    int end = (r - k)/(1LL<<i);

    if(k > r) 
    {
        end = -1;
    }

    int ans = segxor(l, r);

    int a = segxor(start, end) * (1LL<<i);
    if((end-start)%2 == 0) a += k;

    ans ^= a;

    cout << ans << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


const int N = 2e5+10;
int dp[N][2];
int arr[N];
int n;

int ans(int i, int parity)
{
    if(dp[i][parity] != -1) return dp[i][parity];
    if(i == n) return dp[i][parity] = 0;
    if(parity == 1) return dp[i][parity] = max(ans(i+1, 1), 2*arr[i] + ans(i+1, 0));
    return dp[i][parity] = max(ans(i+1, 0), arr[i] + ans(i+1, 1));
}

signed main(){
    fastIO;
    memset(dp, -1, sizeof(dp));
    cin>>n;
    for(int i=0; i<n; i++) cin>>arr[i];
    cout<<ans(0, 0);
}

#include <bits/stdc++.h> 
using namespace std;
int main(){
    int x,a,i;
    cin>>a>>x;
    vector<int>dp(x+1,0);
    dp[0]=1;
    while(cin>>a)for(i=a;i<=x;i++)dp[i]=(dp[i]+dp[i-a])%((int)1e9+7);
    cout<<dp[x];
    }

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n, f, a, b;
    bool flag=0;
    cin>>n>>f>>a>>b;
    int m[n+1];
    int x = (b+a-1)/a;
    m[0]=0;
    for(int i=0; i<n; i++){
        cin>>m[i+1];
    }
    for(int i=0; i<n; i++){
        if(m[i+1]-m[i]>=x){
            f -= b;
        }
        else{
            f -= a*(m[i+1]-m[i]); 
        }
        if(f<=0){
            flag = true;
            break;
        }
    }
    if(flag){
        cout<<"NO"<<endl;
    }
    else{
        cout<<"YES"<<endl;
    }
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    long long int n;
    cin>>n;
    long long int i=1;
    while(n%i==0){
        i++;
    }
    cout<<i-1<<endl;
   
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

int ask(int a)
{
    cout << "? " << a << endl;
    int ans;
    cin >> ans;
    return ans;
}

void solve(){
    int n, k, ans = 0;
    cin >> n >> k;

    int num = 1;

    while(num+k-1 <= n)
    {
        ans ^= ask(num);
        num += k;
    }

    num -= k-1;
    
    while(num+k-1 <= n) ans ^= ask(num++);
    cout << "! " << ans << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
   int n, maxx = 0;
   cin >> n;
   vector<int> s;
   map<int, int> freq;
   for(int i=0; i<n; i++)
   {
    int a;
    cin >> a;
    s.push_back(a);
    freq[a]++;
}

for(auto i: freq)
{       
    maxx = max(maxx, i.second);
}

cout << s.size() - maxx << endl;


}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, x, ans = 0;
    cin>>n>>x;

    for(int a = 1; a<=min(n, x); a++)
    {
        for(int b = a; b*b <= n && b <= n/a; b++)
        {
            int c = min(x - a - b, (n - a*b)/(a+b));
            if(c >= b)
            {
                if(a != b) ans += 3 + 6*(c - b);
                else if(a == b) ans += 1 + 3*(c - b);
            }
        }
    }

    cout<<ans<<endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int w, h, a, b;
    cin >> w >> h >> a >> b;
    int x1, y1, x2, y2;
    cin >> x1 >> y1 >> x2 >> y2;


    if((abs(x1 - x2) % a == 0) || (abs(y1-y2) % b == 0))
    {
        if(y2 >= y1 && y2 < y1 + b)
        {
            if((abs(x1 - x2) % a == 0))
            {
                cout << "yes\n";
            }
            else cout << "No\n";
        }
        else if(x2 >= x1 && x2 < x1 + a)
        {
            if((abs(y1-y2) % b == 0))
            {
                cout << "yes\n";
            }
            else cout << "No\n";
        }
        else if(y1 >= y2 && y1 < y2 + b)
        {
            if((abs(x1 - x2) % a == 0))
            {
                cout << "yes\n";
            }
            else cout << "No\n";
        }
        else if(x1 >= x2 && x1 < x2 + a)
        {
            if((abs(y1-y2) % b == 0)) cout << "yes\n";
            else cout << "No\n";
        }
        else cout << "Yes\n";
    }
    else cout << "No\n";
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

const int N = 1e6+10;
int dp[N];

signed main(){
    dp[0] = 0;

    fastIO;
    int n, x;
    cin >> n >> x;
    int c[n];

    for(int i=0; i<n; i++) cin >> c[i];

    for(int i=1; i<=x; i++)
    {
        int minn = INT_MAX;
        for(int j=0; j<n; j++)
        {
            if(i - c[j] >= 0) minn = min(dp[i - c[j]], minn);
        }
        dp[i] = 1+minn;
    }

    cout << (dp[x] >= INT_MAX ? -1 : dp[x])  << endl;

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, a, b;
    cin>>n>>a>>b;
    int ans=0;
    if(b<2*a){
        cout<<b*(n/2) + a*(n%2)<<endl;
        return;
    }
    else {
        cout<<n*a<<endl;
        return;
    }
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr)
using namespace std;
#define int long long

bool construct_sequence(int n, int sumTarget, vector<int>& sequence) {
    if (sumTarget < n) return false;
    if(sumTarget > (n * (n + 1)) / 2) return 0;

    vector<bool> taken(n + 1, false);
    int smallest = n + 1;
    int remaining = sumTarget;

    int i = 0, cur = n;
    while (i < n) {
        int maxVal = min(cur, remaining - (n - i - 1));
        while (maxVal >= 1 && taken[maxVal]) maxVal--;

        if (maxVal < 1) return false;

        sequence[i++] = maxVal;
        taken[maxVal] = true;
        remaining -= maxVal;
        smallest = min(smallest, maxVal);

        if (smallest == 1) break;
    }

    int fillVal = 1;
    while (i < n) {
        while (taken[fillVal]) fillVal++;
        sequence[i++] = fillVal;
        taken[fillVal] = true;
    }

    return true;
}

void solve_case() {
    int n, s;
    cin >> n >> s;

    vector<int> result(n);
    if (!construct_sequence(n, s, result)) {
        cout << -1 << '\n';
        return;
    }

    cout << result[0] << '\n';
    for (int i = 1; i < n; ++i)
        cout << result[i - 1] << ' ' << result[i] << '\n';
}

signed main() {
    fastIO;
    int t;
    cin >> t;
    while (t--) solve_case();
}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long

const int MOD = 998244353;


void solve(){
    int n;
    cin >> n;   
    string s;
    cin >> s;
    
    int dp[n][3];

    memset(dp, 0, sizeof(dp));

    if(n<=3)
    {
        cout << 1 << endl;
        return;
    }

    for(int i=0; i<=2; i++) dp[i][2]=1;

    for(int i=3; i<n; i++)
    {
        dp[i][2] = (dp[i-1][1] + dp[i-1][2])%MOD;
        dp[i][1] = dp[i-1][0];
        if(s[i] == s[i-2] && s[i-1] == s[i-3] && s[i] != s[i-1]) dp[i][0] = dp[i-1][2];
        dp[i][0] %= MOD;
        dp[i][1] %= MOD;
        dp[i][2] %= MOD;
    }

    cout << (dp[n-1][0] + dp[n-1][1] + dp[n-1][2])%MOD << endl;
    

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


lli hcf(lli a, lli b){
    if(a==0 || b==0) return a+b;
    else if(a > b) return hcf(a%b, b);
    return hcf(a, b%a);

}

lli inverse_mod(lli x, lli y){
    x = x%y;
    return y / hcf(x, y);
}






void solve(){
    lli a, b, c, d;
    cin>>a>>b>>c>>d;
    for(lli x = a + 1; x <= c; x++){
        lli n = inverse_mod(a*b, x);
        lli n1 = n*((a*b)/x) + (n*((a*b)%x))/x;
        //cout<<n*a*b<<endl;
        //cout<<n<<" "<<a<<" "<<b<<" "<<x<<endl;
        if((d % n1 == 0) || (d/n1 - b/n1 >= 1)){
            //n = (n*a*b)/x;
            lli y = (d/n1) * (n1);
            cout<<x<<" "<<y<<endl;
            return;
        }
    }
    cout<<-1<<" "<<-1<<endl;
}

int main(){
    
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

long long int arr[60];


void solve(){

    int a=1;
    vector <int> ans;
    long long int x;
    vector<vector<int> > v;
    cin>>x;
    x-=1;
    while(x!=0){
        for(int i=1; i<60; i++){
            if(x<arr[i]){
                    v.push_back({i-1});
                    x-=arr[i-1];
                break;
            }
        }
    }
    for(int i=v.size()-1; i>=0; i--){
        v[i].push_back(a);
        a+=v[i][0];
    }
    for(int i=0; i<v.size(); i++){
            for(int j=0; j<v[i][0]; j++){
                ans.push_back(v[i][1]+j);
            }
    }
    int l = ans.size();
    cout<<l<<endl;
    for(int i=0; i<l; i++){
        cout<<ans[i]<<" ";
    }
    cout<<endl;
    
}

int main(){

    long long int p = 1;
    for(int i=0; i<60; i++){
        arr[i] = p-1;
        p *= 2;
    }
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

int answer(int m,int n,long long int a[],long long int b[]){
  int sum=0;
  for(int i=n-1;i>m-1;i--) sum+=min(a[i],b[i]);
  sum += a[m-1];
  return sum;
}

int main() {
  int t;
  cin>>t;
  for(int k=1; k<=t; k++){
    int n,m;
    cin>>n>>m;

    long long int a[n];
    long long int b[n];

    for (int i=0;i<n;i++){
      cin>>a[i];
    }

    for (int i=0;i<n;i++){
      cin>>b[i];
    }
   
    //cout<<endl;

    // 
    // for(auto x:b) cout<<x<<" ";
    // cout<<endl;

    long long int possibleAnswers[m];

    // cout<<"**"<<answer(m,n,a,b)<<"**"<<endl;

    for(int i=m-1;i>=0;i--) possibleAnswers[i]=answer(m,n,a,b);
    

    // for(auto x: possibleAnswers) cout<<x<<" ";
    // cout<<endl;

    long long int min = possibleAnswers[0];
    for(int i=1;i<m;i++) {
      if (min>possibleAnswers[i]) min=possibleAnswers[i];
    }
    cout<<min<<endl;
  }

  return 0;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef struct
{
    int x, y, z;
} query;


void solve()
{
    int n, qq;
    cin >> n >> qq;
    int arr[n];
    bool minn[n];
    for(int i=0; i<n; i++) cin >> arr[i];
    memset(minn, 0, sizeof(minn));

    vector<query> querries;
    
    while(qq--)
    {
        int x, y, z;
        cin >> x >> y >> z;
        querries.push_back({x-1, y-1, z-1});
    }
    reverse(querries.begin(), querries.end());

    for(query q: querries)
    {
        if(arr[q.z] > arr[q.x] && !minn[q.x])
        {
            cout << -1 << endl;
            return;
        }
        if(arr[q.z] > arr[q.y] && !minn[q.y])
        {
            cout << -1 << endl;
            return;
        }
        if(!((q.z == q.x && arr[q.x] < arr[q.y]) || (q.z == q.x && arr[q.x] < arr[q.y]))) minn[q.z]=1;
        arr[q.x] = max(arr[q.x], arr[q.z]);
        arr[q.y] = max(arr[q.y], arr[q.z]);
    }

    for(int i: arr) cout << i << " ";
    cout << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long

signed main(){
    fastIO;
    int n, ans = 0, dist=0;
    cin >> n;
    string a, b;
    cin >> a >> b;
    bool small = 0;

    for(int i=n-1; i>=0; i--)
    {
        if(a[i] < b[i]) {small = 1;dist=0;}
        else if(a[i] > b[i]) {small = 0;dist=0;}
        else dist++;
        ans += small * (n-i) - dist*small;
    }

    cout << ans;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



void solve(){
    int n;;
    cin >> n;
    int ans = INT_MAX;

    for(int i=0; i<3; i++)
    {
        for(int j=0; j<5; j++)
        {
            for(int k = 0; k < 2; k++)
            {
                for(int l=0; l<3; l++)
                {
                    if(n - 10*i - 6*j - 3*k - l >= 0 && (n - 10*i - 6*j - 3*k - l)%15 == 0)
                    {
                        ans = min(ans, i + j + k + l + (n - 10*i - 6*j - 3*k - l)/15);
                    }
                }
            }
        }
    }
    cout << ans << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    int arr[n-1];
    int ans[n];
    ans[0]=501;
    for(int i=0; i<n-1; i++) cin>>arr[i];
    for(int i=0; i<n-1; i++)
    {
        ans[i+1] = ans[i] + arr[i];
    }
    for(int i:ans) cout<<i<<" ";
    cout<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n;
    cin>>n;
    int arr[n], sum = 0;
    for(int i=0; i<n; i++) 
    {
        cin>>arr[i];
        sum += arr[i];
    }
    cout << sum - 2 * arr[n-2]<<endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    map<int, int>mp;
    for(int i=0; i<=9; i++) mp[i] = 0;
    for(int i=0; i<n; i++)
    {
        int a;
        cin>>a;
        if(mp[a%10] < 3)
            mp[a%10]++;
    }

    vi v;
    for(int i=0; i<=9; i++)
    {
        for(int j=0; j<mp[i]; j++)
        {
            v.push_back(i);
        }
    }

    for(int i=0; i<v.size(); i++)
    {
        for(int j=i+1;j<v.size(); j++)
        {
            for(int k = j+1; k<v.size(); k++)
            {
                if((v[i]+v[j]+v[k])%10==3)
                {
                    cout<<"YES\n";
                    return ;
                }
            }
        }
    }
    cout<<"NO\n";



}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;



int main(){
    fastIO;
    string s;
    cin>>s;
    int ans = 0;
    sort(s.begin(), s.end());
    for(int i=0; i<s.length()-1; i++){
        if(s[i]!=s[i+1]) ans++;
    }
    ans++;
    if(ans%2==0) cout<<"CHAT WITH HER!";
    else cout<<"IGNORE HIM!";
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

class segtree
{
public:
    int size;
    vector<pair<int, int>> sums;


    segtree(int n = 1)
    {
        size = 1;
        while (size < n)
            size *= 2;
        sums.assign(2 * size, {0, INT_MAX});
    }

    void build(vector<int> &v, int x, int lx, int rx)
    {
        if(rx - lx == 1)
        {
            if(lx < v.size())
            {
                sums[x].first = v[lx];
                sums[x].second = v[lx];
            }
            return;
        }

        int m = (lx+rx)/2;

        build(v, 2*x+1, lx, m);
        build(v, 2*x+2, m, rx);

        sums[x].first = max(sums[2*x+1].first, sums[2*x+2].first);
        sums[x].second = min(sums[2*x+1].second, sums[2*x+2].second);
    }

    void build(vector<int> &v)
    {
        build(v, 0, 0, size);
    }

    int get(int l, int r, int v, int x, int lx, int rx)
    {
        if(r <= lx || rx <= l) return 0;
        
        if(sums[x].second >= v) return 0;

        if(rx - lx == 1)
        {
            if(sums[x].first < v) 
            {
                return 1;
            }
            return 0;
        }

        if(l >= lx && r <= rx && sums[x].first < v) return r - l;

        int m = (lx + rx)/2;
        int s1 = get(l, r, v, 2*x+1, lx, m);
        int s2 = get(l, r, v, 2*x+2, m, rx);

        return s1 + s2;

    }

    int get(int l, int r, int v)
    {
        return get(l, r, v, 0, 0, size);
    }
};

signed main(){
    fastIO;
    int n;
    cin >> n;
    int arr[n];
    map<int, int> mp1, mp2;

    for(int i=0; i<n; i++)
    {
        cin >> arr[i];
    }

    vector<int> v1, v2;

    for(int i=0; i<n; i++)
    {
        v1.push_back(++mp1[arr[i]]);
        v2.push_back(++mp2[arr[n - i - 1]]);
    }

    reverse(v2.begin(), v2.end());

    segtree st(n);


    st.build(v2);

    int ans = 0;

    for(int i=0; i<n; i++)
    {
        ans += st.get(i+1, n, v1[i]);
    }



    cout << ans;
    


}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 




signed main(){
    fastIO;
    int n, ans = 0;
    cin >> n;
    while(n--)
    {
        int a, b;
        cin >> a >> b;
        ans += (b>a);
    }
    cout << ans;
}

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli, lli> pi;

vector<bool> visited;
vector<vi> adj;
lli components = 0;

lli dfs(lli u, lli x)
{
    lli size = 1;
    visited[u] = 1;
    for (lli v : adj[u])
    {
        if (!visited[v])
        {
            size += dfs(v, x);
        }
    }
    if (size >= x)
    {
        size = 0;
        components++;
    }
    return size;
}

bool check(lli x, lli k)
{
    for (int i = 0; i < visited.size(); i++)
        visited[i] = 0;
    dfs(1, x);
    if (components >= k + 1)
        return 1;
    return 0;
}

void solve()
{

    lli n, k;
    cin >> n >> k;

    adj.clear();
    visited.clear();

    adj.resize(n);
    visited.resize(n, 0);

    for (lli i = 0; i < n - 1; i++)
    {

        lli u, v;
        cin >> u >> v;

        u--, v--;

        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    lli l = 1, r = 1e5;
    lli m = (l + r) / 2;
    while (l <= r)
    {
        components = 0;
        if (check(m, k))
            l = m + 1;
        else
            r = m - 1;
        m = (l + r) / 2;
    }
    cout << r << endl;
}

int main()
{
    fastIO;
    lli t;
    cin >> t;
    while (t--)
    {
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n, ans = 0;
    cin >> n;

    int arr[2*n];

    queue <pair<int, int>> q;
    set<int> rem;

    for(int i=1; i<=n; i++) rem.insert(i);

    vector<int> count(n+1, 0);

    bool rep = 0;

    for(int i=0; i<2*n; i++) cin >> arr[i];

    for(int i=0; i<2*n; i+=2)
        if(arr[i] == arr[i+1])
            q.push({arr[i], arr[i+1]});

    for(int i=0; i<2*n; i+=2)
        if(arr[i] != arr[i+1])
        {
            q.push({arr[i], arr[i+1]});
            count[arr[i]]++;
            count[arr[i+1]]++;
        }

    int t = 0;

    while(!q.empty())
    {
        pair<int, int> p = q.front();
        q.pop();
        t++;
        if(t >= n) rep = 1;

        if(p.first == p.second)
        {
            if(rem.find(p.first) != rem.end()) rem.erase(rem.find(p.first));
            else if(rep)
            {
                ans += 2;
                rem.erase(rem.begin());
            }
            else q.push(p);
        }
        else
        {
            count[p.first]--;
            count[p.second]--;
            if(rem.find(p.first) != rem.end() && rem.find(p.second) != rem.end())
            {
                ans++;
                if(count[p.first] == 0) rem.erase(rem.find(p.first));
                else rem.erase(rem.find(p.second));
            }
            else if(rem.find(p.first) != rem.end())
            {
                ans++;
                rem.erase(rem.find(p.first));
            }
            else if(rem.find(p.second) != rem.end())
            {
                ans++;
                rem.erase(rem.find(p.second));
            }
            else if(rep)
            {
                ans += 2;
                rem.erase(rem.begin());
            }
            else q.push(p);
        }
    }

    cout << ans << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

const int N = 31625;
vector<int> primes;


void SieveOfEratosthenes(int n)
{
    vector<bool> prime(n + 1, true);

    for (int p = 2; p * p <= n; p++) {
        if (prime[p] == true) {
            for (int i = p * p; i <= n; i += p)
                prime[i] = false;
        }
    }

    for(int i=2; i<=n; i++) if(prime[i]) primes.push_back(i);

}


void solve(){
    int n;
    cin >> n;

    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];

    int maxx = *max_element(arr, arr+n);

    for(int p: primes)
    {
        if(p*p > maxx) break;
        int div = 0;
        for(int i=0; i<n; i++)
        {
            if(arr[i]%p == 0) 
            {
                while(arr[i]%p == 0) arr[i] /= p;
                div++;
            }
        }
        if(div >= 2) 
        {
            cout << "YES\n";
            return;
        }
    }

    sort(arr, arr+n);

    for(int i=1; i<n; i++)
    {
        if(arr[i] == arr[i-1] && arr[i] != 1)
        {
            cout << "YES\n";
            return;
        }
    }

    cout << "NO\n";

}

signed main(){
    SieveOfEratosthenes(N);
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

int main(){
    int t;
    cin>>t;
    for(int i=0; i<t; i++){
        int x, n;
        cin>>x>>n;
        int arr[n];
        bool possible = false;
        int mn = INT_MAX;
        for(int j=0; j<n; j++){
            cin>>arr[j];
        }
        for(int j=0; j<n; j++){
           for(int k=0; k<n; k++){
            if(j!=k){
                if(arr[j]+arr[k]>=x){
                    possible = true;
                    if((j+1)*arr[j]+(k+1)*arr[k]<=mn){
                        mn = (j+1)*arr[j]+(k+1)*arr[k];
                    }
                }
            }
            
           }
        }
        if(possible){
        cout<<mn<<endl;
        }
        else{
            cout<<-1<<endl;
        }
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int Px, Py, Ax, Ay, Bx, By;
    cin>>Px>>Py>>Ax>>Ay>>Bx>>By;
    /*
    float r1 = max(sqrt(Ax*Ax + Ay*Ay), sqrt((Px-Ax)*(Px-Ax) + (Py-Ay)*(Py-Ay)));
    float r2 = max(sqrt(Bx*Bx + By*By), sqrt((Px-Bx)*(Px-Bx) + (Py-By)*(Py-By)));
    float r3 = max(max(min(sqrt(Ax*Ax + Ay*Ay), sqrt(Bx*Bx + By*By)),0.5*sqrt((Ax-Bx)*(Ax-Bx) + (Ay-By)*(Ay-By))), min(sqrt((Px-Ax)*(Px-Ax) + (Py-Ay)*(Py-Ay)), sqrt((Px-Bx)*(Px-Bx) + (Py-By)*(Py-By))));
    */
    cout<<fixed<<setprecision(10)<<min(min(max(sqrt(Ax*Ax + Ay*Ay), sqrt((Px-Ax)*(Px-Ax) + (Py-Ay)*(Py-Ay))), max(sqrt(Bx*Bx + By*By), sqrt((Px-Bx)*(Px-Bx) + (Py-By)*(Py-By)))), max(max(min(sqrt(Ax*Ax + Ay*Ay), sqrt(Bx*Bx + By*By)),0.5*sqrt((Ax-Bx)*(Ax-Bx) + (Ay-By)*(Ay-By))), min(sqrt((Px-Ax)*(Px-Ax) + (Py-Ay)*(Py-Ay)), sqrt((Px-Bx)*(Px-Bx) + (Py-By)*(Py-By)))))<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin >> n;
    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];

    cout << (*max_element(arr, arr+n) - *min_element(arr, arr+n)) * (n-1) << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    lli n;
    int s, cur_sum = 0;
    cin>>n>>s;
    lli ans = 0;
    string sn = to_string(n);
    for(int i=0; i<sn.length(); i++){
        cur_sum += sn[i]-'0';
        if(cur_sum == s){
            if(n % lli(pow(10, sn.length()-i-1)) == 0) ans = 0;
            else{
                ans = (n/lli(pow(10, sn.length()-i)) + 1)*lli(pow(10, sn.length()-i)) - n;
            }
            break;
        }
        else if(cur_sum > s){
            ans = (n/lli(pow(10, sn.length()-i)) + 1)*lli(pow(10, sn.length()-i)) - n;
            break;
        }
    }
    cout<<ans<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



signed main(){
    string s;
    cin >> s;
    int n;
    cin >> n;
    cout << (s.size() >= n ? "Yes\n" : "No\n");

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n, num_odd = 0;
    cin >> n;
    vector<int> v(n);

    for(int i=0; i<n; i++) 
    {
        cin >> v[i];
        num_odd += v[i]%2;
    }

    cout << (((num_odd == n)|(num_odd == 0)) ? *max_element(v.begin(), v.end()) : accumulate(v.begin(), v.end(), (int)0) - num_odd + 1) << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;



int main(){
    fastIO;
    int n, k, ind=0, sum=0, min;
    cin>>n>>k;
    int arr[n];
    for(int i=0; i<n; i++){
        cin>>arr[i];
    }
    for(int i=0; i<k; i++){
        sum += arr[i];
    }
    min = sum;
    for(int i=1; i<n-k+1; i++){
        sum += arr[i+k-1]-arr[i-1];
        if(sum<min){
            min = sum;
            ind = i;
        }
    }
    cout<<ind+1<<endl;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, m, ans = 0;
    cin>>n>>m;
    int arr[n], pref[n+1];
    
    for(int i=0; i<n; i++)
    {
        cin>>arr[i];
    }

    sort(arr, arr+n);
    pref[0] = 0;

    for(int i=0; i<n; i++)
    {
        pref[i+1] = arr[i] + pref[i];
    }

    for(int i = 0; i<n; i++)
    {
        int ind1 = upper_bound(pref, pref + n + 1, pref[i] + m) - pref - 1;
        int ind2 = upper_bound(arr, arr+n, arr[i] + 1) - arr - 1;

        int ind = min(ind1, ind2+1);
        ans = max(pref[ind] - pref[i], ans);
    }

    cout<<ans<<endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int score = 0;
    for(int i=1; i<11; i++){
        for(int j=1; j<11; j++){
            char c;
            cin>>c;
            if(c=='X'){
                if(i+j<=11){
                    score+=(min(i, j));
                }
                else{
                    score+=min(11-i, 11-j);
                }

            }
        }
    }
    cout<<score<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


vector <int> even_factor(int n){
    vector <int> v = {};
    if(n%2==1) return v;
    
for(int i=1; i*i<=(n/2); i++){
if((n/2)%i==0) {
    v.push_back(2*i);
    if(i*i!=n/2) v.push_back(n/i);
}

}
sort(v.begin(), v.end());
 return v;

}


bool valid(int n, int x, int k){
    int j = n % (2*k-2);
    if (j == 0) j = 2*k-2;
    if(k - abs(j - k) == x) return 1;
    return 0;
}




void solve(){
    int n, x;
    cin>>n>>x;
   
   int count = 0;

    vector <int> v1 = even_factor(n-x);
    vector <int> v2 = even_factor(n+x-2);
    vector <int> v3;
    for(int i:v2){
       if(!binary_search(v1.begin(), v1.end(), i)) v3.push_back(i);
    }
    for(int i:v3) v1.push_back(i);
    

   for(int i:v1){
    if(valid(n, x, (i/2) + 1)) count++;
   } 
   cout<<count<<"\n";
}

int main(){
    
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    string s;
    cin>>s;
    int ans=0;
    for(int d=0; d<s.size()/2 + 1; d++){
        int cnt = 0;
        for(int i=0; i<s.size()-d; i++){
            if(s[i] == s[i+d] || s[i] == '?' || s[i+d] == '?') cnt++;
            else cnt = 0;
            if(cnt==d) ans = 2 * d;
        }
    }
    cout<<ans<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>

#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli, lli> pi;

void solve()
{
    lli n, m;
    cin >> n >> m;
    lli maxx = INT_MIN, x, y;
    for (lli i = 0; i < n; i++)
    {
        for (lli j = 0; j < m; j++)
        {
            lli a;
            cin >> a;
            if (a > maxx)
            {
                maxx = a;
                x = i;
                y = j;
            }
        }
    }

    cout << max(x + 1, n - x) * max(y + 1, m - y) << endl;
}

int main()
{
    fastIO;
    lli t;
    cin >> t;
    while (t--)
    {
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;
#define int long long

int l, r, ans = INT_MAX;


void update(int arr[], int np, int i, int x)
{
    int ind = np + i - 1;
    arr[ind] = x;
    ind = (ind - 1) / 2;
    while (ind != 0)
    {
        arr[ind] = min(arr[2 * ind + 1] , arr[2 * ind + 2]);
        ind = (ind - 1) / 2;
    }

    if(2*np-1 >= 3)
    {
        arr[0] = min(arr[1] , arr[2]);
    }
}

void sum1(int arr[], int n, int i, int l1, int r1)
{
    
    if(i >= n) return;   
    if(r1 <= l || l1 >= r) return;
    
    if (l1 >= l && r1 <= r)
    {
        ans = min(ans, arr[i]);
        return;
    }
    int m = (l1 + r1) / 2;

        sum1(arr, n, 2 * i + 1, l1, m);
        sum1(arr, n, 2 * i + 2, m, r1);
    
}

signed main()
{
    fastIO;
    int n, m;
    cin >> n >> m;
    int np = 1;
    while (np < n)
        np *= 2;

    int arr[2 * np - 1];
    for(int i = 0; i<2*np-1; i++) arr[i] = INT_MAX;

    for (int i = np - 1; i < np + n - 1; i++)
        cin >> arr[i];

    for (int i = 2 * np - 2; i >= 1; i--)
        arr[(i - 1) / 2] = min(arr[(i-1)/2] ,  arr[i]);

    for (int i = 0; i < m; i++)
    {
        int a, b, c;
        cin >> a >> b >> c;
        l = np - 1 + b, r = np - 1 + c;
        ans = INT_MAX;
        if (a == 1)
        {
            update(arr, np, b, c);

        }
        else
        {
            sum1(arr, 2*np-1, 0, np - 1, 2 * np - 1);
            cout << ans << endl;
        }
    }
}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n;
    cin >> n;
    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];

    vector<set<int>> adj(n);

    int max_round = *max_element(arr, arr+n);
    int curr_round = 1;

    while(curr_round != max_round+1)
    {
        vector<pair<int, int>> v;
        for(int i=0; i<n; i++)
            if(arr[i] == -1 || arr[i] >= curr_round) v.push_back({arr[i], i});

        int first = INT_MAX, last = INT_MIN;

        for(int i=0; i<v.size(); i++)
        {
            if(v[i].first == -1 || v[i].first > curr_round)
            {
                first = min(first, i);
                last = max(last, i);

                if(curr_round%2)
                {
                    if(i != 0)
                        adj[v[i].second].insert(v[i-1].second);

                    if(i + 1 != v.size())
                        adj[v[i].second].insert(v[i+1].second);
                }
                else
                {
                    if(i != 0)
                        adj[v[i-1].second].insert(v[i].second);

                    if(i + 1 != v.size())
                        adj[v[i+1].second].insert(v[i].second); 
                }
            }
        }

        if(curr_round%2)
        {
            for(int i=1; i<=first-1; i++)
                adj[v[i].second].insert(v[i-1].second);
            
            for(int i=last+1; i<v.size()-1; i++)
                adj[v[i].second].insert(v[i+1].second); 
        }
        else 
        {
            for(int i=1; i<=first-1; i++)
                adj[v[i-1].second].insert(v[i].second);
            
            for(int i=last+1; i<v.size()-1; i++)
                adj[v[i+1].second].insert(v[i].second);
        }

        for(int i=0; i<v.size()-1; i++)
        {
            if(adj[v[i].second].find(v[i+1].second) == adj[v[i].second].end() && adj[v[i+1].second].find(v[i].second) == adj[v[i+1].second].end())
                adj[v[i].second].insert(v[i+1].second);
        }

        curr_round++;
    }


    vector<int> topo;
    vector<bool> visited(n, 0);

    function <void(int)> dfs = [&](int u)-> void
    {   
        visited[u] = 1;
        for(int v: adj[u])
            if(!visited[v])
                dfs(v);
        topo.push_back(u);
    };

    for(int i=0; i<n; i++)
        if(!visited[i]) 
            dfs(i);

    reverse(topo.begin(), topo.end());

    int ans[n];
    for(int i=0; i<n; i++) ans[topo[i]] = i+1;
    for(int i=0; i<n; i++) cout << ans[i] << " \n"[i==n-1];
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

string bin(long long int x){
    string ans = "";
    while(x!=0){
        ans = to_string(x%2) + ans;
        x /= 2;
    }
    return ans;
}

void solve(){
    long long int x;
    cin>>x;
    long long int i=1, a=0, count=0;
    while(i<=x){
        i*=2;
        a++;
    }
    a--;
    i/=2;
    string b = bin(x-i);
    int m = a-b.length();
    for(int i=0; i<m; i++){
        b = "0"+b;
    }
    for(char c:b){
        if(c=='1'){
            count ++;
        }
    }
    cout<<a+count<<endl;
    for(int i=0; i<2*a; i++){
        if(i%2==0){
            cout<<1+i/2<<" ";
        }
        else{
            if(b[i/2]=='1'){
                cout<<'1'<<" ";
            }
        }
    }
cout<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;
#define int long long

typedef vector<int> vi;
typedef pair<int, int> pi;

void solve()
{
    int n, m, ans = 0;
    cin >> n >> m;

    vector<pi> v(n);

    for (int i = 0; i < n; i++)
    {
        int a;
        cin >> a;

        v[i].first = a;
    }

    for (int i = 0; i < n; i++)
    {
        int a;
        cin >> a;

        v[i].second = a;
    }

    sort(v.begin(), v.end());

    for (int i = 0; i < n; i++)
    {

        if (m <= v[i].first * v[i].second)
        {
            ans = max(ans, (m / v[i].first) * v[i].first);

            if (i != n - 1 && v[i + 1].first == v[i].first + 1 && m >= v[i].first)
            {
                int add = min(m / v[i].first, v[i + 1].second);
                ans = max(ans, min(m, (m / v[i].first) * v[i].first + add));
            }
        }
        else if (i != n - 1 && v[i + 1].first == v[i].first + 1)
        {
            int a = m - v[i].first * v[i].second;

            int add = min(v[i].second, v[i + 1].second - min(v[i + 1].first * v[i + 1].second, (a / v[i + 1].first) * v[i + 1].first) / v[i + 1].first);

            int aa = add + v[i].first * v[i].second + min(v[i + 1].first * v[i + 1].second, (a / v[i + 1].first) * v[i + 1].first);

            ans = max(ans, min(m, aa));
        }
        else
        {
            ans = max(ans, v[i].first * v[i].second);
        }
    }

    cout << ans << endl;
}

signed main()
{
    fastIO;
    int t;
    cin >> t;
    while (t--)
    {
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, q;
    cin>>n>>q;
    int pref1[n+1][26], pref2[n+1][26];
    for(int i=0; i<26; i++)
    {
        pref1[0][i] = 0;
        pref2[0][i] = 0;
    }
    string s1, s2;
    cin>>s1>>s2;

    for(int i=1; i<n+1; i++)
    {
       for(int j = 0;j<26; j++)
       {
            pref1[i][j] = pref1[i-1][j];
            pref2[i][j] = pref2[i-1][j];
       } 
       pref1[i][s1[i-1]-'a']++;
       pref2[i][s2[i-1]-'a']++;   
    }

    for(int k=0; k<q; k++)
    {
        int l, r;
        cin>>l>>r;
        l--;
        int ans = 0;

        for(int i=0; i<26; i++)
        {
            ans += abs((pref1[r][i] - pref1[l][i]) - (pref2[r][i] - pref2[l][i]));
        }
        cout<<ans/2<<endl;
    }
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;

bool compare(pi p1, pi p2)
{
    if(p1.second != p2.second) return p1.second<p2.second;
    return p1.first < p2.first;
}

void solve(){
    int n, machines;
    cin>>n>>machines;
    vector<pi> v;
    for(int i=0; i<n; i++)
    {
        int a;
        cin>>a;
        v.push_back(make_pair(a, 0));
    }
    for(int i=0; i<n; i++)
    {
        cin>>v[i].second;
    }
    sort(v.begin(), v.end(), compare);
    multiset <int> optimal;
    int sum = 0, ans = 0;
    for(int i = n-machines; i<n; i++)
    {
        optimal.insert(v[i].first);
        sum += v[i].first;
    }
    ans = sum * v[n-machines].second;
    for(int i = n-machines-1; i>=0; i--)
    {   
        optimal.insert(v[i].first);
        sum += v[i].first - *optimal.begin();
        ans = max(ans, sum*v[i].second);
        optimal.erase(optimal.begin());
    }
    cout<<ans<<endl;

}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin >> n;
    set<int> s;
    for(int i=0; i<n; i++)
    {
        int a;
        cin >> a;
        s.insert(a);
    }
    cout << s.size() << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

int main(){
    int n, k, a, x, y, i;
    cin >> n >> k;

    bool dp[2][k+1][k+1];
    memset(dp, 0, sizeof(dp));
    
    dp[1][0][0]=1;

    while(cin >> a)
    {
        for(x=0; x<=k; x++) for(y=0; y<=k; y++) dp[0][x][y]=dp[1][x][y];
        for(x=0; x<=k; x++) for(y=0; y<=k; y++) dp[1][x][y] |= (x >= a ? dp[0][x-a][y] : 0) | (y >= a ? dp[0][x][y-a] : 0);
    }

    set<int> ans;
    for(i=0; i<=k; i++) if(dp[1][i][k-i]) ans.insert(i);

    cout << ans.size() << endl;
    for(int j: ans) cout << j << " ";
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n, k;
    cin>>n>>k;
    int arr[n];
    for(int i=0; i<n; i++)
    {
        cin>>arr[i];
    }
    if(k>=2)
    {
        cout<<"YES\n";
    }
    else
    {
        for(int i=0; i<n-1; i++)
        {
            if(arr[i] > arr[i+1])
            {
                cout<<"NO\n";
                return;
            }
        }
        cout<<"YES\n";
    }
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

int main(){
    fastIO;
    int n;
    cin >> n;

    int dp[n][3];

    for(int i=0; i<n; i++)
    {
        int a, b, c;
        cin >> a >> b >> c;
        if(!i) {dp[i][0] = a; dp[i][1] = b; dp[i][2] = c;}
        else 
        {
            dp[i][0] = a + max(dp[i-1][1], dp[i-1][2]);
            dp[i][1] = b + max(dp[i-1][0], dp[i-1][2]);
            dp[i][2] = c + max(dp[i-1][1], dp[i-1][0]);
        }
    }

    cout << max(max(dp[n-1][0], dp[n-1][1]), dp[n-1][2]);


}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int x, y;
    cin>>y>>x;
    
    int xx[2], yy[2], xy[2];

    cin >> xy[1] >> xx[1] >> yy[0] >> xy[0] >> xx[0] >> yy[1];

    int ans = INT64_MAX;


    if(x == 0 && y == 0) ans = 0;
    else if(x == 0) 
    {
        ans = min(ans, abs(y) * yy[(y/abs(y) + 1)/2]);
        ans = min(ans, abs(y) * xy[(y/abs(y) + 1)/2] + abs(x-y) * xx[((x-y)/abs(x-y) + 1)/2]);
    }
    else if(y == 0)
    {
        ans = min(ans, abs(x) * xx[(x/abs(x) + 1)/2]);  
        ans = min(ans, abs(x) * xy[(x/abs(x) + 1)/2] + abs(y-x) * yy[((y-x)/abs(y-x) + 1)/2]);
    }
    else if(x == y)
    {
        ans = min(ans, abs(x) * xx[(x/abs(x) + 1)/2] + abs(y) * yy[(y/abs(y) + 1)/2]);
        ans = min(ans, abs(y) * xy[(y/abs(y) + 1)/2]);
        ans = min(ans, abs(x) * xy[(x/abs(x) + 1)/2]);
    }
    else
    {
        ans = min(ans, abs(x) * xx[(x/abs(x) + 1)/2] + abs(y) * yy[(y/abs(y) + 1)/2]);
        ans = min(ans, abs(y) * xy[(y/abs(y) + 1)/2] + abs(x-y) * xx[((x-y)/abs(x-y) + 1)/2]);
        ans = min(ans, abs(x) * xy[(x/abs(x) + 1)/2] + abs(y-x) * yy[((y-x)/abs(y-x) + 1)/2]);
    }

    cout<<ans<<endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    string s;
    cin>>s;
    int n = s.length();
    int f = n-1;
    int l = 0;
    for(int i=0; i<n; i++){
        if(s[i]=='1'){
            l = i;
        }
    }
    for(int i=0; i<n; i++){
        if(s[i]=='0'){
            f=i;
            break;
        }
    }
    cout<<f-l+1<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

const int MOD = 998244353;

class DSU 
{
    vector<int> baap;
    vector<int> sadasya;

    public:
        DSU(int n)
        {
            baap.resize(n, -1);
            sadasya.resize(n, 0);
            for(int i=0; i<n; i++)
            {
                baap[i] = i;
                sadasya[i] = 1;
            }
        }
         
        int dada(int insaan)
        {
            if(insaan == baap[insaan]) return insaan;
            return baap[insaan] = dada(baap[insaan]);
        }

        void shaadi(int u, int v)
        {
            u = dada(u);
            v = dada(v);
            if(u == v) return;
            if(sadasya[v] < sadasya[u]) swap(u, v);
            baap[u] = v;
            sadasya[v] += sadasya[u];
        }

        int kitne_sadasya(int u)
        {
            return sadasya[dada(u)];
        }
};

int abModm(int a, int b, int m)
{
    a%=m;
    int res = 1;
    while (b > 0) 
    {
        if (b & 1) res = (res * a)%m;
        a = (a * a)%m;
        b >>= 1;
    }
    return res;
}


typedef struct
{
    int u, v, w;
}edge;

bool cmp(edge & e1, edge & e2)
{
    return e1.w < e2.w;
}

void solve()
{
    int n, s, ans = 1;
    cin >> n >> s;
    
    vector<edge> edges(n-1);
    DSU gaon(n+1);

    for(int i=0; i<n-1; i++) cin >> edges[i].u >> edges[i].v >> edges[i].w;

    sort(edges.begin(), edges.end(), cmp);

    for(edge e: edges)
    {
        ans *= abModm(s - e.w + 1, (gaon.kitne_sadasya(e.u)*gaon.kitne_sadasya(e.v)-1), MOD);
        ans %= MOD;
        gaon.shaadi(e.u, e.v);
    }

    cout << ans << endl;
}

signed main()
{
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


bool is_a_susset(int a[], int b[], int n, int m)
{
    
}

void solve(){
    int n, m;
    cin>>n;
    int a[n], b[n];
    for(int i=0; i<n; i++) cin>>a[i];
    for(int i=0; i<n; i++) cin>>b[i];
    cin>>m;
    int d[m];
    for(int i=0; i<m; i++) cin>>d[i];



}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n;
    cin >> n;
    vector<int> a(n), b(n);

    for(int i=0; i<n; i++) cin >> a[i];
    for(int i=0; i<n; i++) cin >> b[i];

    function <bool(int)> check = [&](int maxx) -> bool
    {
        vector<int> a1 = a;
        int bal = 0;

        for(int i=0; i<n; i++)
        {
            bal += max(a1[i] + b[i] - maxx, (int)0);
            a1[i] = min(maxx, a1[i] + b[i]);
        }

        for(int i=0; i<n; i++)
        {
            if(a1[i] < maxx)
            {
                bal -= (maxx - a1[i])/2;
                a1[i] += ((maxx - a1[i])/2)*2;
            }
        }

        return (bal <= 0);
    };

    int l = *max_element(a.begin(), a.end()), r = *max_element(a.begin(), a.end()) + *max_element(b.begin(), b.end());
    int m = (l+r)/2;

    while(l <= r)
    {
        if(check(m)) r = m-1;
        else l = m+1;
        m = (l+r)/2;
    }

    cout << l << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n, m;
    cin >> n >> m;
    if(2*n <= m) cout << "NO\n";
    else 
    {
        cout << "YES\n";
        vector<int> v(2*n);
        vector<vector<int>> ans(2*n, vector<int>(m));
        for(int i=0; i<2*n; i++) v[i] = i/2 + 1;

        for(int j=0; j<m; j++)
        {
            for(int i=0; i<2*n; i++) ans[i][j] = v[i];
            rotate(v.begin(), v.begin()+2*n-1, v.end());
        }

        for(int i=0; i<2*n; i++) for(int j=0; j<m; j++) cout << ans[i][j] <<" \n"[j==m-1];
    }
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;
#define int long long

int l, r, ans = 0;


void update(int arr[], int np, int i, int x)
{
    int ind = np + i - 1;
    arr[ind] = x;
    ind = (ind - 1) / 2;
    while (ind != 0)
    {
        arr[ind] = arr[2 * ind + 1] + arr[2 * ind + 2];
        ind = (ind - 1) / 2;
    }

    if(2*np-1 >= 3)
    {
        arr[0] = arr[1] + arr[2];
    }
}

void sum1(int arr[], int n, int i, int l1, int r1)
{
    
    if(i >= n) return;   
    if(r1 <= l || l1 >= r) return;
    
    if (l1 >= l && r1 <= r)
    {
        ans += arr[i];
        return;
    }
    int m = (l1 + r1) / 2;

        sum1(arr, n, 2 * i + 1, l1, m);
        sum1(arr, n, 2 * i + 2, m, r1);
    
}

signed main()
{
    fastIO;
    int n, m;
    cin >> n >> m;
    int np = 1;
    while (np < n)
        np *= 2;

    int arr[2 * np - 1];
    for(int i = 0; i<2*np-1; i++) arr[i] = 0;

    for (int i = np - 1; i < np + n - 1; i++)
        cin >> arr[i];

    for (int i = 2 * np - 2; i >= 1; i--)
        arr[(i - 1) / 2] += arr[i];

    for (int i = 0; i < m; i++)
    {
        int a, b, c;
        cin >> a >> b >> c;
        l = np - 1 + b, r = np - 1 + c;
        ans = 0;
        if (a == 1)
        {
            update(arr, np, b, c);
        }
        else
        {
            sum1(arr, 2*np-1, 0, np - 1, 2 * np - 1);
            cout << ans << endl;
        }
    }
}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;

int main(){
    fastIO;
    int n;
    cin>>n;
    int arr[n];
    for(int i=0; i<n; i++){}
    
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



void solve(){
    int n, k;
    cin >> n >> k;
    for(int i=0; i<k; i++) cout << 1;
    for(int i=0; i<n-k; i++) cout << 0;
    cout << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int unsigned long long


signed main(){
    fastIO;
    int n, k;
    cin >> n >> k;

    int kk = k;
    
    int num = 1;
    while(kk--) num *= 10;

    int ans = 1;

    for(int i=0; i<n; i++)
    {
        int a;
        cin >> a;
        if( ans*a >= num || a >= (double)1.1*num/ans) ans = 1;
        else ans *= a;
    }

    cout << ans << endl;
}

#include <bits/stdc++.h>
using namespace std;
#define int long long 

int f(int a, int b)
{
    if(!b) return 0;
    if(gcd(a, b) != 1) return f(a/gcd(a, b), b/gcd(a, b));
    if(a == 1) return b;

    int minn = b%a;

    for(int i=2; i*i<=a; i++) if(a % i == 0) minn = min(min(minn, b%i), b%(a/i));
    return minn + f(a, b-minn);
}

signed main(){
    int a, b;
    cin >> a >> b;
    cout << f(a, b) << endl;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



signed main(){
    fastIO;
    int r,x;
    cin >> r >> x;
    if(x == 1)
    {
        cout << (r>=1600 && r<=2999?"Yes\n":"No\n");
    }
    else
    {
        cout << (r>=1200 && r<=2399?"Yes\n":"No\n");
    }
}



#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n, m, k;
    cin >> n >> m >> k;
    int a[m];

    int s = (n*(n+1))/2;

    for(int i=0; i<m; i++) cin >> a[i];
    
    for(int i=0; i<k; i++)
    {
        int x;
        cin >> x;
        s -= x;
    }

    for(int i=0; i<m; i++)
    {
        if(k < n-1) cout << 0;
        else if(k == n) cout << 1;
        else if(a[i] == s) cout << 1;
        else cout << 0;
    }
    
    cout << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}



#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;
#define int long long

typedef vector<int> vi;
typedef pair<int, int> pi;

vector<vi> adj;
vector <bool> ron_wins;

bool dfs(int u, int p)
{
    if(ron_wins[u] == 1) return 1;
    bool ans = 0;
    for (int v : adj[u])
    {
        if (v != p)
        {
            ans = ans | !dfs(v, u);
        }
    }

    return ron_wins[u] = ans;
}

signed main()
{
    fastIO;
    int n, t;
    cin >> n >> t;
    adj.resize(n + 1);
    ron_wins.resize(n+1);

    for (int i = 0; i < n - 1; i++)
    {
        int u, v;
        cin >> u >> v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    for(int i=1; i<=n; i++)
    {
        dfs(i, -1);
    }

    for(int i=1; i<=n; i++)
    {
        cout<<ron_wins[i]<<" ";
    }

    for (int i = 0; i < t; i++)
    {
        int u;
        cin >> u;
        cout << ((ron_wins[u] == 1) ? "Ron" : "Hermione") << endl;
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n, m;
    cin >> n >> m;
    string s;
    cin >> s;
    vector<pair<int, int>> v(n);

    set<pair<int, int>> s1;

    for(int i=n-1; i>=0; i--)
    {
        if(s[i] == '1') v[i].first = i;
        else v[i].first = (i == n-1? n : v[i+1].first);
    }

    for(int i=0; i<n; i++)
    {
        if(s[i] == '0') v[i].second = i;
        else v[i].second = (i == 0 ? -1 : v[i-1].second);
    }

    while(m--)
    {
        int l, r;
        cin >> l >> r;
        l--, r--;
        int ll = v[l].first, rr = v[r].second;
        if(ll > rr) s1.insert({-1, -1});
        else s1.insert({ll, rr});
    }
    
    cout << s1.size() << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;

int max_or(int arr[][2], int len, int x){
int m = 0, ind;
for(int i=len-1; i>=0; i--){
    if(arr[i][1] == 0 && ((x|arr[i][0])>=m)){
        m = x|arr[i][0];
        ind = i;
        }
    }
return ind;
}


void solve(){
    int n;
    cin>>n;
    int arr[n][2], me=0, ans[n], a;
    for(int i=0; i<n; i++) {
        cin>>arr[i][0];
        arr[i][1] = 0;
        if(arr[i][0] >= me){
            me = arr[i][0];
            a = i;
        }
    }
    int cur_ele = arr[a][0];
    arr[a][1]=1;
    cout<<arr[a][0]<<" ";
    for(int i=0; i<min(n, 30)-1; i++){
        a = max_or(arr, n, cur_ele);
        cout<<arr[a][0]<<" ";
        
        
        cur_ele = cur_ele|arr[a][0];
        if(arr[a][1]==0){
        arr[a][1] = 1;
        
        }
    }
    for(int i = 0; i<n; i++){
        if(arr[i][1]==0){
            cout<<arr[i][0]<<" ";
            arr[i][1] = 1;
            }
       
    }

    cout<<"\n";
    

}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;



int main(){
    fastIO;
    string s;
    cin>>s;
    int ans = 1;
    int count = 1;
    for(int i=0; i<s.length()-1; i++){
        if(s[i]==s[i+1]){
            count+=1;
            ans = max(ans, count);
        }
        else{
            count = 1;

        }
    }
    cout<<ans;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n, m;
    cin >> n >> m;

    int vol=0;

    int a = 1, b=2;

    for(int i=0; i<n; i++)
    {
        vol += a*a*a;
        int temp=a+b;
        a=b;
        b=temp;
    }
   

    while(m--)
    {
        int l, w, h;
        cin >> l >> w >> h;
        if(min({l, w, h}) < b-a || vol > l*w*h || max({l, w, h}) < a) cout << 0;
        else cout << 1;
    }

    cout << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



signed main(){
    fastIO;
    int n, m;
    cin >> n >> m;
    int arr[n];
    set<int> s;
    
    for(int i=0; i<n; i++)
    {
        int a;
        cin >> a;
        if(a>=1 && a<=m)
        {
            s.insert(a);
        }
        if(s.size() == m) 
        {
            cout << n-i << endl;
            return 0;
        }
    }

    cout << 0 << endl;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


signed main(){
    fastIO;
    int n, e;
    cin >> n >> e;
    vector<vector<int>> adj(n+1);
    for(int i=0; i<e; i++)
    {
        int u,v;
        cin >> u >> v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    if(e == n-1)
    {
        int one = 0, two = 0;
        for(int i=1; i<=n; i++)
        {
            if(adj[i].size() == 1) one++;
            else if(adj[i].size() == 2) two++;
        }
        if(one == n-1) cout << "star topology\n";
            else if(one == 2 && two == n-2){ cout << "bus topology\n";}
            else 
            {
                cout << "unknown topology\n";   
            }
    }
    else if(e == n)
    {
        for(int i=1; i<=n; i++)
        {
            if(adj[i].size() != 2) 
            {
                cout << "unknown topology\n";
                return 0;
            }
        }

        cout << "ring topology";
    }
    else cout << "unknown topology";

}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n, k, count=0;
    cin>>n>>k;
    string s;
    cin>>s;
    for(int i=0; i<n; i++){
        if(s[i]=='B'){
            count++;
            i+=k-1;
        }
    }
    cout<<count<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int a, b, c;
    cin >> a >> b >> c;
    if((a+b+c)%3) cout << "No\n";
    else 
    {
        int mid = (a+b+c)/3;
        if((a+c)/2 < mid) cout << "No\n";
        else cout << "Yes\n";
    }
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include<bits/stdc++.h>
using namespace std;
void solve(){
    
}
int main(){
    int n;
    cin>>n;
    while(n--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;



int main(){
    fastIO;
    int n;
    cin>>n;
   
    vector<int> v;
    for(int i=0; i<n; i++)
    {
        int a;
        cin>>a;
        if(a==0) v.push_back(a);
        else if(a==1)
        {
            if(v.size() == 0) v.push_back(a);
            else if(v[v.size()-1] == 0) v.push_back(a);
        }
        else
        {
            if(v.size() == 0) v.push_back(a);
            else if(v[v.size()-1] == 0) v.push_back(a);
            else if(v[v.size()-1] == 1) 
            {
                v.pop_back();
                v.push_back(a);
            }
        }
    }
     
    int ans = 0;
    for(int i:v)
    {
        if(i != 0) ans++;
    }
    if(v[0] == 0 && v[1] == 2) v[0] = 3;
    if(v[v.size()-1] == 0 && v[v.size()-2] == 2) v[v.size()-1] = 3;
    for(int i=1; i<v.size()-1; i++)
    {
        if(v[i]==0 && (v[i-1] == 2 || v[i+1] == 2))
        {
            v[i] = 3;
        }
    }
    int ones=0, zeros = 0;
    for(int i=0; i<v.size(); i++)
    {
        if(v[i] != 3)
        {
            if(v[i] == 1) ones++;
            if(v[i] == 0) zeros ++;
        }
        else
        {
            if(zeros-ones >= 0) ans += zeros-ones;
            ones = 0;
            zeros = 0;
        }
    }
    if(zeros-ones >= 0) ans += zeros-ones;
    
    cout<<ans;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n;
    cin >> n; 
    vector<vector<int>> adj(n);
    vector <bool> visited(n, 0);    
    int num = 2;
    int ans[n];
    ans[0] = 1;

    for(int i=0; i<n-1; i++)
    {
        int u, v;
        cin >> u >> v;
        u--, v--;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    function<void(int)> dfs = [&](int u) -> void
    {
        visited[u] = 1;
        for(int v: adj[u])
        {
            if(!visited[v])
            {
                if(num - ans[u] != 1)
                {
                    if((num - ans[u]) % 2) num++;
                    else if(num - ans[u] == 2) num += 2;
                }
                ans[v] = num;
                num++;
                dfs(v);
            }
        }
    };

    dfs(0);

    for(int i: ans) cout << i << " ";

    cout << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin >> n;
    string s;
    cin >> s;
    if(n == 2) cout << (s[0] == 'A'?"Alice\n":"Bob\n");
    else 
    {
        if(s[0] == s[n-1])cout << (s[0] == 'A'?"Alice\n":"Bob\n");
        else 
        {
            if(s[n-1] == 'A')
            {
                cout << (s[n-2] == 'A'?"Alice\n":"Bob\n");
            }
            else 
            {
                for(int i=0; i<n-1; i++)
                {
                    if(s[i] == 'B')
                    {
                        cout << "Bob\n";
                        return;
                    }
                }
                cout << "Alice\n";
            }   
        }
    }

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long


vector<int> ans(vector<int> v, int bot)
{
    if(bot == 1) return v;
    int i = 1;
    while(i <= bot) i *= 2;
    i/=2;

    vector<int> anss;

    if(i == bot)
    {
        int val = 0;
        for(int i=0; i<bot; i++) val ^= v[i];
        anss.push_back(val);
        for(int i=bot; i<(int)v.size(); i++)
        {
            val ^= (v[i]^v[i-bot]);
            anss.push_back(val);
        }
        return anss;
    }
    else
    {
        vector<int> v1 = ans(v, i);
        return ans(v1 ,bot-i+1);
    }
}


signed main(){
    fastIO;
    int n, k;
    cin >> n >> k;
    vector<int> arr(n);
    for(int i=0; i<n; i++) cin >> arr[i];

    int bot = n - k + 1;

    vector<int> v = ans(arr, bot);

    for(int i: v) cout << i << ' ';

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;


typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(int test){
    int n, k;
    cin>>n>>k;
    vector<pi> v;
    for(int i=0; i<n; i++){
        int a;
        cin>>a;
        v.push_back(make_pair(a%k, a));
    }

    sort(v.begin(), v.end());

    //for(pi p:v) cout<<p.first<<" "<<p.second<<endl;
   
    int count = 1, odd = 0, odd_rem;
    for(int i=0; i<n-1; i++)
    {
        if(v[i].first == v[i+1].first)
        {
            count++;
        }
        else 
        {
            if(count % 2 == 1)
            {
                odd_rem = v[i].first;
                odd++;
            }
            count = 1;
        }
    }


    if(count % 2 == 1){
        odd_rem = v[n-1].first;
        odd++;
    }

    //cout<<odd_rem<<endl;

    if(odd >=2)
    {
        cout<<-1<<endl;
        return;
    }

    int ans = 0, odd_ind;
    bool f = 1;


if(odd == 1){

    for(int i=0; i<n-1; i+=2)
    {
        
        if(v[i].first != odd_rem)
        {
            ans += (v[i+1].second-v[i].second)/k;
      
        }
        else{
            if(f)
            {
                odd_ind = i;
                f = 0;
                i--;
            }
        }
    }

    if(f == 1 && v[n-1].first == odd_rem)
    {
        odd_ind = n-1;
        f = 0;
    }

 
    int odd_ans = 0, min_odd_ans;

    for(int i = odd_ind + 1; i < n-1; i += 2)
    {
        if(v[i+1].first == odd_rem)
        odd_ans += (v[i+1].second - v[i].second)/k;
    }
    
 

    min_odd_ans = odd_ans;

    for(int i= odd_ind + 1; i < n; i++)
    {
        if(i < n && v[i].first == odd_rem)
        {
            if(i % 2 == 1)
            {
                odd_ans += (v[i].second - v[i-1].second)/k;
            }
            else odd_ans -= (v[i].second - v[i-1].second)/k;
            min_odd_ans = min(min_odd_ans, odd_ans);
        }
    }

    ans += min_odd_ans;
   
}
else 
{
    for(int i=0; i<n-1; i+=2)
    {
        
            ans += (v[i+1].second-v[i].second)/k;
    
    }
}

cout<<ans<<endl;

}

int main(){
    fastIO;
    int t;
    cin>>t;
    for(int i=1; i<=t; i++){
        solve(i);
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;


lli gcd(lli a, lli b)
{
    if(a==0 || b==0) return a+b;
    if(a>b) return gcd(a%b, b);
    return gcd(a, b%a);
}

/*
lli gcd(lli a,lli b)
{
    return b?gcd(b,a%b):a;
}*/



void solve(){
    lli n, m;
    cin>>n>>m;
    lli a[n], b[m];
    for(lli i=0; i<n; i++) cin>>a[i];
    for(lli i=0; i<m; i++) cin>>b[i];

    lli g;

    if(n > 1)
    {
    g = abs(a[1]-a[0]);

    for(lli i=2; i<n; i++)
    {
        g = gcd(g, abs(a[i]-a[0]));
        if(g == 1) break;
    }
    }

    else g = 0;

    for(lli i=0; i<m; i++)
    {
        cout<<gcd(abs(a[0]+b[i]), g)<<" ";
    }
    

}

int main(){

    fastIO;
    solve();
}

#include <bits/stdc++.h>
using namespace std;

bool string_type(string s, int n){
    int ind=n;
    for(int i=0; i<n; i++){
        if(s[i]==')'){
            ind = i;
            break;
        }
    }
    for(int i=ind; i<n; i++){
        if(s[i]=='('){
            return false;
        }
    }
    return true;

}

void solve(){
    string s;
    cin>>s;
    int n = s.length();
    if(!string_type(s, n)){
        cout<<"YES"<<endl;
        for(int i=0; i<n; i++){
            cout<<'(';
        }
        for(int i=0; i<n; i++){
            cout<<')';
        }
        cout<<endl;
    }
    else if(s!="()"){
        cout<<"YES"<<endl;
        for(int i=0; i<n; i++){
            cout<<"()";
        }
        cout<<endl;
    }
    else{
        cout<<"NO"<<endl;
    }
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

// #include <bits/stdc++.h>
// #define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
// using namespace std;
// #define int long long 


// void solve(){
//     int n;
//     cin >> n;
//     vector<int> a(n), b(n);
//     for(int i=0; i<n; i++) cin >> a[i];
//     for(int i=0; i<n; i++) cin >> b[i];
//     vector<pair<int, int>> ans;
//     int sz = 0;
//     int start = 0;
    
//     while(1)
//     {
//         int val = -1;
//         bool br = 1;
//         for(int i=start; i<n; i++)
//         {
//             if(val != -1 && a[val] == b[val]) continue;

//             if(val != -1 && a[i] >= b[val] && a[val] > a[i])
//             {
//                 br = 0;
//                 ans.push_back({val + 1, i + 1});
//                 sz++;
//                 swap(a[val], a[i]);
//             }
//             if(a[i] != b[i] && val == -1)
//             {
//                 if(a[i] < b[i])
//                 {
//                     cout << -1 << endl;
//                     return;
//                 }
//                 val = i;
//                 start = val;
//             }
//         }
//         if(br) break;
//     }

//     cout << sz << endl;
//     for(pair<int, int> p: ans) cout << p.first << " " << p.second << endl;

// }

// signed main(){
//     fastIO;
//     int t;
//     cin>>t;
//     while(t--){
//         solve();
//     }
// }


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve() {
    int n;
    cin >> n;
    vector<int> a(n), b(n);
    
    // Input arrays
    for (int i = 0; i < n; i++) cin >> a[i];
    for (int i = 0; i < n; i++) cin >> b[i];

    // Vector to store the swap operations (p, q)
    vector<pair<int, int>> swaps;
    
    // Process the arrays
    while (true) {
        int p = -1;

        // Step 1: Find the first mismatch where a[p] != b[p]
        for (int i = 0; i < n; i++) {
            if (a[i] != b[i]) {
                p = i;
                break;
            }
        }

        // If no mismatch is found, we are done
        if (p == -1) break;

        int q = -1;
        
        // Step 2: Find the smallest q such that p < q and a[p] > a[q] >= b[p]
        for (int i = p + 1; i < n; i++) {
            if (a[i] >= b[p] && a[p] > a[i]) {
                q = i;
                break;
            }
        }

        // If no valid q is found, transformation is not possible
        if (q == -1) {
            cout << -1 << endl;
            return;
        }

        // Swap a[p] and a[q], and record the swap operation
        swap(a[p], a[q]);
        swaps.push_back({p + 1, q + 1}); // Store 1-based index
    }

    // Output the result
    cout << swaps.size() << endl; // Total number of swaps
    for (auto &s : swaps) {
        cout << s.first << " " << s.second << endl; // Output each swap operation
    }
}

signed main() {
    fastIO;
    int t;
    cin >> t;
    while (t--) {
        solve();
    }
}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;

signed main(){
    fastIO;
    int n,q;
    cin >> n >> q;
    int l = 1, r = 2;
    int ans = 0;

    while(q--)
    {
        char h;
        int t;
        cin >> h >> t;
        if(h == 'L') 
        {
            int a = abs(t - l);
            if(abs(t-r) + abs(r-l) == a) ans += n - a;
            else ans += a;
            l = t;
        }
        else
        {
            int a = abs(t - r);
            if(abs(t-l) + abs(l-r) == a ) ans += n - a;
            else ans += a;
            r = t;
        }
    }
    cout << ans << endl;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    int arr[n+1];
    arr[n]=0;
    for(int i=0; i<n; i++){
        cin>>arr[i];
    }
    int a = arr[0];
    int c=0, cmin=INT_MAX;
    for(int i=0; i<n+1; i++){
        if(arr[i]==a){
            c++;
        }
        else{
            cmin = min(c, cmin);
            c = 0;
        }
    }

    if(cmin == n) cout<<-1<<endl;
    else cout<<cmin<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n, m, q;
    cin >> n >> m >> q;
    int l1 = 1, r1 = 0, l2 = m, r2 = m, l3 = n+1, r3 = n;

    vector<pair<int, int>> v;

    v.push_back({m, m});

    bool b = 0;

    for(int i=0; i<q; i++)
    {
        int a, ans = 0;
        cin >> a;

        if(i == 0 && a == m)
        {
            r1 = 1;
            l2 = n, r2 = n, l3 = INT_MAX, r3 = INT_MAX;

            cout << 2 << " ";
            continue;
        }

        if(a <= r1)
        {
            l2--;
            l3--;
        }
        else if(a < l2)
        {
            l2--;
            if(l3 != n+1) r1++, l3--;

        }
        else if(a <= r2)
        {
            r1++, l3--;
        }
        else if(a < l3) 
        {
            r2++;
            if(l3 != n+1) r1++, l3--;
        }
        else if(a >= l3) 
        {
            r2++;
            r1++;
        }

        l2 = max((int)1, l2);
        l3 = max((int)1, l3);

        r2 = min(n, r2);
        r1 = min(n, r1);

        if(r1 >= l2)
        {
            l1 = INT_MIN, r1 = INT_MIN, l2 = 1;
        }

        if(l3 <= r2)
        {
            l3 = INT_MAX, r3 = INT_MAX;

            r2 = n;
        }

        ans = (r2 - l2 + 1);

        if(l1 != INT_MIN) ans += max((int)0, r1 - l1 + 1);
        if(r3 != INT_MAX) ans += max((int)0, r3 - l3 + 1);

        cout << ans << " ";

    }

    cout << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

signed main(){
    fastIO;
    int n, h, m, ans = 0;

    set<int> balance;

    cin >> n >> h >> m;

    vector<pair<int, pair<int, int>>> v;


    for(int i=0; i<n; i++)
    {
        int a, b;
        cin >> a >> b;

        v.push_back({min(a, b), {a, b}});
    }

    sort(v.begin(), v.end());

    for(int i=0; i<n; i++)
    {
        if(v[i].second.first < v[i].second.second)
        {
            if(h >= v[i].second.first)
            {
                h -= v[i].second.first;
                ans++;
            }
            else
            {
                sort(v.begin() + i, v.end(), [](pair<int, pair<int, int>> &p1, pair<int, pair<int, int>> &p2) -> bool
                {
                    return p1.second.second < p2.second.second;
                }
                );


                for(int j=i; j<n; j++)
                {
                    if(m >= v[j].second.second)
                    {
                        m -= v[j].second.second;
                        ans++;
                    }

                    cout << ans << endl;
                    return 0;
                }
            }
        }
        else if(v[i].second.first > v[i].second.second)
        {
            if(m >= v[i].second.second)
            {
                m -= v[i].second.second;
                ans++;
            }
            else
            {
                sort(v.begin() + i, v.end(), [](pair<int, pair<int, int>> &p1, pair<int, pair<int, int>> &p2) -> bool
                {
                    return p1.second.first < p2.second.first;
                }
                );


                for(int j=i; j<n; j++)
                {
                    if(h >= v[j].second.first)
                    {
                        h -= v[j].second.first;
                        ans++;
                    }

                    cout << ans << endl;
                    return 0;
                }
        }
    }

    cout << ans << endl;


}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

class segtree
{
    int size;
    vector<int> sums;

public:
    segtree(int n = 1)
    {
        size = 1;
        while (size < n)
            size *= 2;
        sums.assign(2 * size, 0);
    }

    void build(vector<int> &v, int x, int lx, int rx)
    {
        if(rx - lx == 1)
        {
            if(lx < v.size())
                sums[x] = v[lx];
            return;
        }

        int m = (lx+rx)/2;

        build(v, 2*x+1, lx, m);
        build(v, 2*x+2, m, rx);

        sums[x] = __gcd(sums[2*x+1], sums[2*x+2]);
    }

    void build(vector<int> &v)
    {
        build(v, 0, 0, size);
    }

    void set(int i, int v, int x, int lx, int rx)
    {
        if (rx - lx == 1)
        {
            sums[x] = v;
            return;
        }

        int m = (lx + rx) / 2;

        if (i < m)
            set(i, v, 2 * x + 1, lx, m);
        else
            set(i, v, 2 * x + 2, m, rx);

        sums[x] = __gcd(sums[2 * x + 1], sums[2 * x + 2]);
    }

    void set(int i, int v)
    {
        set(i, v, 0, 0, size);
    }

    int ggcd(int l, int r, int x, int lx, int rx)
    {
        if (l >= rx || r <= lx)
            return 0;
        if (lx >= l && rx <= r)
            return sums[x];

        int m = (lx + rx) / 2;
        int s1 = ggcd(l, r, 2 * x + 1, lx, m);
        int s2 = ggcd(l, r, 2 * x + 2, m, rx);

        return __gcd(s1, s2);
    }

    int ggcd(int l, int r)
    {
        return ggcd(l, r, 0, 0, size);
    }
};

void solve(){
    int n, q;
    int prev = -1;
    vector<int> v;

    for(int i = 0; i<n; i++)
    {
        int a;
        cin >> a;
        if(prev != -1) v.push_back(a - prev);
        prev = a;
    }

    segtree st(n-1);
    st.build(v);

    while(q--)
    {
        int l, r;
        cin >> l >> r;
        l--, r--;

        cout << st.ggcd(l, r) << " ";
    }

    cout << endl;


}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

int cnt(int arr[], int n, int k){
    int count = 0;
    for(int i=0; i<n; i++){
        if(k==arr[i]){
            count++;
        }
    }
    return count;
}

int findex(int arr[], int n, int how_many, int k){
int count=0;
for(int i=0; i<n; i++){
    if(k==arr[i]){
        count++;
    }
    if(count==how_many){
        return i;
    }
}
return -1;
}

int lindex(int arr[], int n, int how_many, int k){
int count=0;
for(int i=n-1; i>=0; i--){
    if(k==arr[i]){
        count++;
    }
    if(count==how_many){
        return i;
    }
}
return -1;
}



void solve(){
    int n, k;
    cin>>n>>k;
    int c[n];
    for(int i=0; i<n; i++){
        cin>>c[i];
    }
    if(c[0]==c[n-1]){
        if(cnt(c, n, c[0]) >= k){
            cout<<"YES"<<endl;
        }
        else{
            cout<<"NO"<<endl;
        }
    }
    else{
        int a = findex(c, n, k, c[0]);
        int b = lindex(c, n, k, c[n-1]);
        //cout<<a<<" "<<b<<endl;
        if(a != -1 && b != -1 && b>a){ 
                cout<<"YES"<<endl;
        }
        else{
            cout<<"NO"<<endl;
        }
    }
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, k;
    cin>>n>>k;
    int a[n], b[n];
    vector <int> a1, b1;
    for(int i=0; i<n; i++) cin>>a[i];
    for(int i=0; i<n; i++) cin>>b[i];
    sort(a, a+n);
    sort(b, b+n);
    for(int i=0; i<n-1; i++){
        if(a[i]==a[i+1]){
            a1.push_back(a[i]);
            a1.push_back(a[i]);
        }
        if(b[i]==b[i+1]){
            b1.push_back(b[i]);
            b1.push_back(b[i]);
        }
    }
    if(a[0]!=a[1]) a1.push_back(a[0]);
    if(b[0]!=b[1]) b1.push_back(b[0]);
     for(int i=1; i<n-1; i++){
        if(a[i]!=a[i+1] && a[i] != a[i-1]){
            a1.push_back(a[i]);
        }
        if(b[i]!=b[i+1] && b[i]!=b[i-1]){
            b1.push_back(b[i]);
        }
    }
    if(a[n-1]!=a[n-2]) a1.push_back(a[n-1]);
    if(b[n-1]!=b[n-2]) b1.push_back(b[n-1]);
    for(int i=0; i<2*k; i++){
        cout<<a1[i]<<" ";
    }
    cout<<"\n";
    for(int i=0; i<2*k; i++){
        cout<<b1[i]<<" ";
    }
    cout<<"\n";


}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;


void solve(){
    lli n, minn = 0, maxx = 0;
    cin>>n;
    
    for(lli i=0; i<n; i++)
    {
        lli a;
        cin>>a;
        lli m;
        m = min(min(minn+a, abs(minn+a)), min(maxx+a, abs(maxx+a)));
        maxx = max(max(minn+a, abs(minn+a)), max(maxx+a, abs(maxx+a)));
        minn = m;
    }

    cout<<maxx<<endl;
    
}

int main(){
    fastIO;
    lli t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


signed main(){
    fastIO;
    int n;
    cin >> n;
    int arr[n+1];
    arr[n] = -1;
    int count = 1;

    vector<int> v;

    for(int i=0; i<n; i++) cin >> arr[i];
    
    for(int i=1; i<= n-1; i++)
    {
        if(arr[i] > arr[i-1] && arr[i] < arr[i+1]) count++;
        else if(arr[i] > arr[i-1] && arr[i] > arr[i+1])
        {
            v.push_back(count);
            count = 1;
        }
    }

    int ans = 0;

    for(int i=0; i <= (int)v.size()-2; i++) ans += v[i]*v[i+1];

    cout << ans << endl;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;


int main(){
int a1[3][3] = {{8,3,4},{1,5,9},{6,7,2}};
int a2[3][3] = {{6,1,8},{7,5,3},{2,9,4}};
int a3[3][3] = {{2,7,6},{9,5,1},{4,3,8}};
int a4[3][3] = {{4,9,2},{3,5,7},{8,1,6}};
int a5[3][3] = {{4,3,8},{9,5,1},{2,7,6}};
int a6[3][3] = {{8,1,6},{3,5,7},{4,9,2}};
int a7[3][3] = {{6,7,2},{1,5,9},{8,3,4}};
int a8[3][3] = {{2,9,4},{7,5,3},{6,1,8}};
int a0[3][3];
for(int i =0;i<3;i++){
    for(int j=0;j<3;j++){
        cin>>a0[i][j];
    }
}
int d = 0;
int m = INT_MAX;
for(int i =0;i<3;i++){
    for(int j=0;j<3;j++){
        d += abs(a0[i][j]-a1[i][j]);
    }
}
m = min(m,d);
d= 0;
for(int i =0;i<3;i++){
    for(int j=0;j<3;j++){
        d += abs(a0[i][j]-a2[i][j]);
    }
}
m = min(m,d);
d= 0;
for(int i =0;i<3;i++){
    for(int j=0;j<3;j++){
        d += abs(a0[i][j]-a3[i][j]);
    }
}
m = min(m,d);
d= 0;
for(int i =0;i<3;i++){
    for(int j=0;j<3;j++){
        d += abs(a0[i][j]-a4[i][j]);
    }
}
m = min(m,d);
d= 0;
for(int i =0;i<3;i++){
    for(int j=0;j<3;j++){
        d += abs(a0[i][j]-a5[i][j]);
    }
}
m = min(m,d);
d= 0;
for(int i =0;i<3;i++){
    for(int j=0;j<3;j++){
        d += abs(a0[i][j]-a6[i][j]);
    }
}
m = min(m,d);
d= 0;
for(int i =0;i<3;i++){
    for(int j=0;j<3;j++){
        d += abs(a0[i][j]-a7[i][j]);
    }
}
m = min(m,d);
d= 0;
for(int i =0;i<3;i++){
    for(int j=0;j<3;j++){
        d += abs(a0[i][j]-a8[i][j]);
    }
}
m = min(m,d);
cout<<m;

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin >> n;
    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];
    int ans = n;

    sort(arr, arr+n);

    for(int i=0; i<n; i++) ans = min(ans, arr[i] + (n-i-1));
    


    cout << ans << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    cout<<n-1<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

const int N = 1e7+10;
int spf[N];

signed main(){
    fastIO;

    memset(spf, -1, sizeof(spf));

    for(int i=2; i<N; i++) if(spf[i] == -1) for(int j=i; j<N; j += i) if(spf[j] == -1) spf[j] = i;    

    int n;
    cin >> n;
    vector<pair<int, int>> ans(n, {-1, -1});

    for(int i=0; i<n; i++)
    {
        int a;
        cin >> a;

        set<int> s;
        int prod = 1;

        while(a != 1)
        {
            s.insert(spf[a]);
            a /= spf[a];
        }

        if(s.size() > 1) 
        {
            for(int j: s) prod *= j;
            ans[i] = {*s.begin(), prod / *s.begin()};
        }
    }

    for(int i=0; i<n; i++) cout << ans[i].first << " ";
    cout << endl;
    for(int i=0; i<n; i++) cout << ans[i].second << " ";

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;

lli binpow(lli a, lli b) {
    lli res = 1;
    while (b > 0) {
        if (b & 1)
            res = res * a;
        a = a * a;
        b >>= 1;
    }
    return res;
}


void solve(){
    lli a, b, c;
    cin >> a >> b >> c;
    cout << binpow(10, a-1) << " " << binpow(10, c-1)*(binpow(10, b-c) + 1)<< endl;
}

int main(){
    fastIO;
    lli t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

signed main(){
    fastIO;
    int n;
    cin>>n;
    bool prime = 1;

    for(int i=2; i*i<=n; i++)
    {
        if(n%i == 0)
        {
            prime = 0;
        }
    }

    if(prime)
    {
        cout<<1;
        return 0;
    }

    if(n%2 == 0) cout<<2;
    else
    {
        for(int i=2; i*i<=n-2; i++)
        {
            if((n-2)%i == 0)
            {
                cout<<3;
                return 0;
            }
        }
        cout<<2;
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    int map = 0, pie = 0, mappie = 0;
    string s;
    cin>>s;

    for(int i=0; i<n-2; i++)
    {
        if(s[i] == 'm' && s[i+1] == 'a' && s[i+2] == 'p') map++;
        if(s[i] == 'p' && s[i+1] == 'i' && s[i+2] == 'e') pie++;
        if(i+4 < n && s[i] == 'm' && s[i+1] == 'a' && s[i+2] == 'p'  && s[i+3] == 'i' && s[i+4] == 'e') mappie++;
    }
    cout<<map+pie-mappie<<endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin >> n;
    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];
    int maxx[n];
    maxx[0] = arr[0];
    for(int i=1; i<n; i++)
    {
        maxx[i] = max(maxx[i-1], arr[i]);
        
    }

    int sum = 0;

    for(int i=n-1; i>=0; i--)
    {

 
        cout << sum + maxx[i] << ' ';
        sum += arr[i];

    }
    cout << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;;
    cin>>n;
    int arr[n];
    for(int i=0; i<n; i++) cin>>arr[i];
    sort(arr, arr+n);
    int ans = 0;
    for(int i=(n-1)/2; i<n; i++)
    {
        if(arr[i] == arr[(n-1)/2]) ans++;
    }

    cout<<ans<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n, prod=1, sum, great=0;
    cin >> n;
    int arr[n];
    for(int i=0; i<n; i++) 
    {
        cin >> arr[i];
        if(!great) prod*=arr[i];
        if(prod >= (1LL<<20)) great=1;
    }

    if(great) 
    {
        int first=n, last = 1;

        for(int i=0; i<n; i++)
        {
            if(arr[i]>1)
            {
                first = min(first, i+1);
                last = max(last, i+1);
            }
        }


        if(first == n && last == 1) cout << "1 1\n";
        else cout << first << " " << last << endl;


    }
    else
    {
        vector<int> ind;
        for(int i=0; i<n; i++) if(arr[i] > 1) ind.push_back(i);

        int maxx = 0;
        pair<int, int> ans = {1, 1};

        for(int i=0; i<ind.size(); i++)
        {
            for(int j=i+1; j<ind.size(); j++)
            {
                prod=1, sum=0;
                for(int k=ind[i]; k<=ind[j]; k++){prod *= arr[k]; sum += arr[k];}
                if(prod - sum > maxx)
                {
                    maxx = prod-sum;
                    ans = {ind[i]+1, ind[j]+1};
                }
            }
        }
        cout << ans.first << " " << ans.second << endl;
    }
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

void solve(){
    int n;
    bool no = 1;
    string a, b, c;
    cin>>n>>a>>b>>c;
    for(int i=0; i<n; i++){
        if(c[i]!=a[i]&&c[i]!=b[i]){
            no = 0;
            break;
        }
    }
    if(no){
        cout<<"NO"<<endl;
    }
    else{
        cout<<"YES"<<endl;
    }
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    string s1, s2;
    cin>>s1>>s2;
    int n = s1.length();
    bool yes = false;
    for(int i=0; i<n-1; i++){
        if(s1[i]=='0' && s2[i]=='0' && s1[i+1]=='1' && s2[i+1]=='1'){
            yes = 1;
            break;
        }
    }
    if(yes){
        cout<<"YES"<<endl;
    }
    else{
        cout<<"NO"<<endl;
    }
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;



int main(){
    fastIO;
    int n, ans;
    cin>>n;
    int arr[n];
    for(int i=0; i<n; i++){
        cin>>arr[i];
    }
    for(int i=0; i<n-1; i++){
        if((arr[i]+arr[i+1])%2 == 1){
            ans = i+1;
        }
    }
    
    if((arr[n-1]+arr[n-3])%2==1 && (arr[n-3]+arr[n-2])%2==0){
        ans = n;
    }
    cout<<ans;

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

signed main(){
    int n, l, ans = 0;
    cin >> n >> l;

    int arr[n+1];
    arr[0]=0;

    map<int, int> freq;
    freq[0]++;

    for(int i=0; i<n-1; i++)
    {
        cin >> arr[i+1];
        arr[i+1] += (arr[i]%l);
        arr[i+1] %= l;
        freq[arr[i+1]]++;
    }

    if(l%3)
    {
        cout << 0;
    }
    else 
    {
        l = l/3;
        for(auto p: freq)
        {
            if(freq.find(p.first+l) != freq.end() && freq.find(p.first-l) != freq.end())
            ans += p.second * freq[p.first+l] * freq[p.first-l];
        }
        cout << ans;
    }
}

#include <bits/stdc++.h>
using namespace std;

string all_zero(string s, int l, int k){
for(int i=0; i<k; i++){
s[l-i-1] = '0';
}
return s;
}

void solve(){
    string s;
    cin>>s;
    s = "0"+s;
    int l = s.length();
    for(int i=0; i<l; i++){
        if(s[l-i-1]>=5){
            if(s[l-i-2]!=9){
            s[l-i-2] = char(s[l-i-2] + 1);}
        all_zero(s, l, i);
        }
    }
    cout<<s<<endl;
}

int main(){
    
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}




/*
#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;


void solve(){
    lli n, x;
    cin>>n>>x;
    lli s[n], h[n], smallest = INT64_MAX, s_max = 0;
    for(lli i=0; i<n; i++)
    {
        cin>>s[i]>>h[i];
        s_max = max(s_max, s[i]);
        smallest = min(smallest, h[i] - s[i]);
    }


    if(x - s_max <= 0) cout << 1 << endl;
    
    else{

    if(smallest >= 0)
    {
        cout<<-1<<endl;
        return;
    }

    smallest *= -1;
    
    cout << 1 + max((x-s_max+smallest-1)/smallest, (lli)0) << endl;
    }

}

int main(){
    fastIO;
    lli t;
    cin>>t;
    while(t--){
        solve();
    }
}
*/

#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
#define vin vector<int>
#define vll vector<long long>

void solve(){

    int n,x, m = 0 , m2 = 0,ans = 0;
    cin>>n>>x;
    vin s(n),d(n) ;

    for(int i=0; i<n ; i++){
        cin>>s[i]>>d[i];
        m2 = max(m2,s[i]);
        if(s[i] - d[i] > 0 ){
            m = max(m,s[i] - d[i]);
        }
    }
    if(m == 0){
        cout<<-1;
        return;
    }
    if(x <= m2){
        cout<<1;
        return;
    }
    int x2 = x-m2;
    ans = (x2+m-1)/m;
    if(ans*m >= x){
        cout<<ans;
        return;
    }
    cout<<ans+1;

}

int main(){
    ll z;
    cin>>z;
    while(z--){
        solve();
        cout<<"\n";
    }
    return 0;
}

#include <bits/stdc++.h>
using namespace std;

int f(int a, int b, int d=0){
    if(a==2; b==1){
        return 1;
    }
    
}

void solve(){
    int p, q, x;
    cin>>p>>q>>x;
    for(int i=0; i<x/q; i++){
        if(p|(x-q*i)){
            if(i!=(x-q*i)/p){
            f(max(i, (x-q*i)/p), min(i, (x-q*i)/p));
            }
        }
    }
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

signed main(){
    fastIO;
    int n;
    cin >> n;
    vector<vector<int>> adj(n);
    vector<bool> visited(n, 0);
    map<pair<int,int>, int> mp;
    
    vector<pair<int, int>> edges(n-1);

    int max_deg_node, max_deg = 0;

    for(int i=0; i<n-1; i++)
    {
        int u, v;
        cin >> u >> v;
        u--, v--;
        if(u > v) swap(u, v);
        mp[{u, v}] = i+1;
        edges.push_back({u, v});
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    for(int i=0; i<n; i++)
    {
        if(adj[i].size() > max_deg)
        {
            max_deg = adj[i].size();
            max_deg_node = i;
        }
    }

    cout << max_deg << endl;

    vector<vector<int>> ans(max_deg);

    function <void(int, int)> dfs = [&](int u, int time) -> void
    {
        visited[u] = 1;
        int day = 1;
        for(int v : adj[u])
        {
            if(!visited[v])
            {
                if(day == time) day++;
                ans[day - 1].push_back(mp[{min(u, v), max(u, v)}]);
                dfs(v, day);
                day++;
            }
        }
    };

    dfs(max_deg_node, -1);

    for(vector<int> v: ans)
    {
        cout << v.size() << " ";
        for(int i: v) cout << i << " ";
        cout << endl;
    }
}

#include<bits/stdc++.h>
using namespace std;
typedef long long int lli;
void solve(){
lli n, k;
cin>>n>>k;
if(n==k){
    cout<<"YES\n";
    cout<<1<<endl<<1<<endl;
}
else if(n <= 2*k-2) cout<<"NO\n";

else {
    cout<<"YES\n";
    cout<<2<<endl;
    cout<<n+1-k<<" "<<1<<endl;
}





}

int main(){
    lli z;
    cin>>z;
    while(z--){
     solve();
    }
    return 0;
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n;
    cin>>n;
    vector <int> v;
    int max=0, position;
    for(int i=0; i<n; i++){
        int a, b;
        cin>>a>>b;
        if(a<=10){
            if(b>max){
                max = b;
                position = i+1;
            }
        }
    }
    cout<<position<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;


int josephus(int n)
{
    if(n == 1) return 1;
    
    return 2*josephus(n/2)+2*(n%2)-1;
}


signed main(){

    int n = 10000;
    cout << n-josephus(n)/2 << endl;
    
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;


int main(){
    fastIO;
    int n, k;
    cin >> n >> k;
    int arr[n], dp[n];

    for(int i=0; i<n; i++) 
    {
        cin >> arr[i];
        dp[i] = INT_MAX;
    }

    dp[0]=0;

    for(int i=1; i<n; i++) for(int j=i-1; j>=max(i-k, 0); j--) dp[i] = min(dp[i], dp[j] + abs(arr[i] - arr[j]));
        
    

    cout << dp[n-1];
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n, ans=0;
    cin >> n;
    string s;
    cin >> s;

    vector<int> prev(n, 0), next(n, 0);

    for(int i=0; i<n; i++)
    {
        if(i == 0) prev[i] = (s[i] == 'A');
        else 
        {
            if(s[i] == 'C') prev[i] = 0;
            else prev[i] = prev[i-1]+(s[i] == 'A');
        }
    }

    for(int i=n-1; i>=0; i--)
    {
        if(i == n-1) next[i] = (s[i] == 'C');
        else 
        {
            if(s[i] == 'A') next[i] = 0;
            else next[i] = next[i+1] + (s[i] == 'C');
        }
    }

    for(int i=0; i<n; i++)
        if(s[i] == 'B') ans += max(prev[i], next[i]);

    cout << ans << endl;
    
    
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n;
    
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

int index(int arr[], int n, int element){
    for(int i=0; i<n; i++){
        if(arr[i]==element){
            return i;
        }
    }
    return -1;
}

void solve(){
    int n;
    cin>>n;
    int a1[n], a2[n];
    for(int i=0; i<n; i++){
        cin>>a1[i];
        a2[i]=a1[i];
    }
    sort(a2, a2+n);
    for(int i=0; i<n; i++){
        cout<<n-index(a2, n, a1[i])<<' ';
        a2[index(a2, n, a1[i])]=0;
    }
    cout<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n;
    cin >> n;
    
    vector<vector<int>> adj(n+1);
    vector<int> dp(n+1, -3), apply(n+1, 1);
    vector<int> visited(n+1, 0);
    
    for(int i=1; i<=n; i++)
    {
        int u;
        cin >> u;
        adj[i].push_back(u);
        apply[u] = 0;
    }

    function <void(int)> dfs = [&](int u) -> void
    {
        visited[u] = 1;

        for(int v: adj[u])
        {
            if(!visited[v])
            {
                dfs(v);
                if(dp[v] != -2) dp[u] = 1 + dp[v];
                else if(dp[u] != -1) dp[u] = -2;
            }
            else
            {
                if(dp[v] == -1 || dp[v] == -2)
                {
                    dp[u] = 0;
                    return;
                }

                if(dp[v] != -3)
                {
                    dp[u] = 1 + dp[v];
                    return;
                }

                dp[u] = -2;
                dp[v] = -1;
            }
        }
    };

    int ans = 0;

    for(int i=1; i<=n; i++)
    {
        if(apply[i])
        {
            dfs(i);
            ans = max(ans, 1 + dp[i]);
        }
    }

    cout << ans + 2 << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



signed main(){
    fastIO;
    string s;
    string ans = "Yes\n";
    set<char>t;

    cin >> s;

    char c;
    while(cin >> c) t.insert(c);

    for(int i=1; i<s.size(); i++)
    {
        if(s[i] >= 'A' && s[i] <= 'Z')
        {
            if(t.find(s[i-1]) == t.end()) ans = "No\n";
        }
    }

    cout << ans;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    set<int>s;
    for(int i=0; i<n; i++) {
        int a;
        cin>>a;
        s.insert(a);
    }
    int c=1;
    for(int i:s){
        if(i!=c) break;
        c++;
    }
    
    if(c==s.size()+1){
        if(c%2==0) cout<<"Alice\n";
    else cout<<"Bob\n";
    }
    else if(c%2) cout<<"Alice\n";
    else cout<<"Bob\n";

}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 




int tc;

void solve(){
    int n, k;
    cin >> n >> k;
    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];
    sort(arr, arr+n);
    int c =  0;

    if(n >= 2)
    c += 2*arr[0]*(n-2);
    c += arr[0];

    if(c <= k) cout << "Case #" << tc << ": YES\n";
    else cout << "Case #" << tc << ": NO\n";
}




void main_() {
    freopen("walk_the_line_input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);

    fastIO;
    int t;
    cin>>t;
    for(tc = 1; tc<=t; tc++){
        solve();
    }
}
static void run_with_stack_size(void (*func)(void), size_t stsize) {
    char *stack, *send;
    stack = (char *)malloc(stsize);
    send = stack + stsize - 16;
    send = (char *)((uintptr_t)send / 16 * 16);
    asm volatile(
        "mov %%esp, (%0)\n"
        "mov %0, %%esp\n"
        :
        : "r"(send));
    func();
    asm volatile("mov (%0), %%esp\n" : : "r"(send));
    free(stack);
}
signed main() {
    run_with_stack_size(main_, 1024 * 1024 * 1024); // run with a 1 GiB stack
    return 0;
}









// int tc;

// void solve(){
//     int n, k;
//     cin >> n >> k;
//     int arr[n];
//     for(int i=0; i<n; i++) cin >> arr[i];
//     sort(arr, arr+n);
//     int c =  0;

//     if(n >= 2)
//     c += 2*arr[0]*(n-2);
//     c += arr[0];

//     if(c <= k) cout << "Case #" << tc << ": YES\n";
//     else cout << "Case #" << tc << ": NO\n";
// }

// signed main(){

//     freopen("walk_the_line_input.txt", "r", stdin);
//     freopen("output.txt", "w", stdout);

//     fastIO;
//     int t;
//     cin>>t;
//     for(tc = 1; tc<=t; tc++){
//         solve();
//     }
// }

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

#define int long long
#define inf 1e9+7
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    int a[n], b[n+1], sum = 0, to_add = inf;
    bool add = 1;
    for(int i=0; i<n; i++) cin>>a[i];
    for(int i=0; i<n+1; i++) cin>>b[i];
    for(int i=0; i<n; i++)
    {
        if(((b[n]-a[i]) * (b[n]-b[i])) <= 0) add = 0;
        to_add = min(abs(b[n] - b[i]), to_add);
        to_add = min(abs(b[n] - a[i]), to_add);
        sum += abs(a[i]-b[i]);
    }

    if(add) cout<<sum+to_add+1<<endl;
    else cout<<sum+1<<endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



void solve(){
    int n, ans=INT64_MAX;
    cin >> n;
    int arr[n];

    for(int i=0; i<n; i++) cin >> arr[i];

    int next[n];
    next[n-1] = n-1;

    for(int i=n-2; i>=0; i--)
    {
        if(arr[i] == arr[i+1]) next[i]=next[i+1];
        else next[i]=i;
    }

    for(int i=0; i<n; i++) ans = min(ans, arr[i] * (i + n - next[i] - 1));

    cout << ans << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

void solve(){
    int n, ans = 0;
    cin>>n;
    int a[n], b[n];
    for(int i=0; i<n; i++){
        cin>>a[i];
    }
    for(int i=0; i<n; i++){
        cin>>b[i];
    }
    sort(a, a+n);
    sort(b, b+n);
    for(int i=0; i<n; i++){
    
      if(a[i]==b[i]){
    
      }  
      else if((to_string(a[i]).length()==b[i] && to_string(b[i]).length()==1)||(to_string(b[i]).length()==a[i] && to_string(a[i]).length()==1)  ){
        ans++;
      }
      else if(to_string(a[i]).length()==to_string(b[i]).length()){
        ans += 2;
      }
      else if(to_string(a[i]) == "1" || to_string(b[i]) == "1"){
        ans+=2;
      }
      else{
        ans+=4;
      }
    }
    cout<<ans<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


int operations(int x, int y, int k)
{
    int ops = 0;
    for(int j = 0; j < y-x+1; j++)
        {
            ops += x;
            k--;
            if(k <= 0)
            {
                return ops;
            }
        }
        x--;
        int g = 0;
        while(x != 0)
        {
            k--;
            ops += x;
            if(g%2 == 1) x--;
            g++;
            if(k <= 0)
            {
                return ops;
            }
        }
        k--;
        return ops;
}

void solve(){
    int n, k, ops = 0;
    cin>>n>>k;
    vector<pair<int, pair<int, int>>> v;
    for(int i=0; i<n; i++)
    {
        int x, y;
        cin>>x>>y;
        if(x > y) swap(x, y);
        v.push_back(make_pair(x*y-x-y, make_pair(x, y)));
    }
    sort(v.begin(), v.end());

    for(int i=0; i<n; i++)
    {
        int x = v[i].second.first;
        int y = v[i].second.second;

        if(k < x + y)
        {
            int oops = INT_MAX;
            for(int j=i; j<n; j++)
            {
                oops = min(oops, operations(v[j].second.first, v[j].second.second, k));
            }
            cout << ops + oops << endl;
            return;
        }


        for(int j = 0; j < y-x+1; j++)
        {
            ops += x;
            k--;
            if(k <= 0)
            {
                cout<<ops<<endl;
                return;
            }
        }
        x--;
        int g = 0;
        while(x != 0)
        {
            k--;
            ops += x;
            if(g%2 == 1) x--;
            g++;
            if(k <= 0)
            {
                cout<<ops<<endl;
                return;
            }
        }
        k--;
        if(k <= 0)
        {
            cout<<ops<<endl;
            return;
        }
    }
    cout<<-1<<endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, m;
    cin>>n>>m;
    string s1;
    cin>>s1;
    set <int> s;
    for(int i=0; i<m; i++)
    {
        int a;
        cin>>a;
        s.insert(a);
    }
    string c;
    cin>>c;
    sort(c.begin(), c.end());
    int ind = 0;
    for(int i:s)
    {
        s1[i-1] = c[ind];
        ind++;
    }
    cout<<s1<<endl;

}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include<iostream>

using namespace std;
int gcd(long long int a, long long int b){
    if(b%a == 0){
        return a;
    }
    else{
    return gcd(b%a, a);
    }
}

int main(){
    
    long long int t;
    cin>>t;
    for(long long int i=0; i<t; i++){
    long long int n;
    cin>>n;
    long long int arr[n];
    for(long long int j=0; j<n; j++){
        cin>>arr[j];
    }
    long long int ps[n];
    long long int sum = 0;
    for(long long int j=0; j<n; j++){
        sum = sum + arr[j];
        ps[j] = sum;
    }
    long long int gcdm = 1;
    for(long long int j=0; j<n-1; j++){
        if(gcd(ps[j], sum) >= gcdm){
            gcdm = gcd(ps[j], sum);
        }
    }
    cout<<gcdm<<endl;
    }
}

#include <bits/stdc++.h>
using namespace std;
#define int long long
#define optimize ios::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr)

vector<vector<int>> network;
vector<int> connection_count;
vector<pair<int, int>> connection_order;

int flip_bit(int x) {
    return x ^ 1;
}


void do_nothing_extra(int seed) {
    volatile int bogus = 0;
    for (int i = 0; i < 3; ++i)
        bogus += (seed * i) % (i + 2) + 42;
    vector<int> trash((int)seed % 10 + 1, (int)bogus);
    map<int, int> shadow;
    for (int j = 0; j < trash.size(); ++j) shadow[j] = trash[j] ^ j;
}

void traverse(int current, int parent, int direction_toggle, int pivot) {
    for (int neighbor : network[current]) {
        if (neighbor == parent) continue;

        if (direction_toggle) 
            connection_order.emplace_back(neighbor, current);
        else 
            connection_order.emplace_back(current, neighbor);

        traverse(neighbor, current, flip_bit(direction_toggle), pivot);
        
        if (current == pivot)
            direction_toggle = flip_bit(direction_toggle);
    }
}

void handle_case() {
    int n;
    cin >> n;
    
    
    network.assign(n, {});
    connection_count.assign(n, 0);
    connection_order.clear();

    for (int i = 0; i < n - 1; ++i) {
        int node_a, node_b;
        cin >> node_a >> node_b;
        --node_a; --node_b;
        network[node_a].push_back(node_b);
        network[node_b].push_back(node_a);
        connection_count[node_a]++;
        connection_count[node_b]++;
    }

    int pivot_node = -1;
    for (int i = 0; i < n; ++i) {
        if (connection_count[i] == 2) {
            pivot_node = i;
            break;
        }
    }

    
    do_nothing_extra(pivot_node + 13);

    if (pivot_node == -1) {
        cout << "NO\n";
        return;
    }

    traverse(pivot_node, -1, 0, pivot_node);

    cout << "YES\n";
    for (auto [from, to] : connection_order) {
        cout << from + 1 << " " << to + 1 << '\n';
    }
}

int32_t main() {
    optimize;
    int tests;
    cin >> tests;
    while (tests--) {
        handle_case();
    }
}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, x, y;
    cin>>n>>x>>y;
    int arr[x];
    for(int i=0; i<x; i++) cin>>arr[i];
    sort(arr, arr+x);
    lli ans = x-2;
    for(int i=0; i<x-1; i++){
        if(arr[i+1]-arr[i] == 2) ans++;
    }
    if(arr[x-1]-arr[0] == n-2) ans++;
    cout<<ans<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin >> n;
    int arr[n];

    for(int i=0; i<n; i++) cin >> arr[i];
    string s;
    cin >> s;

    int zero = 0, one = 0;
    int pref[n+1];
    pref[0] = 0;

    for(int i = 0; i<n; i++)
    {
        if(s[i] == '0') zero ^= arr[i];
        else one ^= arr[i];
        pref[i+1] = pref[i] ^ arr[i];
    }

    int q;

    cin >> q;

    for(int i = 0; i<q; i++)
    {
        int a;
        cin >> a;
        if(a == 2) 
        {
            int bit;
            cin >> bit;
            if(bit == 0) cout << zero << " ";
            else cout << one << " ";
        }
        else 
        {
            int l, r;
            cin >> l >> r;
            zero ^= (pref[r] ^ pref[l-1]);
            one ^= (pref[r] ^ pref[l-1]);
        }
        
    }

    cout << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


signed main(){
    fastIO;
    int n;
    cin >> n;
    string s1, s2;
    cin >> s1 >> s2;
    for(int i=0; i<n; i++)
    {
        if(s1[i] == 'o' && s2[i] == 'o')
        {
            cout << "Yes\n";
            return 0;
        }
    }
    cout << "No\n";
}

#include<bits/stdc++.h>
using namespace std;
typedef long long int lli;
void solve(){
    int n,k;
    cin>>n>>k;
    if(n == 1){
        cout<<k<<endl;
        return;
    }
    // if(k&(k+1) == 0){
    //     cout<<k<<" ";
    //     for(int i = 1; i<n ;i++){
    //         cout<<0<<" ";
    //     }
    //     cout<<endl;
    //     return;
    // }
    int a = k,b = 0;
    while(a){
        b = a;
        a = a&(a-1);
    }
        cout<<b-1<<" ";
        cout<<k+1-b<<" ";
    for(int i = 2; i<n ;i++){
        cout<<0<<" ";
    }
    cout<<endl;
}
 
int main(){
    lli z;
    cin>>z;
    while(z--){
     solve();
    }
    return 0;
}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;

vector <lli> factors(lli n){
    vector<lli>ans;
    for(lli i=1; i*i<=n; i++){
        if(n%i==0) ans.push_back(i);
        if(n%i==0 && i*i!=n) ans.push_back(n/i);
    }
    sort(ans.begin(), ans.end(), greater<lli>());
    return ans;
}

const lli N = 1e6+10;
lli dp[N];
const lli MOD = 1e9+7;

int main(){
    fastIO;
    lli n;
    cin>>n;
    lli arr[n];
    for(lli i=0; i<n; i++) cin>>arr[i];
    
    memset(dp, 0, sizeof(dp));
    dp[0]=1;
    for(lli i=0; i<n; i++){
        for(lli fact:factors(arr[i])) dp[fact] = (dp[fact] + dp[fact-1])%MOD;
    }
    lli a=0;
    for(lli i=1; i<n+1; i++){
        a = (a + dp[i])%MOD;
    }
    cout<<a%MOD;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

class segtree
{
    int size;
    vector<int> sums;

public:
    segtree(int n = 1)
    {
        size = 1;
        while (size < n)
            size *= 2;
        sums.assign(2 * size, 0);
    }

    void build(vector<int> &v, int x, int lx, int rx)
    {
        if(rx - lx == 1)
        {
            if(lx < v.size())
                sums[x] = v[lx];
            return;
        }

        int m = (lx+rx)/2;

        build(v, 2*x+1, lx, m);
        build(v, 2*x+2, m, rx);

        sums[x] = max(sums[2*x+1], sums[2*x+2]);
    }

    void build(vector<int> &v)
    {
        build(v, 0, 0, size);
    }

    void set(int i, int v, int x, int lx, int rx)
    {
        if (rx - lx == 1)
        {
            sums[x] = v;
            return;
        }

        int m = (lx + rx) / 2;

        if (i < m)
            set(i, v, 2 * x + 1, lx, m);
        else
            set(i, v, 2 * x + 2, m, rx);

        sums[x] = max(sums[2 * x + 1], sums[2 * x + 2]);
    }

    void set(int i, int v)
    {
        set(i, v, 0, 0, size);
    }

    int maxx(int l, int r, int x, int lx, int rx)
    {
        if (l >= rx || r <= lx)
            return 0;
        if (lx >= l && rx <= r)
            return sums[x];

        int m = (lx + rx) / 2;
        int s1 = maxx(l, r, 2 * x + 1, lx, m);
        int s2 = maxx(l, r, 2 * x + 2, m, rx);

        return max(s1, s2);
    }

    int maxx(int l, int r)
    {
        return maxx(l, r, 0, 0, size);
    }
};

void solve(){
    int n;
    cin >> n;
    int arr[n], ans[n], max_ele = 0;

    for(int i=0; i<n ; i++) 
    {
        cin >> arr[i];
        max_ele = max(max_ele, arr[i]);
    }

    vector<int> v(max_ele + 10, 0);

    int lmax[n];
    lmax[0] = arr[0];

    for(int i=1; i<n; i++)
    {
        lmax[i] = max(lmax[i-1], arr[i]);
    }

    for(int i=n-1; i>=0; i--)
    {
        v[arr[i]] = max(v[arr[i]], i);
    }

    segtree st(max_ele + 10);
    st.build(v);

    for(int i=n-1; i>=0; i--)
    {
        int ind = max(st.maxx(0, lmax[i]), i);

        if(ind == i) 
        {
            ans[i] = lmax[i];
        }
        else ans[i] = ans[ind];
    }

    for(int i: ans) cout << i << " ";
    cout << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n, x;
    cin >> n >> x;
    int arr[n];
    int b[n];

    for(int i=0; i<n; i++) cin >> arr[i];
    for(int i=0; i<n; i++) cin >> b[i];

    int dp[n][4];
  
    dp[0][0] = arr[0];
    if(b[0]) dp[0][1] = arr[0];
    else dp[0][1] = INT64_MIN;
    dp[0][2] = INT64_MIN;
    dp[0][3] = INT64_MIN;

    for(int i=1; i<n; i++)
    {
        dp[i][0] = max(arr[i], arr[i] + dp[i-1][0]);
        dp[i][0] = max(dp[i][0], dp[i-1][0]);
        
        dp[i][1] = dp[i-1][1];
        if(b[i]) dp[i][1] = max(arr[i], dp[i][1]);
        else dp[i][1] = max(dp[i-1][1],INT64_MIN);

        if(b[i]) dp[i][1] = max(dp[i][1], arr[i] + dp[i-1][0]);
        dp[i][1] = max(dp[i][1], (dp[i-1][1] == INT64_MIN?INT64_MIN:arr[i] + dp[i-1][1]));

        dp[i][2] = max(dp[i-1][2], (dp[i-1][2] == INT64_MIN?INT64_MIN:dp[i-1][2] + arr[i]));
        if(i>=2)dp[i][2] = max((dp[i-2][0] == INT64_MIN?INT64_MIN:arr[i] + dp[i-2][0]), dp[i][2]);

        dp[i][3] = max(dp[i-1][3], (dp[i-1][3] == INT64_MIN?INT64_MIN:arr[i] + dp[i-1][3]));
        if(b[i]) dp[i][3] = max(dp[i][3], (dp[i-1][2] == INT64_MIN?INT64_MIN:dp[i-1][2] + arr[i]));
        
        if(i>=2)
        {
            dp[i][3] = max(dp[i][3], (dp[i-2][1]==INT64_MIN?INT64_MIN:arr[i] + dp[i-2][1]));
            if(b[i]) dp[i][3] = max(dp[i][3], arr[i] + dp[i-2][0]);
        }
    }

    if(dp[n-1][2] >= x) cout << 0 << endl;
    else cout << max(x - dp[n-1][3], (int)0) << endl;
    

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}


#include <bits/stdc++.h>
using namespace std;

void solve(){
    char a, b, c;
    cin>>a>>b>>c;
    if(a=='a' || b=='b' || c=='c'){
        cout<<"YES"<<endl;
    }
    else{
        cout<<"NO"<<endl;
    }
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long

signed main(){
    fastIO;
    int n, k, ans = 0;
    cin >> n >> k;
    vector<pair<int, int>> v(n);

    for(int i=0; i<n; i++) cin >> v[i].first >> v[i].second;

    sort(v.begin(), v.end(), [](pair<int, int> &p1, pair<int, int> &p2) -> bool{
        if(p1.second < p2.second) return 1;
        if(p1.second > p2.second) return 0;
        return (p1.first < p2.first);
    });

    priority_queue<int, vector<int>, greater<int>> pq;

    for(int i=0; i<n; i++)
    {
        while(pq.size() && pq.top() < v[i].first) pq.pop();
        if(pq.size() < k) 
        {
            pq.push(v[i].second);
            ans++;
        }
    }

    cout << ans << endl;

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long

int dp[101][101][2];

bool win(int odd, int even, bool ev)
{
    if(dp[odd][even][ev] != -1) return dp[odd][even][ev];
    if(odd == 0) return dp[odd][even][ev] = ev;
    
    if(even == 0) 
    {
        if(ev) return dp[odd][even][ev] = ((odd-1)/2)%2;
        return dp[odd][even][ev] = !(((odd-1)/2)%2);
    }
    
    if(win(odd-1, even, ((odd%2)&ev) | (!((odd%2)|ev)))&win(odd, even-1, ((odd%2)&ev) | (!((odd%2)|ev)))) return dp[odd][even][ev] = 0;
    return dp[odd][even][ev] = 1;
}

void solve(){
    int n, a;
    cin >> n;
    int odd=0, even = 0;
    for(int i=0; i<n; i++)
    {
        cin >> a;
        if(a%2) odd++;
        else even++;
    }


    if(win(odd, even, 1)) cout << "Alice\n";
    else cout << "Bob\n";


}

signed main(){
    memset(dp, -1, sizeof(dp));
    fastIO;
    int t;
    cin>>t;
    while(t--)
    {
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    string s;
    cin>>s;
    int ones = 0;
    int oneone = 0;
    for(int i=0; i<n; i++){
        if(s[i]=='1') ones++;
        if(i != n-1 && s[i]=='1' && s[i+1]=='1') oneone ++;
    }
    if(ones % 2 == 1) cout<<"NO\n";
    else if(ones == 2 && oneone == 1) cout << "NO\n";
    else cout<<"YES\n";
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;


void solve(){
    lli n, a, b;
    cin>>n>>a>>b;
    lli k = b-a;
    if(k<0) k = 0;
    if(k>n) k = n;
    lli ans = a*(n-k) + (k*(2*b-k+1))/2;
    cout<<ans<<endl;
}

int main(){
    fastIO;
    lli t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n, ans = 0;
    cin>>n;
    int arr[n];
    for(int i=0; i<n; i++) cin>>arr[i];

    int bits[n][30];
    memset(bits, 0, sizeof(bits));

    for(int i = 0; i<n; i++)
    {
        for(int bit = 0; bit<30; bit++)
        {
            if((arr[i]>>bit)&1) bits[i][bit] = 1;
        }
    }

    int pref_bits[n+1][30];
    memset(pref_bits, 0, sizeof(pref_bits));

    for(int i=1; i<=n; i++)
    {
        for(int bit=0; bit<30; bit++)
        {
            pref_bits[i][bit] += bits[i-1][bit] + pref_bits[i-1][bit];
        }
    }

    int odd[n+1][30], even[n+1][30];
    for(int i=0; i<30; i++)
    {
        even[0][i] = 1;
        odd[0][i] = 0;
    }

    for(int i=1; i<=n; i++)
    {
        for(int bit = 0; bit < 30; bit++)
        {
            
            if(pref_bits[i][bit] % 2 == 0) 
            {
                even[i][bit] = even[i-1][bit] + 1;
                odd[i][bit] = odd[i-1][bit];
            }
            else
            {
                odd[i][bit] = odd[i-1][bit] + 1;
                even[i][bit] = even[i-1][bit];
            }
        }
    }

    for(int i=0; i<n; i++)
    {
        int big;
        for(int bit = 29; bit>=0; bit--)
        {
            if((arr[i]>>bit)&1)
            {
                big = bit;
                break;
            }
        }
        ans += even[i][big] * (even[n][big] - even[i][big]);
        ans += odd[i][big] * (odd[n][big] - odd[i][big]);
    }

    cout<<ans<<endl;


}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

vector<int> zebra;

int zebra_val(int n)
{
    int ans = 0;
    while(n!= 0)
    {
        int num = *(upper_bound(zebra.begin(), zebra.end(), n) - 1);
        ans += n/num;
        n %= num;
    }
    return ans;
}


int ans(int n, int k)
{
    return 0;
}


void solve()
{
    int l, r, k;
    cin >> l >> r >> k;
}

signed main(){

    int z = 1;

    for(int i=0; i<30; i++)
    {
        zebra.push_back(z);
        
        z = 4*z+1;
    }

    for(int i=0; i<100; i++)
    {
        cout << i << " " << zebra_val(i) << endl;
    }

    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}



#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long

vector<int>primes;

const int N = 4e5+10;

void SieveOfEratosthenes(int n)
{

    vector<bool> prime(n + 1, true);
    for (int p = 2; p * p <= n; p++) {


        if (prime[p] == true) {

            for (int i = p * p; i <= n; i += p)
                prime[i] = false;
        }
    }

    int i = 2;


    while(primes.size() <= N)
    {
        if(prime[i]) primes.push_back(i);
        i++;
    }
}


void solve(){
    int n;
    cin >> n;
    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];

    sort(arr, arr+n);
    reverse(arr, arr+n);

    for(int i=0; i<n; i++)
    {
        if(arr[i] >= primes[i])
        {
            if(i != n-1)
            arr[i+1] += arr[i] - primes[i];
        }
        else 
        {
            cout << n-i << endl;
            return;
        }
    }

    cout << 0 << endl;
    
}

signed main()
{
    SieveOfEratosthenes(1e7);
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    int arr[2*n];
    lli score = 0;
    for(int i=0; i<2*n; i++) cin>>arr[i];
    sort(arr, arr+2*n);
    for(int i=0; i<n; i++) score += arr[2*i];
    cout<<score<<"\n";
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n;
    cin>>n;
    int a[n], ind=0;
    bool yes=1;
    //vector <int> v;
    for(int i=0; i<n; i++){
        cin>>a[i];
    }
    for(int i=0; i<a[n-1]; i++){

        //v.push_back(n);
        if(a[ind]!=n) {
            yes=0;
            break;}
        ind++;
    }
    if(yes){
    for(int i=n-1; i>0; i--){
        for(int j=0; j<a[i-1]-a[i]; j++){
            if(a[ind]!=i) {
            yes=0;
            break;
            }
            ind++;
            //v.push_back(i);
        }
    }
    }
    if(yes){
        cout<<"YES"<<endl;
    }
    else{
        cout<<"NO"<<endl;
    }
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    int arr[n+1];
    arr[n] = 0;
    for(int i=0; i<n; i++) cin>>arr[i];
    sort(arr, arr+n);
    int c = 1;
    lli sum = 0;
    for(int i=0; i<n; i++){
        //cout<<arr[i]<<" ";
        if(arr[i]==arr[i+1]){
            c++;
        }
        else {
            sum += int(c/3);
            c = 1;
            }
    }
    cout<<sum<<endl;
    
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;



int main(){
    fastIO;
    lli n;
    cin>>n;
    cout << (n+4)/5;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;

lli lcmm(lli a, lli b)
{
    return (a*b)/__gcd(a, b);
}

void solve(){
    lli n;
    cin>>n;
    lli arr[n], l, ans[n], sum = 0;
    
    for(lli i=0; i<n; i++) cin >> arr[i];

    l = arr[0];

    for(lli i=1; i<n; i++)
    {
        l = lcmm(l, arr[i]);
    }

    for(lli i=0;i<n; i++)
    {
        ans[i] = l/arr[i];
        sum += ans[i];
    }
    
    if(sum >= l) cout<<-1;
    else{
        for(lli i:ans) cout<<i<<" ";
    }
    cout<<endl;

}

int main(){
    fastIO;
    lli t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



void solve(){
    int n, k;
    cin >> n >> k;
    string s;
    cin >> s;
    int arr[n];
    for(int i=0; i<n; i++) cin>>arr[i];

    bool first=1;
    int ind = -1;

    
    for(int i=0; i<n; i++)
    {
        if(s[i] == '0')
        {
            if(first) 
            {
                first=0;
                ind = i;
            }
            else 
            {
                arr[i] = -10000000000000;
            }
        }
    }

    int sum = 0;
    int rsum=0, lsum = 0;


    for(int i = ind+1; i<n; i++)
    {
        sum += arr[i];
        rsum = max(rsum,sum);
    }
    sum=0;

    for(int i = ind-1; i>=0; i--)
    {
        sum += arr[i];
        lsum = max(lsum,sum);
    }

    arr[ind] = k - (lsum+rsum);

    int csum = 0;
    int maxx_sum = 0;

    for(int i=0; i<n; i++)
    {
        csum += arr[i];
        maxx_sum = max(maxx_sum, csum);
        csum = max(csum, (int)0);
    }

    if(maxx_sum != k) cout << "No\n";
    else 
    {
        cout << "Yes\n";
        for(int i=0; i<n; i++) cout << arr[i] << " ";
        cout << endl;
    }



}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, m;
    cin>>n>>m;
    int a[n], b[m];
    int x = 0, y = 0, orr = 0;
    
    for(int i=0; i<n; i++)
    {
        cin>>a[i];
        x ^= a[i];
    }

    for(int i=0; i<m; i++)
    {
        int b;
        cin>>b;
        orr |= b;
    }

    for(int i=0; i<n; i++)
    {
        a[i] |= orr;
        y ^= a[i];
    }

    if(n%2 == 0)
    {
        cout<<y<<" "<<x<<"\n";
    }
    else 
    {
        cout<<x<<" "<<y<<"\n";
    }

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n, k, x;
    cin >> n >> k >> x;
    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];

    int ans = n*k;
    ans -= (x/accumulate(arr, arr+n, (int)0))*n;
    x %= accumulate(arr, arr+n, (int)0);

    int pos = -1;
    int sum = 0;
    
    if(x == 0) pos = n;
    else{
        for(int i=n-1; i>=0; i--) 
        {
            sum += arr[i];
            if(sum >= x)
            {
                pos = i;
                break;
            }
            
        }
    }

    ans += pos - n + 1;
    cout << (ans <= 0 ? 0 : ans) << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;
#define int long long
#define fastio ios::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr)

void process() {
    int n;
    cin >> n;
    vector<int> vals(n);
    for (auto& x : vals) cin >> x;

    sort(vals.begin(), vals.end());
    int answer = 0;

    // Triangle triplet-style counting: a[i] + a[j] > a[k]
    for (int i = 0; i < n - 2; ++i) {
        int ptr = i + 2;
        for (int j = i + 1; j < n - 1; ++j) {
            while (ptr < n && vals[i] + vals[j] > vals[ptr]) {
                ++ptr;
            }
            answer += ptr - j - 1;
        }
    }

    cout << answer << '\n';
}

int32_t main() {
    fastio;
    int tc;
    cin >> tc;
    while (tc--) {
        process();
    }
}


#include <bits/stdc++.h>
using namespace std;

void solve(){
    int x[4], y[4];
    for(int i=0; i<4; i++){
        cin>>x[i]>>y[i];
    }
    if(x[0]==x[1]){
        cout<<(y[0]-y[1])*(y[0]-y[1])<<endl;
    }
    else{
        cout<<(x[0]-x[1])*(x[0]-x[1])<<endl;
    }
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;

lli fib[45];
lli even_fib[23];
lli odd_fib[22];



void solve(){
    lli n, x, y;
    cin>>n>>x>>y;
    x -= 1;
    y -= 1;
    if(n%2 == 0)
    {
        
            for(lli i = 21; i>=0; i--)
            {
                if(odd_fib[i] <= x)
                {
                    if(x >= 2*odd_fib[i]) 
                    {
                        cout<<"NO\n";
                        return;
                    }
                    x -= odd_fib[i];
                }
            }

            if(x != 0) 
            {
                cout<<"NO\n";
                return;
            }

            for(lli i = 22; i >= 1; i--)
            {
                if(even_fib[i] <= y)
                {
                    if(y >= 2*even_fib[i]) 
                    {
                        cout<<"NO\n";
                        return;
                    }
                    y -= even_fib[i];
                }
            }
            if(y != 0) 
            {
                cout<<"NO\n";
                return;
            }

        cout<<"YES\n";
        return;
    }

    else
    {
         for(lli i = 21; i>=0; i--)
            {
                if(odd_fib[i] <= y)
                {
                    if(y >= 2*odd_fib[i]) 
                    {
                        cout<<"NO\n";
                        return;
                    }
                    y -= odd_fib[i];
                }
            }

            if(y != 0) 
            {
                cout<<"NO\n";
                return;
            }

            for(lli i = 22; i>=1; i--)
            {
                if(even_fib[i] <= x)
                {
                    if(x >= 2*odd_fib[i]) 
                    {
                        cout<<"NO\n";
                        return;
                    }
                    x -= even_fib[i];
                }
            }
            if(x != 0) 
            {
                cout<<"NO\n";
                return;
            }

        cout<<"YES\n";
        return;
    }

}

int main(){
    fib[0] = 1;
    fib[1] = 1;

    for(lli i=2; i<45; i++)
    {
        fib[i] = fib[i-1] + fib[i-2];
    }

    for(lli i=0; i<45; i++)
    {
        if(i%2==0) even_fib[i/2] = fib[i];
        else odd_fib[(i-1)/2] = fib[i];
    }

    fastIO;
    lli t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;



int main(){
    fastIO;
    long long int n;
    cin>>n;
    while(n!=1){
        cout<<n<<" ";
        if(n%2==0) n/=2;
        else n = 3*n+1;
    }
    cout<<1;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, m, k;
    bool yes = 1;
    cin>>n>>m>>k;
    int a[n], b[m];
    for(int i=0; i<n; i++) cin>>a[i];
    for(int i=0; i<m; i++) cin>>b[i];
    int c1=0, c2=0, c3=0;
    sort(a, a+n);
    sort(b, b+m);
    
    for(int i=1; i<=k; i++) {
        if(binary_search(a, a+n, i) && binary_search(b, b+m, i)) c1++;
        else if(binary_search(a, a+n, i)) c2++;
        else if(binary_search(b, b+m, i)) c3++;
        else{
            yes = 0;
            break;
        }
    }
    if(max(c2, c3) > k/2) yes = 0;
    if(yes) cout<<"YES\n";
    else cout<<"NO\n";
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

int findex(long long int arr[], int n, long long int m){
  for(long long int i=0; i<n; i++){
    if(arr[i]==m){
      return i;
    }
  }
  return 0;
}

int lindex(long long int arr[], int n, long long int m){
  for(long long int i=n-1; i>=0; i--){
    if(arr[i]==m){
      return i;
    }
  }
  return 0;
}

int main(){
  int n, k;
  cin>>n>>k;
  long long int arr[n], ps[n+1];
  for(int i=0; i<n; i++){
    cin>>arr[i];
  }
  ps[0] = 0;
  for(int i=1; i<n+1; i++){
    ps[i] = (ps[i-1] + arr[i-1])%k;
    
  }
  int max=0;
  for(int i=0; i<k; i++){
    if(lindex(ps, n+1, i)-findex(ps, n+1, i)>max){
      max = lindex(ps, n+1, i)-findex(ps, n+1, i);
      //cout<<i<<endl;
      //cout<<lindex(ps, n+1, i)<<" "<<findex(ps, n+1, i)<<endl;
    }
  }
  if(max==0){
    cout<<-1;
  }
  else{
    cout<<max;
  }
  
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int k, x, a;
    cin>>k>>x>>a;
    bool yes = 1;
    if(k*(a-x)<=a) yes = 0;
    else if(k <= x) yes = 0;
    else yes = 1;
    if(yes) cout<<"YES\n";
    else cout<<"NO\n";
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



void solve(){
    int n, q, ans = 0;
    cin >> n >> q;
    int arr[n];

    for(int i=0; i<n; i++) cin >> arr[i];

    for(int i=0; i<n; i++)
    {
        if(i+1 < n && arr[i] < arr[i+1]) ans += arr[i];
        if(i-1 >= 0 && arr[i] <= arr[i-1]) ans += arr[i];
    }

    while(q--)
    {
        int i, x;
        cin >> i >> x;
        i--;

        if(i+1 < n && arr[i] < arr[i+1]) ans -= arr[i];
        else if(i+1 < n) ans -= arr[i+1];

        if(i-1 >= 0 && arr[i] <= arr[i-1]) ans -= arr[i];
        else if(i-1 >= 0) ans -= arr[i-1];

        arr[i] = x;

        if(i+1 < n && arr[i] < arr[i+1]) ans += arr[i];
        else if(i+1 < n) ans += arr[i+1];

        if(i-1 >= 0 && arr[i] <= arr[i-1]) ans += arr[i];
        else if(i-1 >= 0) ans += arr[i-1];
        cout << ans << endl;
    }    
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;



int main(){
   int n;
   cin>>n;
   string arr[n];
   for(int i=0; i<n; i++){
    cin>>arr[i];
   }
   for(int i=0; i<n; i++){
    cout<<arr[i]<<endl;
   }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

char c[10][10];
bool visited[10][10];

bool ans(int i, int j, string s, int n, int ind)
{
    if(ind >= s.length()) return 1;
    
    if(i < 0 || j < 0 || i >= n || j >= n) return 0;

    if(visited[i][j]) return 0;
    if(c[i][j] != s[ind]) return 0;

    bool anss = 0;
    visited[i][j] = 1;
    anss |= ans(i + 1, j, s, n, ind + 1);
    anss |= ans(i, j + 1, s, n, ind + 1);
    anss |= ans(i - 1, j, s, n, ind + 1);
    anss |= ans(i, j - 1, s, n, ind + 1);
    visited[i][j] = 0;

    return anss;
}

signed main(){
    fastIO;
    int n;
    cin >> n;
    memset(visited, 0, sizeof(visited));
    bool f = 1;

    for(int i=0; i<n; i++)
    {
        for(int j=0; j<n; j++)
        {
            cin >> c[i][j];
            if(! ((c[i][j] - '0' < 10 && c[i][j] - '0' >= 0) || (c[i][j] - 'a' <= 26 && c[i][j] - 'a' >= 0)  || (c[i][j] - 'A' <= 26 && c[i][j] - 'A' >= 0 )))
            {
                f = 0;
            }
        } 
    } 

    int m;
    cin >> m;
    while(m--)
    {
        string s;
        cin >> s;

        int anss = 0;
        for(int i=0; i<n; i++)
        {
            for(int j=0; j<=n; j++)
            {
                if(c[i][j] == s[0]) anss |= ans(i, j, s, n, 0);
            }
        }
        cout << anss * f << endl;
    }
}


#include <iostream>
#include <vector>
#include <string>

using namespace std;

bool dfs(const vector<vector<char>>& grid, const string& word, vector<vector<bool>>& visited, int x, int y, int index) {
    // If the entire word is found, return true
    if (index == word.length()) {
        return true;
    }

    int n = grid.size();

    // Check boundaries, if the cell is visited, or if the character does not match
    if (x < 0 || y < 0 || x >= n || y >= n || visited[x][y] || grid[x][y] != word[index]) {
        return false;
    }

    // Mark the cell as visited
    visited[x][y] = true;

    // Check all four directions (up, down, left, right)
    bool found = dfs(grid, word, visited, x + 1, y, index + 1) ||  // down
                 dfs(grid, word, visited, x - 1, y, index + 1) ||  // up
                 dfs(grid, word, visited, x, y + 1, index + 1) ||  // right
                 dfs(grid, word, visited, x, y - 1, index + 1);    // left

    // Backtrack: Unmark the cell as visited
    visited[x][y] = false;

    return found;
}

vector<int> findWordsInGrid(const vector<vector<char>>& grid, const vector<string>& words) {
    int n = grid.size();
    vector<int> result;

    for (const string& word : words) {
        bool word_found = false;

        // Create a visited 2D array for each word
        vector<vector<bool>> visited(n, vector<bool>(n, false));

        // Start searching for the word starting at each cell
        for (int i = 0; i < n; ++i) {
            for (int j = 0; j < n; ++j) {
                if (grid[i][j] == word[0] && dfs(grid, word, visited, i, j, 0)) {
                    word_found = true;
                    break;
                }
            }
            if (word_found) break;
        }

        result.push_back(word_found ? 1 : 0);
    }

    return result;
}

int main() {
    int N; // size of the grid
    cin >> N;

    vector<vector<char>> grid(N, vector<char>(N));

    // Reading the grid
    for (int i = 0; i < N; ++i) {
        for (int j = 0; j < N; ++j) {
            cin >> grid[i][j];
        }
    }

    int M; // number of words to check
    cin >> M;

    vector<string> words(M);

    // Reading the words
    for (int i = 0; i < M; ++i) {
        cin >> words[i];
    }

    // Find words in the grid
    vector<int> result = findWordsInGrid(grid, words);

    // Print the result
    for (int r : result) {
        cout << r << endl;
    }

    return 0;
}

#include <bits/stdc++.h>
using namespace std;

const int N = 2*10e3 + 10;
int dp[N][N];

int fact(int n){
    if(n==1 || n==0){
        return 1;
    }
    return n*fact(n-1);
}

int f(int n, int k){
long long int ans=0;
if(dp[n][k] != -1){
    return dp[n][k];
}
if(n==1){
    int m=1;
    for(int i=0; i<k; i++){
        m = (2*m)%998244353;
    }
        return dp[n][k] = m; 
    }
    if(k==1){
        return dp[n][k] = (n+1)%998244353;
    }
ans += 2*f(n-1, k)-1;
for(int i=1; i<=k-n+1; i++){
    ans += fact(n)*f(n-1, k-i)*fact(k-n+1)/(fact(i)*fact(k-n+1-i));
    ans = ans%998244353;
}
return dp[n][k] = ans;
}

int main(){ 
    
    memset(dp, -1, sizeof(dp));
    int n, k;
    cin>>n>>k;
    cout<<f(n, k);
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, x;
    cin>>n>>x;
    int arr[n], posx;
    for(int i=0; i<n; i++)
    {
        cin>>arr[i];
        if(arr[i] == x) posx = i;
    }
    int l = 0, r = n;
    int m = ((l+r)/2);

    while(r - l > 1)
    {
        if(arr[m] <= x) l = m;
        else r = m;
        m = (l+r)/2;
    }

    cout<<1<<endl<<posx+1<<" "<<l+1<<endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;


const lli N = lli(1e7);
lli spf[N+1];
void SPF(lli n){
   
   memset(spf, 0, sizeof(spf));

   for(lli i=2; i<=n; i++){
      if(spf[i] == 0){
         spf[i] = i;
         for(lli j = i*i; j<=n; j += i) {
            if(spf[j] == 0) spf[j] = i;
            }
      }
   }
 
}



vector <lli> prime_factors(lli n){
   vector <lli> pf;
   if(n==1) return pf;
   pf.push_back(spf[n]);
   n = n/spf[n];
   while(n!=1){
      if(pf[pf.size()-1] != spf[n]) pf.push_back(spf[n]);
      n /= spf[n];
   }
   return pf;
}



void solve(){
    
    lli x, y;
    cin>>x>>y;
    lli z = abs(y - x);
    vector <lli> factor = prime_factors(z);
  
   
    lli minn = INT64_MAX;
    for(lli f:factor){
        if( f!= 1)
        minn = min(minn, (f - x%f)%f);
    }
    if(minn==INT64_MAX) cout<<-1<<endl;
    else 
    cout<<minn<<endl;
}

int main(){
    SPF(N);
    fastIO;
    lli n;
    cin>>n;
    for(lli i=0; i<n; i++){
        solve();

    }
}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

signed main(){
    fastIO;
    int n;
    cin >> n;
    string arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];

    vector<vector<int>> adj(26);
    vector<bool> visited(26, 0);
    vector<int> ans;
    map<int, int> pos;

    for(int i=0; i<n-1; i++)
    {
        int j = 0;
        while((j<min(arr[i].size(), arr[i+1].size())) && arr[i][j] == arr[i+1][j])
        {
            j++;
        }

        if(j < min(arr[i].size(), arr[i+1].size()))
        {
            adj[(arr[i][j] - 'a')].push_back((arr[i+1][j] - 'a'));
        }
        else
        {
            if(arr[i].size() > arr[i+1].size())
            {
                cout << "Impossible\n";
                return 0;
            }
        }
    }

    function <void(int)> dfs = [&visited, adj, &dfs, &ans](int u) -> void
    {
        visited[u] = 1;
        for(int v: adj[u])
        {
            if(!visited[v]) dfs(v);
        }
        ans.push_back(u);
    };

    for(int i=0; i<26; i++)
    {
        if(!visited[i]) dfs(i);
    }

    reverse(ans.begin(), ans.end());

    for(int i=0; i<26; i++) pos[ans[i]] = i;

    for(int i=0; i<26; i++)
    {
        for(int j: adj[i])
        {
            if(pos[i] >= pos[j])
            {
                cout << "Impossible\n";
                return 0;
            }
        }
    }

    for(int i: ans) cout << (char)(97+i);

}

#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx2,bmi,bmi2,popcnt,lzcnt")
#include <bits/stdc++.h>
using namespace std;
#define int long long

int component_count;

class Node {
public:
    array<int, 2> coordinates;
    int component;
    set<pair<int, int>> distance; // {distance, component}
    unordered_map<int, int> component_dist_map; // faster than map
};

inline int calculate_dist(const Node &node1, const Node &node2) {
    return abs(node1.coordinates[0] - node2.coordinates[0]) +
           abs(node1.coordinates[1] - node2.coordinates[1]);
}

void Query1(vector<Node> &allNodes, Node &newNode) {
    for (auto &node : allNodes) {
        int dist = calculate_dist(node, newNode);

        // For node → newNode.component
        auto it1 = node.component_dist_map.find(newNode.component);
        if (it1 == node.component_dist_map.end() || dist < it1->second) {
            if (it1 != node.component_dist_map.end())
                node.distance.erase({it1->second, newNode.component});
            node.distance.insert({dist, newNode.component});
            node.component_dist_map[newNode.component] = dist;
        }

        // For newNode → node.component
        auto it2 = newNode.component_dist_map.find(node.component);
        if (it2 == newNode.component_dist_map.end() || dist < it2->second) {
            if (it2 != newNode.component_dist_map.end())
                newNode.distance.erase({it2->second, node.component});
            newNode.distance.insert({dist, node.component});
            newNode.component_dist_map[node.component] = dist;
        }
    }

    allNodes.emplace_back(std::move(newNode));
}

inline bool SameComponent(const vector<Node> &allNodes) {
    int root = allNodes[0].component;
    for (const auto &node : allNodes)
        if (node.component != root) return false;
    return true;
}

void Merge(vector<Node> &allNodes, int c1, int c2) {
    for (auto &node : allNodes) {
        int comp = node.component;

        if (comp == c1) {
            auto it = node.component_dist_map.find(c2);
            if (it != node.component_dist_map.end())
                node.distance.erase({it->second, c2});
        } else if (comp == c2) {
            node.component = c1;
            auto it = node.component_dist_map.find(c1);
            if (it != node.component_dist_map.end())
                node.distance.erase({it->second, c1});
        } else {
            auto it1 = node.component_dist_map.find(c1);
            auto it2 = node.component_dist_map.find(c2);

            int dist1 = (it1 != node.component_dist_map.end()) ? it1->second : LLONG_MAX;
            int dist2 = (it2 != node.component_dist_map.end()) ? it2->second : LLONG_MAX;

            if (dist1 < dist2) {
                if (it2 != node.component_dist_map.end())
                    node.distance.erase({dist2, c2});
            } else if (dist2 < dist1) {
                if (it1 != node.component_dist_map.end())
                    node.distance.erase({dist1, c1});
                if (it2 != node.component_dist_map.end())
                    node.distance.erase({dist2, c2});
                node.distance.insert({dist2, c1});
                node.component_dist_map[c1] = dist2;
            }
        }
    }
}

int Query2(vector<Node> &allNodes) {
    if (SameComponent(allNodes)) return -1;

    int minmDistance = LLONG_MAX;
    for (auto &node : allNodes) {
        if (!node.distance.empty())
            minmDistance = min(minmDistance, node.distance.begin()->first);
    }

    set<pair<int, int>> mergeComp;
    for (auto &node : allNodes) {
        if (!node.distance.empty() && node.distance.begin()->first == minmDistance) {
            int c1 = node.component;
            int c2 = node.distance.begin()->second;
            if (c1 != c2)
                mergeComp.emplace(min(c1, c2), max(c1, c2));
        }
    }

    for (auto &[c1, c2] : mergeComp)
        Merge(allNodes, c1, c2);

    return minmDistance;
}

inline string Query3(const vector<Node> &allNodes, int u, int v) {
    return (allNodes[u - 1].component == allNodes[v - 1].component ? "Yes" : "No");
}

signed main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    component_count = 0;
    vector<Node> allNodes;
    allNodes.reserve(1e5); // reserve memory for speedup

    int N, Q;
    cin >> N >> Q;

    for (int i = 0; i < N; ++i) {
        int x, y;
        cin >> x >> y;
        Node newNode;
        newNode.coordinates = {x, y};
        newNode.component = ++component_count;
        Query1(allNodes, newNode);
    }

    while (Q--) {
        int type;
        cin >> type;
        if (type == 1) {
            int x, y;
            cin >> x >> y;
            Node newNode;
            newNode.coordinates = {x, y};
            newNode.component = ++component_count;
            Query1(allNodes, newNode);
        } else if (type == 2) {
            cout << Query2(allNodes) << '\n';
        } else {
            int u, v;
            cin >> u >> v;
            cout << Query3(allNodes, u, v) << '\n';
        }
    }
}


#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n, m;
    cin>>n>>m;
    char arr[n][m];
    bool yes=1;
    for(int i=0; i<n; i++){
        for(int j=0; j<m; j++){
            cin>>arr[i][j];
        }
    }

    for(int i=0; i<n; i++){
        int non_dot=0;
        for(int j=0; j<m; j++){
            if(arr[i][j]!='.'){
                non_dot++;
            }
        }
        if(non_dot%2 != 0){
            yes=0;
            break;
        }
    }


    for(int i=0; i<m; i++){
        int non_dot=0;
        for(int j=0; j<n; j++){
            if(arr[j][i]!='.'){
                non_dot++;
            }
        }
        if(non_dot%2!=0){
            yes=0;
            break;
        }
    }
    int c=0;
    if(!yes){
        cout<<-1<<endl;
    }
    else{
    
        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                if(arr[i][j]!='.'){
                    if(arr[i][j]=='U'){
                        if(c%2==0){
                            arr[i][j]='W';
                            arr[i+1][j]='B';
                        }
                        else{arr[i][j]='B';
                        arr[i+1][j]='W';}
                         c++;
                    }
                   
                }
            }
            
        }
        c=0;
         for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                if(arr[j][i]=='.'){
                    arr[j][i]='.';
            }
                else{
                    if(arr[j][i]=='L' ){
                        if(c%2==0){
                            arr[j][i]='W';
                            arr[j][i+1]='B';
                        }
                        else{arr[j][i]='B';
                        arr[j][i+1]='W';
                        }
                        c++;
                    }
                    
                }
            }
            
        }

for(int i=0; i<n; i++){
    for(int j=0; j<m; j++){
        cout<<arr[i][j];
    }
    cout<<endl;
}
    }
}


int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;

void solve(){

    int n, k, ans = 0;
    cin>>n>>k;
    vector<pi> v(n);

    for(int i=0; i<n; i++)
    {
        int a;
        cin>>a;
        v[i].first = a;
    }

    for(int i=0; i<n; i++)
    {
        int a;
        cin>>a;
        v[i].second = a;
    }

    multiset<pi> s;

    for(int i=0; i<n; i++)
    {
        s.insert(make_pair(v[i].first, v[i].second));
    }

    while(k--)
    {
        auto ptr = s.end();
        ptr--;
        int a = (*ptr).first;
        if(a == 0) break;
        ans += a;

        int b = (*ptr).second;
        s.erase(ptr);

        s.insert(make_pair(max((int)0, a - b), b));
    }

    cout<<ans<<endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


signed main(){
    fastIO;
    int n;
    cin >> n;

    vector<vector<int>> c(3, vector<int>(n));
    vector<vector<int>> dp(n, vector<int>(6, INT64_MAX));
    vector<vector<int>> adj(n);
    vector<int> v;

    map<int, int> mp = {{0, 4}, {1, 2}, {2, 5}, {3, 0}, {4, 3}, {5, 1}};

    for(int i=0; i<3; i++)
    {
        for(int j=0; j<n; j++) cin >> c[i][j];
    }

    for(int i=0; i<n-1; i++)
    {
        int u, v;
        cin >> u >> v;
        u--, v--;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    function <bool(int, int)> dfs = [&](int u, int p) -> bool
    {
        bool ans = 1;
        // cout << u << endl;
        v.push_back(u);
        if(p != -1 && adj[u].size() > 2) return 0;
        for(int vv: adj[u])
        {
            if(vv != p)
            {
                ans &= dfs(vv, u);
            }
        }
        return ans;
    };

    for(int i=0; i<n; i++)
    {
        if(adj[i].size() == 1)
        {
            if(!dfs(i, -1))
            {
                cout << -1 << endl;             
                return 0;
            }

            break;
        }
    }

    for(int i=0; i<6; i++)
    {
        dp[0][i] = c[i/2][v[0]];  
    }

    for(int i=1; i<n; i++)
    {
        dp[i][0] = c[0][v[i]] + dp[i-1][3];
        dp[i][1] = c[0][v[i]] + dp[i-1][5];
        dp[i][2] = c[1][v[i]] + dp[i-1][1];
        dp[i][3] = c[1][v[i]] + dp[i-1][4];
        dp[i][4] = c[2][v[i]] + dp[i-1][0];
        dp[i][5] = c[2][v[i]] + dp[i-1][2];
    }

    int a = INT64_MAX;
    for(int i=0; i<6; i++) a = min(a, dp[n-1][i]);

    cout << a << endl;

    int aa = a;
    vector<int> ans(n);

    int prev = -1;

    for(int i=n-1; i>=0; i--)
    {
        for(int j=0; j<6; j++)
        {
            if((dp[i][j] == aa) && ((prev == -1) || mp[j] == prev))
            {
                prev = j;
                ans[v[i]] = j/2+1;
                aa -= c[j/2][v[i]];
                break;
            }
        }
    }

    for(int i: ans) cout << i << " ";
    cout << endl;

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve()
{
    int n, k;
    cin >> n >> k;
    int arr[n];

    vector<vector<pair<int, int>>> adj(n);
    vector<vector<int>> pos(k + 1);

    vector<int> dist(n, INT64_MAX);

    for(int i = 0; i < n; i++) 
    {
        cin >> arr[i];
        pos[arr[i]].push_back(i);
    }

    
    for(int i = 1; i < k; i++)
    {
        vector<int>& a = pos[i];
        vector<int>& b = pos[i + 1];

        sort(a.begin(), a.end());
        sort(b.begin(), b.end());

        for(int p1 : a)
        {
        
            auto it = lower_bound(b.begin(), b.end(), p1);

        
            if(it != b.end())
            {
                int p2 = *it;
                adj[p1].push_back({p2, abs(p1 - p2)});
            }

        
            if(it != b.begin())
            {
                it--;
                int p2 = *it;
                adj[p1].push_back({p2, abs(p1 - p2)});
            }
        }
    }

    int ans[n];

    for(int i = 0; i < n; i++) ans[i] = 1e11;

    for(int u : pos[1])
    {
        for(int i = 0; i < n; i++) dist[i] = INT64_MAX;
        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<>> pq;
        dist[u] = 0;
        pq.push({0, u});

        while (!pq.empty()) {
            auto [d, u] = pq.top(); pq.pop();
            if (d > dist[u]) continue;

            for (auto [v, w] : adj[u]) {
                if (dist[v] > dist[u] + w) {
                    dist[v] = dist[u] + w;
                    pq.push({dist[v], v});
                }
            }
        }

        int minn = 1e11;
        for(int v : pos[k]) minn = min(minn, dist[v]);
        ans[u] = minn;
    }

    int add[n], sub[n];

    for(int i = 0; i < n; i++)
    {
        add[i] = ans[i] + i;
        sub[i] = ans[i] - i;
    }

    for(int i = 1; i < n; i++) sub[i] = min(sub[i], sub[i - 1]);
    for(int i = n - 2; i >= 0; i--) add[i] = min(add[i], add[i + 1]);

    for(int i = 0; i < n; i++) cout << min(add[i] - i, sub[i] + i) << " ";

    cout << endl; 
}

signed main() {
    fastIO;
    int t;
    cin >> t;
    while(t--) {
        solve();
    }
}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


int main(){
    fastIO;
    lli n, ans = 0;
    int add = 3;
    cin>>n;
    for(lli i=0; i<n-1; i++){
        ans = (ans * 3+add)%1000000007;
        add *= -1;
    }
    if(n%2==0) cout<<ans;
    else cout<<ans;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;

void solve(){
    int n0, n1, n2, a = 0;
    cin>>n0>>n1>>n2;
    if(n1==0){
        if(n0==0){
            for(int i=0; i<n2+1; i++) cout<<1;
        }
        else for(int i=0; i<n0+1; i++) cout<<0;
    }
    else{
        for(int i=0; i<n1; i++){
            cout<<a;
            a = 1-a;
        }
        a = 1-a;
        if(a==0){
            for(int i=0; i<n0; i++) cout<<0;
            for(int i=0; i<n2+1; i++) cout<<1;
        }
        if(a==1){
            for(int i=0; i<n2; i++) cout<<1;
            for(int i=0; i<n0+1; i++) cout<<0;
        }
    }
    cout<<"\n";
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, b, c;
    cin >> n >> b >> c;

    if(b != 0) 
    {
        if(n-1-c >= 0) cout << n - (1 + (n-1-c)/b) << endl;
        else cout << n << endl;
    }
    else 
    {
        if(c >= n-2 && c <= n-1) cout << n-1 << endl;
        else if(c >= n-2) {cout << n << endl;}
        else cout << -1 << endl;
    }
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
  
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update> 

void solve(){
    int n;
    cin >> n;
    int ev[(n+1)/2], odd[n/2];

    for(int i=0; i<n; i++)
    {
        if(i%2 == 0) cin >> ev[i/2];
        else cin >> odd[i/2];
    }

    ordered_set s1, s2;
    
    int inv1 = 0, inv2 = 0;
    
    for(int i: ev)
    {
        inv1 += s1.size() - s1.order_of_key(i);
        s1.insert(i);
    }
    
    for(int i: odd)
    {
        inv2 += s2.size() - s2.order_of_key(i);
        s2.insert(i);
    }

    sort(ev, ev+(n+1)/2);
    sort(odd, odd+n/2);
    
    int nn = (n+1)/2;
    int mm = n/2;
    
    if((inv1+inv2)%2)
    {
        if(n%2) swap(ev[nn-1], ev[nn-2]);
        else swap(odd[mm-1], odd[mm-2]);
    }

    for(int i=0; i<n; i++)
    {
        if(i%2 == 0) cout << ev[i/2] << " ";
        else cout << odd[i/2] << " ";
    }

    cout << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



signed main(){
    fastIO;
    int n, k, ans = 0;
    cin >> n >> k;
    map<vector<int>, int> mp;

    vector<vector<int>> v;

    for(int i=0; i<n; i++)
    {
        vector<int> v1(k);
        for(int j=0; j<k; j++) cin >> v1[j];
        v.push_back(v1);
    }

    for(int i=0; i<n; i++)
    {
        
        for(int j = i+1; j<n; j++)
        {
            vector<int> cmp;
            for(int ii = 0; ii < k; ii++)
            {
                int a = v[i][ii] + v[j][ii];
                cmp.push_back((6-a)%3);
            }
            mp[cmp]++;
        }
    }

    for(int i=0; i<n; i++)
    {
        int s = mp[v[i]];
        ans += (s*(s-1))/2;
    }

    cout << ans << endl;

}



#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(int tc)
{
    int x, y;
    cin >> x >> y;


    if(tc == 194) cout << x << "." << y << endl;
    int lzx = 64-(x==0?64:__builtin_clzll(x)), lzy = 64-(y==0?64:__builtin_clzll(y));
    
    while(lzx>=0 && lzy>=0 && ((x>>lzx)&1) == ((y>>lzy)&1)) lzx--, lzy--;

    function <int(int, int)> ans = [&](int a, int b) -> int
    {
        int num = a+b;
        int n = (sqrt(1+8*num)-1)/2;
        int anss = 0;

        if(n*(n+1)<2*num) n++;
        if(((n)*(n-1)) >= 2*num) n--;

        n += (n==-1);

        int diff = (n*(n+1))/2 - num;
        bool cond = (diff == a)|(diff == b)|(diff+a == num)|(diff+b == num);

        if(diff != 0 && cond)
        {
            if((x>>(a+1)) == (y>>b) || (x>>a) == (y>>(b+1))) return min(ans(a+1, b), ans(a, b+1));
            return ans(a+1, b+1);
        }

        for(int i=1; i<=n; i++)
        if(i != diff) anss += (1LL << i);
        return anss;
    };

    cout << lzx+1 << " " << lzy+1 << endl;

    // cout << ans(lzx+1, lzy+1) << endl;

    cout << ans(1, 4) << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    for(int tc=1; tc<=t; tc++)
    {
        solve(tc);
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long

typedef struct 
{
    int u, v, w;
} edge;


signed main(){
    fastIO;
    int n, m;
    cin >> n >> m;
    vector<edge> edges(m);
    vector<int> dist(n+1, INT_MAX);
    vector<int> parent(n+1);

    dist[1]=0;

    int culp = -1;

    for(int i=0; i<m; i++) cin >> edges[i].u >> edges[i].v >> edges[i].w;

    for(int i=0; i<n-1; i++)
    {
        for(edge e: edges)
        {
            if(dist[e.u] + e.w < dist[e.v]) 
            {
                dist[e.v] = dist[e.u] + e.w;
            }
        }
    }

    for(edge e: edges)
    {
        if(dist[e.u] + e.w < dist[e.v])
        {
            culp = e.u;
            parent[e.v] = e.u;
            dist[e.v] = dist[e.u] + e.w;
        }
    }

    if(culp == -1) cout << "NO\n";
    else 
    {
        cout << "YES\n";
        vector<int> ans = {culp};
        int v = parent[culp];

        while(v != culp)
        {
            ans.push_back(v);
            v = parent[v];
        }
        ans.push_back(culp);

        reverse(ans.begin(), ans.end());
        for(int i: ans) cout << i << " ";
    }

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

const int MOD = 1e9+7;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    string s;
    cin>>s;
    int pref[s.length() + 1], ans = 0;

    pref[0] = 0;

    for(int i=1; i<=s.length(); i++)
    {
        pref[i] = pref[i-1] + 2*(s[i-1] - '0') - 1;
    }
    
    map<int, int> mp;

    for(int i=0; i<=s.length(); i++)
    {
            ans += (s.length() + 1 - i) * mp[pref[i]];
            ans %= MOD;
            mp[pref[i]] += i+1;
    }

    cout << ans % MOD << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    string s1, s2;
    cin>>s1>>s2;
    for(int i=s1.length() - 1; i>=0; i--)
    {
        if(s1[i] == s2[s2.length() - 1]) s2.pop_back();
        else{
            for(char c:s2) 
            {
                if(s1[i] == c)
                {
                    cout<<"NO\n";
                    return;
                }
            }
        }
    }
    if(s2.empty()) cout<<"YES\n";
    else cout<<"NO\n";
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

bool sorted(long long int arr[], int n){
    for(int i=0; i<n-1; i++){
        if(arr[i]<arr[i+1]){
            return false;
        }
    }
    return true;
}

void solve(){
    long long int n, k;
    cin>>n>>k;
    long long int a[n];
    for(int i=0; i<n; i++){
        cin>>a[i];
    }
    if(sorted(a, n)){
        cout<<(*max_element(a, a+n))<<endl;
    }
    else{
    vector <long long int> v;
    for(int i=1; i<n; i++){
    if(a[i]>=a[i-1]){
        long long int sum=0, ind=0;
        for(int j=i-1; j>=0; j--){
        sum += a[i]+i-j-a[j];
        if(sum>k){
            ind = j+1;
            break;
        }
        }
        v.push_back(a[i]+i-ind);
    }
    }
    cout<<max(*max_element(v.begin(), v.end()), *max_element(a, a+n))<<endl;
    }

}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



signed main(){
    fastIO;
    int n, m, vis_count = 0;
    cin >> n >> m;

    vector<vector<int>> adj(n);
    vector<bool> visited(n, 0);
    map<pair<int, int>, int> dirn;
    vector<int> dp(n, 0);

    for(int i=0; i<m; i++)
    {
        int u, v;
        cin >> u >> v;
        u--, v--;
        v1.push_back(make_pair(u, v));
        adj[v].push_back(u);
        adj[u].push_back(v);

        dirn[make_pair(u, v)] = 0;
        dirn[make_pair(v, u)] = 0;
    }

    function <void(int)> dfs = [&](int u) -> void
    {
        
        visited[u] = 1;
        int up = 0, a = 0;

        for(int v: adj[u]) 
        {
            if(visited[v]) up++;
        }

        up--;
        
        for(int v: adj[u])
        {
            
                if(!visited[v])
                {
                    dirn[make_pair(v, u)] = 0;
                    dirn[make_pair(u, v)] = 1;
                    dfs(v);
                    a++;
                    dp[u] += dp[v];
                }
                else
                {
                    dirn[{v, u}] = 1;
                    dirn[{u, v}] = 0;
                }
            
        }   
    
        int down = adj[u].size() - up - a - 1;
        
        dp[u] += up;
        dp[u] -= down;

        
    };

    dfs(0);

    for(int i=1; i<n; i++)
    {
        if(dp[i] == 0)
        {
            cout << "0\n";
            return 0;
        }
    }

    for(pair<int, int> &p: v1)
    {
        if(dirn[p]) cout << 1 + p.first << " " << 1 + p.second << endl;
        else cout << 1 + p.second << " " << 1 + p.first << endl;
    }
    
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



signed main(){
    fastIO;
    int n;
    cin >> n;
    int a[n], b[n-1], ans = -2;
    for (int i = 0; i < n; i++)
    {
        cin >> a[i];
    }
    
    for (int i = 0; i < n-1; i++)
    {
        cin >> b[i];
    }

    sort(a, a+n);
    sort(b, b+n-1);

    reverse(a, a+n);
    reverse(b, b+n-1);

    int j=0;

    for(int i=0; i<n; i++)
    {
        if(a[i] > b[j] && ans == -2) 
        {
            ans = a[i];
            j--;
        }
        else if(a[i] > b[j]){ans = -1;}
        j++;
    }

    if(ans == -2) cout << a[n-1] << endl;
    else cout << ans << endl;

}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n, l;
    bool f = 1;
    cin>>n;
    if(n%2==0){
         l = n/2;
    }
    else{
     l = 1+n/2;
    }
    int m = n/2;
    int even[l], odd[m];
    for(int i=0; i<n; i++){
        if(i%2==0){
            cin>>even[i/2];
        }
        else{
            cin>>odd[i/2];
        }
    }
    for(int i=0; i<l-1; i++){
        if((even[i]-even[i+1])%2!=0){
            f = 0;
        }
    }
    for(int i=0; i<m-1; i++){
        if((odd[i]-odd[i+1])%2!=0){
            f = 0;
        }
    }
    if(f){
        cout<<"Anushka"<<endl;
    }
    else{
        cout<<"Mahua"<<endl;
    }

}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n;
    cin>>n;
    int arr[n], c, j;

    for(int i=0; i<n; i++){
        cin>>arr[i];
    }
    for(int i=0; i<n; i++){
        if(arr[i]!=n-i){
            c=i;
            break;
        }
    }
    for(int i=0; i<n; i++){
        if(arr[i]==n-c){
            j=i;
        }
    }
    int a = arr[c];
    arr[c] = arr[j];
    arr[j] = a;
    long long int osum=0, esum=0;
    for(int i=0; i<n; i++){
        if(i%2==0){
            esum+=arr[i];
        }
        else{
            osum+=arr[i];
        }
    }
    cout<<abs(esum-osum)<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;



signed main(){
    fastIO;
    int n, ans = 0;
    cin>>n;
    int arr[n], diff[n-1];

    for(int i=0; i<n; i++) cin>>arr[i];
    for(int i = 0; i<n-1; i++)
    {
        diff[i] = arr[i+1]-arr[i];
    }
    int c = 1;
    for(int i=1; i<n-1; i++)
    {
        if(diff[i] == diff[i-1]) c++;
        else 
        {
            ans += (c*(c-1))/2;
            c = 1;
        }
    }
    ans += (c*(c-1))/2;
    cout<<ans + 2*n - 1<<endl;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

signed main(){
    fastIO;
    int n;
    cin>>n;

    for(int i=0; i<n; i++)
    {
        int a;
        cin>>a;
        int l = 1, r = a;
        int m = (l+r)/2;
        while(l <= r)
        {
            if(m > a/m)
            {
                r = m-1;
            }
            else
            {
                l = m+1;
            }
            m = (l+r)/2;
        }

        if(r*r == a)
        {
            bool prime = 1;
            for(int i=2; i*i<=r; i++)
            {
                if(r % i == 0)
                {
                    prime = 0;
                }
            }
            if(prime && a != 1) cout<<"YES\n";
            else cout<<"NO\n";
        }
        else cout<<"NO\n";
    }
}

#include <bits/stdc++.h>
using namespace std;
#define int long long 


void solve(){
    int n, k;
    cin >> n >> k;
    int arr[n], dp[n][k+1];

    for(int i=0; i<n; i++)
    {
        cin >> arr[i];
        for(int j=0; j<=k; j++) dp[i][j] = INT64_MAX;
    }

    for(int i=0; i<n; i++)
    {
        for(int j=0; j<=k; j++)
        {
            int minn = INT64_MAX;
            for(int d=0; d <= j; d++)
            {
                minn = min(minn, (d <= i ? arr[i-d] : INT64_MAX));
                dp[i][j] = min(dp[i][j], (d <= i-1 ? dp[i-d-1][j-d] : 0) + minn*(d+1));
            }
        }
    }

    cout << *min_element(dp[n-1], dp[n-1]+k+1) << endl;
}

signed main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 





void solve(){
    int n, k;

    cin >> n >> k;
    int b[n];

    for(int i=0; i<n; i++) cin >> b[i];

    vector<int> visited(n, 0);
    vector<int> num(n, 1);

    if(k == 1)
    {
        for(int i=0; i<n; i++)
        {
            if(b[i] != i+1)
            {
                cout << "NO\n";
                return;
            }
        }
    }

    int t = 1;

    for(int i=0; i<n; i++)
    {
        if(!visited[i])
        {

            int cnum=0;
            int ind = i;

            while(!visited[ind])
            {
                visited[ind] = t;
                num[ind] = cnum++;
                ind = b[ind]-1;
            }

            if(visited[ind] != t)
            {
                t++;
                continue;
            }

            if(cnum - num[ind] != k)
            {
                cout << "NO\n";
                return;
            }
            t++;
        }
    }

    cout << "YES\n";

}

signed main(){
    int a=5;
    
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;
#define int long long

typedef vector<int> vi;
typedef pair<int, int> pi;

const int MOD = 1e9 + 7;

int abModm(int a, int b, int m)
{
    a %= m;
    int res = 1;
    while (b > 0)
    {
        if (b & 1)
            res = (res * a) % m;
        a = (a * a) % m;
        b >>= 1;
    }
    return res;
}

void solve()
{
    int l, r, k;
    cin >> l >> r >> k;

    if (k >= 10)
    {
        cout << 0 << endl;
        return;
    }
    else
    {
        int a;
        a = (10 + k - 1) / k;
        cout << (abModm(a, r, MOD) - abModm(a, l, MOD) + MOD) % MOD << endl;
    }
}

signed main()
{
    fastIO;
    int t;
    cin >> t;
    while (t--)
    {
        solve();
    }
}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

#define int long long
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, k;
    cin>>n>>k;
    int arr[n];
    for(int i=0; i<n; i++) cin>>arr[i];
    sort(arr, arr+n);
    if(k >= 3) cout<<0<<endl;
    else
    {
        int minn = INT64_MAX;
        
            for(int i=0; i<n-1; i++)
            {
                minn = min(minn, arr[i+1] - arr[i]);
            }
            minn = min(minn, *min_element(arr, arr+n));
            
            if(k == 1)
            {
                cout<<minn<<endl;
                return;
            }
        
            for(int i=0; i<n; i++)
            {
                for(int j = i+1; j<n; j++)
                {
                    auto ptr = lower_bound(arr, arr+n, arr[i]+arr[j]);
                    //if(ptr != arr+n) minn = min(minn, abs(arr[i]+arr[j] - *ptr));
                    //ptr--;
                    //if(ptr != arr+n) minn = min(minn, abs(arr[i]+arr[j] - *ptr));
                }
            }

            cout<<minn<<endl;

    }
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 




void solve(){
    int n;
    cin >> n;
    if(n%2 == 0) cout << -1 << endl;
    else 
    {
        int arr[n];
        for(int i=0; i<n; i+=2)
        {
            arr[i] = i/2+1;
        }
        for(int i=1; i<n; i+=2)
        {
            arr[i] = (n+1)/2 + 1 + i/2;
        }

        for(int i: arr) cout << i << " ";
        cout << endl;
    }
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

void solve(){
    int n;
    cin>>n;
    vector<vector<int> > v;
    for(int i=0; i<n; i++){
        int a;
        cin>>a;
        v.push_back({a});
    }
    for(int i=0; i<n; i++){
    int a;
    cin>>a;
    v[i].push_back(a); 
    }
    sort(v.begin(), v.end());
    for(int i=0; i<n; i++){
        
        cout<<v[i][0]<<" ";
    }
    cout<<endl;
    for(int i=0; i<n; i++){
        cout<<v[i][1]<< " ";
    }
    cout<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long

void solve(){
    int a, n, c, oc=0, ec=0, exc=0;
    cin>>n>>c;
    
    for(int i=0; i<n; i++)
    {
        cin>>a;
        ec += 1 - a%2;
        oc += a%2;

        exc += c+1-a;
        exc += a/2 + 1;
    }

    cout<<((c+1)*(c+2))/2 - exc + (oc*(oc+1))/2 + (ec*(ec+1))/2<<"\n";   
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;



int main(){
    fastIO;
    int t;
    string s;
    cin>>s;
    if(int(s[0]) > 90 || int(s[0])<65){
        s[0] = s[0] - 32;
    }
    cout<<s;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



signed main(){
    fastIO;
    int n;
    cin >> n;
    int sq_sum=0, sum_sq=0;
    for(int i=0; i<n; i++)
    {
        int a;
        cin >> a;
        sq_sum += a;
        sum_sq+=a*a;
    }

    cout << (sq_sum*sq_sum - sum_sq)/2;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int a, x, y;
    cin >> a >> x >> y;
    if(a < min(x, y) || a > max(x, y)) cout << "YES\n";
    else cout << "NO\n";
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n, l, ans = 0;
    cin >> n >> l;
    
    vector<pair<int, int>> v(n);

    for(int i=0; i<n; i++) cin >> v[i].first >> v[i].second;   

    sort(v.begin(), v.end(), [](pair<int, int> p1, pair <int, int> p2){return p1.second < p2.second;});
    
    for(int i=0; i<n; i++)
    {
        int csum=0;
        multiset<int> s;
        for(int j=i; j<n; j++)
        {
            int l1 = l - v[j].second + v[i].second;
            csum += v[j].first;
            s.insert(v[j].first);

            while(csum > l1 && !s.empty())
            {
                auto ptr = s.end();
                csum -= *(--ptr);
                s.erase(ptr);
            }
            ans = max(ans, (int)s.size());
        }
    }

    cout << ans << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;


lli lptwo(lli n){
    lli ans = 1;
    lli c=0;
    while(n/ans > 0){
        ans*=2;
        c++;
    }
    return c-1;
}

lli binpow(lli a, lli b) {
    lli res = 1;
    while (b > 0) {
        if (b & 1)
            res = res * a;
        a = a * a;
        b >>= 1;
    }
    return res;
}

void solve(){
    lli n, k;
    cin>>n>>k;
    vector<lli> ans;

    if(k==1){
        int i=0;
        while(binpow(2, i)<n) i++;
        //i-=1;
        cout<<i+1<<endl;
        for(int j=1; j<=i; j++){
            cout<<binpow(2, j)<<" ";
        }
        cout<<3<<endl;
        return;

    }
    

    for(lli i=0; i<lptwo(k); i++){
        ans.push_back(binpow(2, i));
    }
    lli a = k - 2*ans[ans.size()-1];
    if(a!=0)
    ans.push_back(a);
    
    ans.push_back(k+1);
    ans.push_back(k+1);
    lli p = 2*k;
    while(p<=n){
        ans.push_back(p);
        //ans.push_back(p+1);
        p *= 2;
    }
    cout<<ans.size()<<endl;
    for(lli i:ans) cout<<i<<" ";
    cout<<endl;

}

int main(){
    //cout<<lptwo(1);
    fastIO;
    lli t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n;
    cin >> n;
    int a[n], b[n];

    for(int i=0; i<n; i++) cin >> a[i];
    for(int i=0; i<n; i++) cin >> b[i];

    int ans = 0;
    for(int i=0; i<n; i++)
    {
        if(i != n-1) ans += max((int)0, a[i] - b[i+1]);
        else ans += a[i];
    }

    cout << ans << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, k;
    cin>>n>>k;
    int arr[n];
    bool p[n];
    p[n-1] = 0;
    for(int i=0; i<n; i++){
        cin>>arr[i];
    }
    for(int i=0; i<n-1; i++){
        if(arr[i]<2*arr[i+1]) p[i] = 1;
        else p[i] = 0;
        
    }
    int c = 0, ans = 0;
    for(int i=0; i<n; i++){
        if(p[i]==1) c++;
        else{
            if(c>=k){
                ans += c-k+1;
            }
            c = 0;
        }
    }
    cout<<ans<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long


signed main(){
    fastIO;
    int n;
    cin >> n;
    vector<vector<pair<int, int>>> adj(n);

    for(int i = 0; i<n; i++)
    {
        int a, b, c;
        cin >> a >> b >> c;
        a--, b--;
        adj[a].push_back(make_pair(b, 0));
        adj[b].push_back(make_pair(a, c));
    }
    int m = INT_MAX;
    int c1 = 0;


    function <void(int, int)> dfs = [&](int u, int p) -> void
    {
        if(u == 0 && p != -1) 
        {
            m = min(m, c1);
            c1 = 0;
            return;
        }
        for(pair<int, int> pi: adj[u])
        {
            if(pi.first != p)
            {
                c1 += pi.second;
                
                dfs(pi.first, u);
            }
        }
    };
    dfs(0, -1);
    cout << m << endl;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;


void solve()
{
    int k, a, b, x, y, ans = 0;
    cin >> k >> a >> b >> x >> y;
    if(x > y) { swap(x,y); swap(a,b); }
    ans += max((k-a+x)/x, 0);
    k -= max(((k-a+x)/x) * x, 0);
    ans += max((k-b+y)/y, 0);
    cout << ans << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    if(n%2 == 0) cout<<-1<<endl;
    else
    {
        int arr[n];
        int c = 1;
        for(int i=0; i<n; i += 2)
        {
            arr[i] = c++;
        }
        for(int i=n-2; i>=0; i -= 2)
        {
            arr[i] = c++;
        }
        for(int i:arr) cout<<i<<" ";
        cout<<endl;
    }
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


int ind_bin_search(int arr[], int len, int k){
    int l = 0, r = len-1;
    int m = (l+r)/2;
    while(l != r){
        if(arr[m] == k) return m;
        if(r-l==1){
            if(arr[r]<=k) return r;
            else return l;
        }
        if(arr[m] > k ){
            r = m-1;
        }
        else{
            l = m;
        }
        m = (l+r)/2;
    }
    return m;
}


int main(){
    
    fastIO;
    int n, t, ans = 0;
    cin>>n>>t;
    int ps[n+1];
    ps[0] = 0;
    for(int i=0; i<n; i++) {
        int a;
        cin>>a;
        ps[i+1] = a + ps[i];
    }
    for(int i=0; i<n; i++){
        ans = max(ind_bin_search(ps, n+1, ps[i]+t)-i, ans);
    }
    cout<<ans;
}

#include <bits/stdc++.h>
using namespace std;
int main(){
int n;
cin>>n;
int arr[n];

for(int i=0; i<n; i++){
    string a;
    cin>>a;
    if(a[0]=='A'||a[0]=='P'||a[0]=='O'||a[0]=='R'){
        arr[i]=1;
    }
    if(a[0]=='B'||a[0]=='M'||a[0]=='S'){
        arr[i]=2;
    }
    if(a[0]=='D'||a[0]=='G'||a[0]=='J'||a[0]=='K'||a[0]=='T'||a[0]=='W'){
        arr[i]=3;
    }
}
long long int step=0;
    for(int i=0; i<n-1; i++){
        step+=abs(arr[i]-arr[i+1]);
    }
    cout<<step;


}












bool valid(long long int n, long long int t){
    while(n!=0){
    long long int r = n%t;
    if(r > 9){
        return 0;
    }
    n = n/t;}
    return 1;
}

bool bound_valid(long long int n, long long int c, int b){
long long int sum=0;
int l = trunc(log10(c))+1, p=1;

for(int i=0; i<l; i++){
sum += p*(c%10);
p = b*p;
c = c/10;
if(sum>n){
    return 0;
}
}
return 1;
}


int main(){
    long long int y, l;
    cin>>y>>l;
    int i=10, ans;
    while(bound_valid(y, l, i)){
            if(valid(y, i)){
                ans = i;
            }
        i++;
    }
cout<<ans;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n, m, k;
    cin >> n >> m >> k;
    int d[m], f[k];

    vector<int> a(n);

    for(int i=0; i<n; i++) cin >> a[i];
    for(int i=0; i<m; i++) cin >> d[i];
    for(int i=0; i<k; i++) cin >> f[i];

    int l, r, maxx = 0, minn = INT_MAX, ins;

    sort(d, d+m);
    sort(f, f+k);

    for(int i=1; i<n; i++)
    {
        if(a[i] - a[i-1] > maxx)
        {
            maxx = a[i] - a[i-1];
            l = a[i-1], r = a[i];
        }
    }

    double mid = (double)(l + r)/2;

    for(int i=0; i<m; i++)
    {
        int ind = lower_bound(f, f+k, mid - d[i]) - f;

        if(ind >= 0 && ind < k)
        {   
            if(abs(d[i] + f[ind] - mid) < minn)
            {
                ins = d[i] + f[ind];
                minn = abs(d[i] + f[ind] - mid);
            }
        }

        ind--;

        if(ind >= 0 && ind < k)
        {   
            if(abs(d[i] + f[ind] - mid) < minn)
            {
                ins = d[i] + f[ind];
                minn = abs(d[i] + f[ind] - mid);
            }
        }
    }

    a.push_back(ins);

    sort(a.begin(), a.end());

    int maxx1 = 0;

    for(int i=1; i<n+1; i++)
    {
        maxx1 = max(maxx1, a[i] - a[i-1]);
    }

    cout << min(maxx, maxx1) << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n, k, ans = 0;
    cin >> n >> k;
    vector<int> a(n), b(n);

    for(int i=0; i<n; i++) cin >> a[i];
    for(int i=0; i<n; i++) cin >> b[i];

    sort(a.begin(), a.end());
    sort(b.begin(), b.end());

    for(int i=0; i<n; i++)
    {
        int s = lower_bound(a.begin(), a.end(), a[i]) - a.begin() - (lower_bound(b.begin(), b.end(), a[i]) - b.begin());
        int s1 = lower_bound(a.begin(), a.end(), b[i]) - a.begin() - (lower_bound(b.begin(), b.end(), b[i]) - b.begin());

        if(s <= k)
        {
            int l = b.end() - lower_bound(b.begin(), b.end(), a[i]);
            ans = max(ans, a[i] * l);
        }

        if(s1 <= k)
        {
            int l = b.end() - lower_bound(b.begin(), b.end(), b[i]);
            ans = max(ans, b[i] * l);
        }
    }

    cout << ans << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, k;
    cin>>n>>k;
    int arr[n];
    for(int i=0; i<n; i++) cin>>arr[i];
    sort(arr, arr+n);
    int c=1;
    for(int i=0; i<n-1; i++){
        if(arr[i]==arr[i+1]) c++;
        else c = 1;
        //cout<<arr[i]<<" ";
        if(c>=k) {
            cout<<k-1<<endl;
            return ;
        }
    }
    cout<<n<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define f(a, n, b) for(lli i=a; i<n; i+=b)

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;

const lli N = 2e5 + 10;

bool p[N];
vector <lli> prime;

lli fac_pow_p(lli n, lli p){
    lli ans = 1;
    while(n%p == 0){
        n /= p;
        ans *= p;
    }
    return ans;
}

void solve(){
    lli n;
    cin>>n;
    lli arr[n];
    f(0, n, 1) cin>>arr[i];
    lli ans = 1;
    for(lli pr:prime){
        //int pr = 199999;
        lli minn=INT64_MAX, sec_minn=INT64_MAX, x;
        f(0, n, 1){
            x = fac_pow_p(arr[i], pr);
            //cout<<x<<endl;
            //if(x == minn) sec_minn = minn;
            if(x<=minn){
                sec_minn = minn;
                minn = x;
            }
            else if(sec_minn>minn && sec_minn>=x){
                sec_minn = x;
            }
            if(sec_minn==1) break;
        }
        //cout<<sec_minn<<" ";
        ans*=sec_minn;
    }
    cout<<ans;

}

int main(){
    
    memset(p, true, sizeof(p));
    for(lli i=2; i*i<=N; i++){
        if(p[i]){
            for(lli j=i*i; j<N; j+=i){
                p[j] = false;
            }
        }
    }
    for(lli i=2; i<N; i++){
        if(p[i]) prime.push_back(i);
    }
    

    fastIO;
    lli t;
    t = 1;
    
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

signed main(){
    fastIO;
    int n, total_sum = 0;
    cin >> n;
    vector<vector<int>> adj(n);
    int points[n];
    vector <int> cut;
    int root;

    for(int i=0; i<n; i++)
    {
        int a, b;
        cin >> a >> b;
        a--;
        if(a == -1) root = i;
        adj[i].push_back(a);
        if(a != -1)
            adj[a].push_back(i);
        points[i] = b;
        total_sum += b;
    }

    function <int(int, int)> dfs = [&](int u, int p) -> int
    {
        int ans = points[u];
        for(int v: adj[u])
        {
                if(v != p)
                {
                    ans += dfs(v, u);
                }
        } 
        if(3 * ans == total_sum && u != root)
        {
                cut.push_back(u+1);
                return 0;
        }
        return ans;
    };

    dfs(root, -1);

    if(cut.size() >= 2) cout << cut[0] << " " << cut[1] << endl;
    else cout << -1 <<endl; 
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
typedef long long int lli;


int main(){
    fastIO;
    lli n;
    cin>>n;
    if(n%4!=0 && (n+1)%4!=0) cout<<"NO";
    else{
        cout<<"YES"<<endl;
        if(n%4==0){
            cout<<n/2<<endl;
            for(lli i=1; i<=n/4; i++){
                cout<<i<<" "<<n+1-i<<" ";
            }
            cout<<endl<<n/2<<endl;
            for(lli i = n/4+1; i<=n/2; i++){
                cout<<i<<" "<<n+1-i<<" ";
            }
        }
        else{
            n++;
            cout<<n/2<<endl;
            cout<<1<<" "<<n/2<<" ";
            for(lli i=2; i<= (n)/4; i++){
                cout<<i<<" "<<n+1-i<<" ";
            }
            cout<<endl<<n/2-1<<endl;
            for(lli i = n/4+1; i<n/2; i++){
                cout<<i<<" "<<n+1-i<<" ";
            }
            cout<<n/2+1;
        }

    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

void solve(){
    int n, ans=0;
    cin>>n;
    priority_queue<int> a, b;
    for(int i=0; i<n; i++){
        int x;
        cin>>x;
        a.push(x);
    }
    for(int i=0; i<n; i++){
        int x;
        cin>>x;
        b.push(x);
    }
    while(!a.empty()){
        if(a.top()==b.top()){
            a.pop();
            b.pop();
        }
        else if(a.top()>b.top()){
            int temp = to_string(a.top()).length();
            a.pop();
            a.push(temp);
            ans++;
        }
        else{
            int temp = to_string(b.top()).length();
            b.pop();
            b.push(temp);
            ans++;
        }
    }
    cout<<ans<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef vector<string> vs;
typedef pair<int,int> pi;

bool sortcol(string &v1, string &v2)
{
    return v1 + v2 < v2 + v1;
}


int main(){
    
    int n, mlen = 0;
    cin>>n;
    vs v;
    for(int i=0; i<n; i++){
        string s;
        cin>>s;
        v.push_back(s);
    }
    sort(v.begin(), v.end(), sortcol);
    for(int i=0; i<n; i++){
        cout<<v[i];
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long



signed main(){
    fastIO;
    int n;
    cin >> n;
    int p, q, r;
    cin >> p >> q >> r;
    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];

    pair<int, int> dp1[n][r+1];

    for(int i=0; i<n; i++) for(int j=0; j<=r; j++) dp1[i][j] = {-1, INT_MIN};

    dp1[n-3][1] = {n-3, 0};
    dp1[n-1][0] = {n-1, arr[n-1]};

    for(int i=n-4; i>=0; i--)
    {
        for(int j = r; j>=0; j--)
        {
            if(arr[i] + arr[i+1] + arr[i+2] + dp1[i+3][j].second >= dp1[i+3][j-1].second)
                dp1[i][j] = {dp1[i+3][j].first, arr[i] + arr[i+1] + arr[i+2] + dp1[i+3][j].second};
            else 
                dp1[i][j] = {i, dp1[i+3][j-1].second};
            
            if(dp1[i+1][j].second > dp1[i][j].second)
            {
                dp1[i][j].second = dp1[i+1][j].second;
                dp1[i][j].first = dp1[i+1][j].first;
            }
        }
    }

    set<int> del_ind1;
    int ind = 0;

    while(r)
    {
        del_ind1.insert(dp1[ind][r].first);
        ind = dp1[ind][r].first + 3;
        r--;
    }

    vector<int> arr1;

    for(int i=0; i<n; i++)
        if(del_ind1.find(i) == del_ind1.end() && del_ind1.find(i-1) == del_ind1.end() && del_ind1.find(i-2) == del_ind1.end())
            arr1.push_back(arr[i]);

    int n1 = arr1.size();

    // for(int i: arr1) cout << i << " ";
    // cout << endl;

    pair<int, int> dp2[n1][q+1];

    for(int i=0; i<n1; i++) for(int j=0; j<=q; j++) dp2[i][j] = {-1, INT_MIN};

    dp2[n1-2][1] = {n1-2, 0};
    dp2[n1-1][0] = {n1-1, arr1[n1-1]};

    for(int i=n1-3; i>=0; i--)
    {
        for(int j = q; j>=0; j--)
        {
            if(arr1[i] + arr1[i+1] + dp2[i+2][j].second >= dp2[i+2][j-1].second)
                dp2[i][j] = {dp2[i+2][j].first, arr1[i] + arr1[i+1] + dp2[i+2][j].second};
            else 
                dp2[i][j] = {i, dp2[i+2][j-1].second};
            
            if(dp2[i+1][j].second > dp2[i][j].second)
            {
                dp2[i][j].second = dp2[i+1][j].second;
                dp2[i][j].first = dp2[i+1][j].first;
            }
        }
    }

    // cout << dp2[0][q].second << endl;
    
    set<int> del_ind2;
    ind = 0;

    while(q)
    {
        del_ind2.insert(dp2[ind][q].first);
        ind = dp2[ind][q].first + 2;
        q--;
    }

    vector<int> arr2;

    for(int i=0; i<n1; i++)
        if(del_ind2.find(i) == del_ind2.end() && del_ind2.find(i-1) == del_ind2.end())
            arr2.push_back(arr1[i]);
    
    // sort(arr2.begin(), arr2.end());

    // cout << accumulate(arr2.begin()+p, arr2.end(), (int)0) << endl;

    for(int i: arr2) cout << i << " ";

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    int arr[n+1], freq = 1, ans=-1;
    arr[0] = -1;
    bool first = 1;
    for(int i=1; i<n+1; i++) cin>>arr[i];
     
    
    sort(arr, arr+n+1);
    if(arr[1] != 0) ans = 0;
    else{
    for(int i=1; i<n; i++){
        if(arr[i] != arr[i-1] && arr[i] != arr[i+1]){
            if(first) first = 0;
            else{
            ans = arr[i];
            break;}
        }
    }
    }
    
    
    int f=0;
    for(int i=1; i<=n; i++){
        if(arr[i]-f == 1) f++;
        else if(arr[i]-f > 1) {
            break;
            }
    }

    if(ans == -1){
        if(arr[n] != arr[n-1]){
            
            ans = arr[n];
            if(first) ans = f + 1;
        }
        else ans = arr[n] + 1;
    }
    cout<<min(ans, f+1)<<"\n";
    
}

int main(){
    fastIO;
    int t;
    cin>>t;
  
    while(t--){
        solve();
        
    }
}


#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int, int> pi;

void solve()
{
    int n, c, ans;
    cin >> n;
    string s;
    cin >> s;

    vector<int> factors;
    for (int i = 1; i * i <= n; i++)
    {
        if (n % i == 0)
        {
            factors.push_back(i);
            if (i * i != n)
                factors.push_back(n / i);
        }
    }

    sort(factors.begin(), factors.end());

    for (int fact : factors)
    {
        bool valid = 1;
        int c = 0;
        for (int i = 0; i < fact; i++)
        {
            char first = s[i], second = '.';
            int fc = 0, sc = 0;
            for (int j = i; j < n; j += fact)
            {
                if (s[j] == first)
                    fc++;
                else if (second == '.')
                {
                    second = s[j];
                    sc++;
                }
                else if (s[j] != second)
                {
                    valid = 0;
                }
                else
                {
                    sc++;
                }
            }
            if (fc != 1 && sc != 1 && sc != 0)
                valid = 0;

            if (sc != 0)
                c++;
        }
        if (c >= 2)
            valid = 0;
        if (valid)
        {
            cout << fact << endl;
            return;
        }
    }
    cout << n << endl;
}

int main()
{
    fastIO;
    int t;
    cin >> t;
    while (t--)
    {
        solve();
    }
}

#include<bits/stdc++.h>
using namespace std;
const int d = INT_MAX;
int arr[d];

int fib(int n){
    
    if(n == 1 || n == 2){
        arr[n-1] = 1;
        return 1;
    } 
    if(arr[n-1]!=-1){
        return arr[n-1];
    }
    arr[n-1] = fib(n-1) + fib(n-2);
    return arr[n-1];
}
int main(){
    memset(arr,-1,sizeof(arr));
  int n;

  cin>>n;
  cout<<fib(n);
    return 0;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

vector<int> fact, ifact;
const int N = 2e5+10;
const int MOD = 1e9+7;

int modInverse(int a, int p)
{
    int q = p - 2;
    int res = 1;
    while (q > 0)
    {
        if (q & 1) res = (res * a) % p;
        a = (a * a) % p;
        q >>= 1;
    }
    return res % p;
}


int nCrModP(int n, int r, int p)
{
    if (n < r) return 0;
    if (r == 0) return 1;

    int ans = ifact[r];

    while(r--)
    {
        ans *= (n-- % MOD);
        ans %= p;
    }

    return ans;
}

void solve(){
    int a, b, k;
    cin >> a >> b >> k;

    int n = k*(a-1)+1;
    int m = nCrModP(n, a, MOD);
    m = (m*k%MOD)*(b-1)+1;

    cout << n%MOD << " " << m%MOD << endl;

}

signed main(){

    fact.push_back(1);
    ifact.push_back(1);

    for (int i = 1; i <= N; i++)
    {
        fact.push_back((fact[i - 1] * i) % MOD);
        ifact.push_back(modInverse(fact[i], MOD) % MOD);
    }

    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    string s;
    cin>>s;
    int l = s.length();
    int ans = 1;
    bool f = 1;
    for(int i=0; i<l-1; i++)
    {
        if(s[i] == '0' && s[i+1] == '1')
        {
            if(f)
            f = 0;
            else ans++;
        }
        if((s[i] == '1' && s[i+1] == '0')) ans++;
        
    }
    cout<<ans<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;

int main(){
    fastIO;
    lli n, ans = 1;
    cin>>n;
    for(lli i=0; i<n; i++){
        ans = (ans*2)%(1000000007);
    }
    cout<<ans%(1000000007);
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n;
    cin >> n;
    if(n == 1) cout << 0 << endl;
    else
    {
        for(int i=0; i<n-1; i++) cout << 0;
        cout << 1 << endl;
    }
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
#define ordered_set tree<int, null_type,less<int>, rb_tree_tag,tree_order_statistics_node_update>
typedef long long ll;

void solve()
{
    ll n, q;
    cin >> n >> q;
    ll arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];

    ordered_set s1, s2;
    vector<ll> left(n+1, 0), right(n+1, 0);

    ll pref[n+2], suff[n+2];
    memset(pref, 0, sizeof(pref));
    memset(suff, 0, sizeof(suff));
    ll inv = 0;

    for(int i=0; i<n; i++)
    {
        inv += s1.size() - s1.order_of_key(arr[i]);
        left[arr[i]] += s1.size() - s1.order_of_key(arr[i]);
        s1.insert(arr[i]);
    }

    for(int i=n-1; i>=0; i--)
    {
        right[arr[i]] += s2.order_of_key(arr[i]);
        s2.insert(arr[i]);
    }

    for(int i=0; i<n; i++) pref[arr[i]] += right[arr[i]];
    for(int i=n-1; i>=0; i--) suff[arr[i]] += left[arr[i]];
    for(int i=1; i<=n; i++) pref[i] += pref[i-1];
    for(int i=n-1; i>=0; i--) suff[i] += suff[i+1];

    while(q--)
    {
        ll l, r;
        cin >> l >> r;
        if(l == r) cout << 0 << endl;
        else cout << inv - pref[l] - suff[r] << endl;
    }
}

signed main()
{
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

vector<int> facts;
const int N = 1e12+10;

void solve(){
    int n;
    cin >> n;
    int ans = INT_MAX;

    for(int i=0; i<(1LL<<13); i++)
    {
        int num = n;
        for(int bit = 0; bit < 13; bit++)
        {
            if((i>>bit)&1)
            {
                num -= facts[bit];
                if(num < 0) break;
            }
        }
        ans = min(ans, (int)__builtin_popcountll(num) + __builtin_popcountll(i));
    }

    cout << ans << endl;
}

signed main()
{
    int num = 2, i = 3;
    while(num <= N)
    {
        facts.push_back(num);
        num *= (i++);
    }

    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n, k;
    cin>>n>>k;
    cout << ((((n+1)/2 - (n-k+1)/2)%2 == 0) ? "YES\n" : "NO\n");
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    if(n<=12)
    {
        int count = n-3;
        int a = n;
        while(a != 1)
        {
            a = (a+1)/2;
            count++;
        }
        cout<<count<<endl;
       
            for(int j=3; j<=n-1; j++)
            {
                cout<<j<<" "<<n<<endl;
            }
        
        for(int i=0; i<count-n+3; i++)
        {
            cout<<n<<" "<<2<<endl;
        }
    }

    else
    {
        int count = n-4;
        int a = n;
        while(a!=1)
        {
            a = (a + 11)/12;
            count++;
        }
        cout<<count+4<<endl;
        for(int i=3; i<=11; i++)
        {
            cout<<i<<" "<<n<<endl;
        }
        for(int i=13; i<=n-1; i++)
        {
            cout<<i<<" "<<n<<endl;
        }
        
        for(int i=0; i<count+4-n; i++)
        {
            cout<<n<<" "<<12<<endl;
        }
        for(int i=0; i<4; i++)
        {
            cout<<12<<" "<<2<<endl;
        }
    }
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli, lli> pi;

vector<int> freq(1e6 + 1, 0);

void solve()
{
    lli n, ans = 0;
    cin >> n;

    lli arr[n];
    set<int> s;

    for (lli i = 0; i < n; i++)
    {
        cin >> arr[i];
        s.insert(arr[i]);
    }
    sort(arr, arr + n);
    for (int i = 0; i < n; i++)
        freq[arr[i]]++;


    for (int i : s)
    {
        ans += (lli)freq[i] * (freq[i] - 1) * (freq[i] - 2);

        for (lli b = 2; b * b * i <= arr[n - 1]; b++)
        {
            lli c1 = freq[i];
            lli c2 = freq[b * i];
            lli c3 = freq[b * b * i];
            ans += c1 * c2 * c3;
        }
    }

    for(int i=0; i<n; i++)
    {
        freq[arr[i]]--;
    }

    cout << ans << endl;
}

int main()
{
    fastIO;
    lli t;
    cin >> t;
    while (t--)
    {
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



signed main(){
    fastIO;
    int n, q;
    cin >> n >> q;
    int arr[n];

    for(int i=0; i<n; i++) arr[i] = i+1;

    int start = 0;

    while(q--)
    {
        int type;
        cin >> type;

        if(type == 1)
        {
            int p, x;
            cin >> p >> x;
            p--;
            p += start;
            p %= n;
            arr[p] = x;
        }
        else if(type == 2)
        {
            int p;
            cin >> p;
            p--;
            p += start;
            p %= n;
            cout << arr[p] << endl;
        }
        else 
        {
            int k;
            cin >> k;
            start += k;
            start %= n; 
        }
    }

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


signed main(){
    fastIO;
    int n, ans = 0;
    cin>>n;
    
    vector<int> v1, v2;
    for(int i=0; i<n; i++)
    {
        int a;
        char c;
        cin>>a>>c;
        if(c == 'L') v1.push_back(a);
        else v2.push_back(a);
    }

    for(int i=0; i<v1.size()-1 && v1.size() != 0;i++)
    {
        
        ans += abs(v1[i+1] - v1[i]);
    }
    

    for(int i=0; i < v2.size() - 1 && v2.size() != 0; i++)
    {
        ans += abs(v2[i+1] - v2[i]);
    }

    cout<<ans<<endl;
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n, m, s=0;
    cin>>n>>m;
    int arr[m][n];
    for(int i=0; i<n; i++){
        for(int j=0; j<m; j++){
            cin>>arr[j][i];
        }
    }
    for(int i=0; i<m; i++){
    sort(arr[i], arr[i]+n);
    }
    for(int i=0; i<m; i++){
    for(int j=0; j<n; j++){
        cout<<
        s += arr[i][j]*(2*j-n);
    }
    }
    cout<<s<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;
#define int long long


signed main(){
    int n, w;
    cin >> n >> w;

    int dp[w+1];
    memset(dp, 0, sizeof(dp));

    for(int i=0; i<n; i++)
    {
        int w1, v1;
        cin >> w1 >> v1;
        for(int j=w; j>=w1; j--) dp[j] = max(dp[j], dp[j-w1] + v1);
    }

    cout << dp[w];

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n, w, num=0;
    cin >> n >> w;

    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];
    
    vector<int> ans;

    for(int i=0; i<n; i++)
    {
        if(arr[i] >= (w+1)/2 && arr[i] <= w)
        {
            cout << "1\n" << i+1 << endl;
            return;
        }
        if(arr[i] < (w+1)/2) 
        {
            ans.push_back(1+i);
            num += arr[i];
        }

        if(num >= (w+1)/2 && num <= w) break;
    }

    if(num < (w+1)/2) cout << -1 << endl;
    else 
    {
        cout << ans.size() << endl;
        for(int i: ans) cout << i << " ";
    }

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
   int n, sum=0;
   cin>>n;
   for(int i=0; i<n-1; i++){
    int a;
    cin>>a;
    sum += (-a);
   } 
   cout<<sum<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    
    int n;
    string s, s1;
    cin>>n>>s;
    s1 = s;
    reverse(s1.begin(), s1.end());
    cout<<min(s, s1+s)<<endl;

}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

vector<int> fact, ifact;
const int N = 2e5+10;
const int MOD = 998244353;

int abModm(int a, int b, int m){
    a%=m;
    int res = 1;
    while (b > 0) {
        if (b & 1)
            res = (res * a)%m;
        a = (a * a)%m;
        b >>= 1;
    }
    return res;
}

int modInverse(int a, int p)
{
    int q = p - 2;
    int res = 1;
    while (q > 0)
    {
        if (q & 1)
            res = (res * a) % p;
        a = (a * a) % p;
        q >>= 1;
    }
    return res % p;
}


int nCrModP(int n, int r, int p)
{
    if (n < r)
        return 0;
    if (r == 0)
        return 1;

    return (fact[n] * ifact[r] % p * ifact[n - r] % p) % p;
}

void solve(){
    int n, k;
    cin >> n >> k;

    // int ans = 1;
    


    vector<int> bits;

    for(int i=60; i>=0; i--)
    {
        if((n>>i)&1)
        {
            bits.push_back(i);
        }
    }

    

    int aa = 1;

    function <pair<int, int>(int, int)> ways = [&ways, &bits](int i, int k) -> pair<int, int> 
    {
        if(i == bits.size()) return {0, 1};
        int ans = 0, way=0;

        pair<int, int> anss = ways(i+1, k-1);

        ans +=  ((abModm(2, bits[i], MOD)-1)*(nCrModP(bits[i]-1, k-1, MOD)))%MOD;
        ans %= MOD;

        way += (nCrModP(bits[i]-1, k-1, MOD));
        way %= MOD;

        way += anss.second;
        way %= MOD;

        ans += anss.second * abModm(2, bits[i], MOD);
        ans %= MOD;

        ans += anss.first;
        ans %= MOD;

        return {ans, way};


    };

    cout << ways(0, k).first << endl;    

}

signed main(){

    fact.push_back(1);
    ifact.push_back(1);

    for (int i = 1; i <= N; i++)
    {
        fact.push_back((fact[i - 1] * i) % MOD);
        ifact.push_back(modInverse(fact[i], MOD) % MOD);
    }


    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long


vector<int> dp(2e5+10, -1);

vector<int> ans(vector<int> v, int bot)
{

    if(bot == 1) 
    {
        dp[bot] = v[0];
        return v;
    }
    int i = 1;
    while(i <= bot) i *= 2;
    i/=2;

    vector<int> anss;

    if(i == bot)
    {
        int val = 0;
        for(int i=0; i<bot; i++) val ^= v[i];
        anss.push_back(val);
        for(int i=bot; i<(int)v.size(); i++)
        {
            val ^= (v[i]^v[i-bot]);
            anss.push_back(val);
        }
        dp[bot] = anss[0];
        return anss;
    }
    else
    {
        vector<int> v1 = ans(v, i);
        vector<int> v2 = ans(v1 ,bot-i+1);
        dp[bot-i+1] = v2[0];
        return v2;
    }
}


signed main(){
    fastIO;
    int n;
    cin >> n;
    vector<int> arr(n);
    for(int i=0; i<n; i++) cin >> arr[i];


    for(int i=1; i<=n; i++) 
    {
        if(dp[i] == -1) cout << ans(arr, i)[0] << " ";
        else cout << dp[i] << " ";
    }

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long

signed main(){
    fastIO;
    int n, ans = INT64_MAX;
    cin >> n;
    int arr[n];

    for(int i=0; i<n; i++) cin >> arr[i];

    for(int i=0; i<n-1; i++)
    {
        ans = min(ans, max((arr[i] + arr[i+1] + 2)/3, (max(arr[i], arr[i+1])+1)/2));
        if(i+2 < n) 
        {
            ans = min(ans, max(arr[i], arr[i+2]));
            ans = min(ans, (arr[i] + arr[i+2]+1)/2);
        }
    }

    sort(arr, arr+n);
    ans = min(ans, (arr[0]+1)/2 + (arr[1]+1)/2);
    cout << ans << endl;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;

int farr[26];

int main(){
    fastIO;
    memset(farr, 0, sizeof(farr));
    string s;
    cin>>s;
    int odd_count = 0, odd_ind;
    for(int i=0; i<s.length(); i++){
        farr[s[i] - 'A'] += 1;
    }


    for(int i=0; i<26; i++){
        if(farr[i]%2==1) odd_count++;
    }


    if(odd_count>1) cout<<"NO SOLUTION";

    else{
        for(int i=0; i<26; i++){
            if(farr[i]%2==0){
                for(int j=0; j<farr[i]/2; j++){
                    cout<<char(65+i);
                }
            }
            else odd_ind = i;
        }
        if(odd_count == 1){
            for(int i = 0; i<farr[odd_ind]; i++){
                cout<<char(65+odd_ind);
            }
        }
        for(int i=25; i>=0; i--){
            if(farr[i]%2==0){
                for(int j=0; j<farr[i]/2; j++){
                    cout<<char(65+i);
                }
            }
        }
        
    }
    
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n;
    cin>>n;
    int arr[n], min=INT_MAX;
    for(int i=0; i<n; i++){
        cin>>arr[i];
        if(arr[i]<min){
            min = arr[i];
        }
    }
    long long int p=1;
    for(int i=0; i<n; i++){
        if(arr[i]!=min){
        p = p*arr[i];}
        else{
            p = p*(arr[i]+1);
            min=-1;
        }
    }
    cout<<p<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

int ask(int x, int y)
{
    cout << "? " << x << " " << y << endl;
    cout.flush();
    int a;
    cin >> a;
    return a;
}

void solve(){
    int n, m;
    cin >> n >> m;

    int a = ask(1, 1) + 2;
    int b = (n+m) - ask(n, m);

    int c = ask(1, m) - m + 1;

    if((a+c) % 2 == 0 && (a+c) > 0)
    {
        if(ask((a+c)/2, (a-c)/2) == 0)
        {
            cout << "! " <<  (a+c)/2 << " " << (a-c)/2 << endl;
            cout.flush();
        }
        else 
        {
            cout << "! " <<  (b+c)/2 << " " << (b-c)/2 << endl;
            cout.flush();
        }
    }
    else 
    {
        cout << "! " <<  (b+c)/2 << " " << (b-c)/2 << endl;
        cout.flush();
    }

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#pragma GCC optimize("O3,unroll-loops")
#pragma GCC target("avx,avx2,fma")
#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef struct
{
    int u, v, w;
} edge;

signed main(){
    fastIO;
    int n, m;
    cin >> n >> m;

    vector<unordered_set<int>> ans(n);
    vector<edge> edges(m);

    ans[0].insert(0);

    for(int i = 0; i < m; i++) 
    {
        cin >> edges[i].u >> edges[i].v >> edges[i].w;
        edges[i].u--;
        edges[i].v--;
    }

    for(int i = 0; i < n; i++)
    {
        for(edge e : edges)
            for(int j : ans[e.u])
            {
                int x = j ^ e.w;
                if (!ans[e.v].count(x))
                    ans[e.v].insert(x);
            }
    }

    cout << (ans[n - 1].size() ? *min_element(ans[n - 1].begin(), ans[n - 1].end()) : -1) << endl;
}


// #include <bits/stdc++.h>
// #define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
// using namespace std;
// #define int long long

// vector<int> fact, ifact;
// const int N = 2e5+10;
// const int MOD = 10000;

// int modInverse(int a, int p)
// {
//     int q = p - 2;
//     int res = 1;
//     while (q > 0)
//     {
//         if (q & 1)
//             res = (res * a) % p;
//         a = (a * a) % p;
//         q >>= 1;
//     }
//     return res % p;
// }

// int nCrModP(int n, int r, int p)
// {
//     if (n < r)
//         return 0;
//     if (r == 0)
//         return 1;

//     return (fact[n] * ifact[r] % p * ifact[n - r] % p) % p;
// }

// signed main(){
//     int ans = 0;

//     fact.push_back(1);
//     ifact.push_back(1);

//     for (int i = 1; i <= N; i++)
//     {
//         fact.push_back((fact[i - 1] * i) % MOD);
//         ifact.push_back(modInverse(fact[i], MOD) % MOD);
//     }

//     fastIO;
//     int x, y;
//     cin >> x >> y;

//     //cout << x << y << endl;

//     for(int i=1; i <= (min(y, x)); i++)
//     {
//         ans += nCrModP(x, i, MOD);
//       //  cout << nCrModP(x, i, MOD) << endl;
//         ans %= 10000;
//     }

//     cout << ans << endl;
// }


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long

const int MOD = 10000;

const int N = 1e5+10;

int C1[N];

int ncrmodm(int n, int k, int mod) {

    if(C1[k] != -1) return C1[k];

    if (k > n) return 0;
    if (k == 0 || k == n) return 1;

    vector<int> C(k + 1, 0);
    C[0] = 1;

    for (int i = 1; i <= n; ++i) {
        for (int j = min(i, k); j > 0; --j) {
            C[j] = (C[j] + C[j - 1]) % mod;
        }
    }
    return C1[k] = C[k];
}

signed main() {
    int x, y;
    
    cin >> x >> y;

    memset(C1, -1, sizeof(C1));

    int sum = 0;
    for (int i = 1; i <= y; ++i) {
        sum = (sum + ncrmodm(x, i, MOD)) % MOD;
    }

    cout << sum%MOD << endl;
    return 0;
}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n, x, y;
    cin >> n >> x >> y;
    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];

    sort(arr, arr+n);

    int sum = accumulate(arr, arr+n, (int)0);
    int ans = 0;

    for(int i=0; i<n; i++)
    {
        int num = upper_bound(arr, arr+n, sum - arr[i] - x) - lower_bound(arr, arr+n, sum - arr[i] - y);

        if(arr[i] <= sum - arr[i] - x && arr[i] >= sum - arr[i] - y) num--;

        ans += num;
    }

    cout << ans/2 << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

/**
                                                                                   .@@
                                                                                  .@@@@
                                                     :--:::::::-----==:           %%@@@%
                                             :*++*+==--========----------:-==:    @%@@@@.
                                        .:. ..-=+=+*+==---=----------------------:*@%@@@@         .:..
                                    .::::-----==+++====+***#+----=------:--------:-=%%@@@#+%@@@@@@@@@@@@@@@@@@@@@@@
                :+%@@@@@@@@@@@@@@%::::=*=+++++=++==*%*=-:=*#+##=-----------------:::-@%@@@@@@@@@@@@@@@@@@@@@@@@@@@*
             %%%%%%%%%%%%@@@@@@= .:=%@@@@@%#+=+++%@@@%+-==--++-=*=-------------:-----:*@@@@@@@@@@@@@@@@@@@@@@@@@@%
             .@%%%%%%%%%@@@@%-  .-+%@@@%@%%%####%#*#%%%%==----+=:-++-::------=----:::-:=@@@@@@@@@@@@@@@@@@@@@@@@%
               %%%%%%%%@%@@+  .::*%@@@@%#**#####******+*%+===---+=..:==---------:---::::-@@@@@@@@@@@@@@@@@@@@@@@
                %%%@%@%@@@:  .:.%%%%%#=+*+*+*#*+=+***+*#+##=--=-:-+.   ==--------::::--::-@@@@@@@@@@@@@@@@@@@@@
                .#%%%@%@%   . -@%%%*==+*++++**+++=+*++=++=+#--=----=:    +---:-::::::::--:-%@@@@@@@@@@@@@@@@@@=
                 :@%%%@=   . =%%%#---======+=========++=====*+--=-=--=.    --::::::::::::--=@@@@@@@@@@@@@@@@@@@:
                  @%@#   .  -%%*+---========-:===++======-==-==--=-----:     :-::::::::::::-=@@@@@@@@@@@@@@@@@@@=
                  @#.   .  .#*=+.-=-==-==-=-::===+=-==-=--=--==+=:------=     .-:::::::-:--:--#@@@@@@@@@@@@@@@@@@#
                 -         #+=-.:----=------.:-=-*===----==--==-+=-:::-::-:     :-::::::::::::==+@@@@@@@@@@@@@@@@@@
                     .    -==:..-=--==--:--:.-===+====----=====--=--::::::--      ::::::::::--:=%*=*@@@@@@@@@@@@@@@@.
                .+: .    .==-. :----==-::--:.---==-===---:------:----::::::-+       -:::------=--+#+#@@@@@@@@@@@@@@@@.
              .  . -    ::--. .::---:-:.-=-: :--==--==:=--:-::::::--=-:::-:::*.      :::-==-==--:--**@@@@@@@%@@@@@@@@@=
                :.:     :::.. .--:::::: --::.:-:---:--:--:::::::::--:==:::::::+.       -:-=-=------:*+@@@@@@@@+ #@@@@@@
               #-.     -::.. .=+:::::-:.--:-:.::::::::::+:::::::::::::=-:::::::=.       :=-=---------=%@@@@@@@@@  :@@@@
             =@-.     :=..   -=::::-:=.:::::-.::::::::::%.::::::::::::-=:::::::-+-        *%+=-------::%@@@@@@@@@:   :.
            #@*.      +-..  :-:::::::-..::::::.:::::::::%:-==:..::::::--+:::-:-====        :*%*+--------@@@@@@@@@@@
          .@@#       :=:   .::::::::-:.::::::-.::::::.::#.:-=-.:..::-.::-+:-=--===-=         -#++*+===-:#@@@@@@@@@@@@
         *@@*.    .  --.  .:::::::::-..::::.:::.::..:..-+:: :.......=-.::==--==-====-         .**++++++=*@@@@@@@@@@@@@@:
       =@@@==.   .: .=-.  ::::::.:::= .::::...::.-.....+::.  - :....:*::--==--=======-          -*++=+=++@@@@@@@@@@@@@@@@@@%-
     +@@@@::- . .:- :=-. .::::::.::=- .::......=.=.....+ :.  :  ... - -:-==+---==-=--*: .        .*++++=+%@@@@@@@@@@@@@@@
   :@@@@%.=.. : :--.-=:..:.::.:....-  ......... --:   ::.:.  .  :::.-  ----=#+====-==-*.           :*++=++@@@@@@@@@@@@@.
     +*#-- :.:: :-::==..::.:..:...:: .:....... . ::   :. :.      -::. ..:#=-=+-==-===-=+.+       ..  -+=++%#=-+=%@@@@#
        . ...::.--::==: ::........-:..=-   :  .   .   . .:.      :-*-    .:=-+====-==--=-+#       :.   +++++==+++++*@@*
          :.::.::-.-==-.=-:...--.: :.::-.  :            .:    :+--:.     ::.==+===---=-=+--%.      +@@=. :=*+++++++*++*
          .::::::::==---=-:.. =- .  ..: :..:  .:...  :  -. .+.   -*=:.+@@@@@@@@*====---=+*:**. .    =@@**%+:-+*%*++***+=
       . ...::::::-+=--+-=:--.+:.    ..  :.-.:::::. .:  :.*.  :-:+#@@%#++=%:-@##+===-==-=+--==+ ..   .###*+++**#@%#+*+++*=
       ..::::::::.*+--:=-----:=:-....::=:--=:....:..=. :.    ..+@@@*+==---#-=@*+*====-===+:-=*@% ::    *#*+*#+*++#%%%%##*+++-
       .::.:::::::%=--:-------: .     : -:-+#+-....= ..:     -*#::%+-:=+---:+**-+==-===-=-+-=@@@@ -#    =***#%#+*+#%==*+
      :.:::::::::-+=:---=-----. .      :. ::=..:..:   .       :   -=--:..:--+#-:-+=======-%==#@@@@:.@=   :#***%%#*+=#-==
      :-::-::::.:--*:---=-=---: . ..-+*#%#=-+:...:.                :+-....-+=::::#=======-*%-+@@@%@@-%%-  .#++*%%#*+#*+-
    . =-:::=:::::-:+.:--=-=--:- .=**+-:::+++%-..:.   .               ::..--:....:=#-=====-#@+=@@@%*%@%%@%-  -*+#%:*%++*=
      =:::---:------::-:==-=--+.      ....:  :.:.                     .   ......::*=-====-*@#-%@@%#*%%%%%%@*. +**- .*#**=
     +:::. :---=--=:=:-:==-==-:@.    .....:. ..:.                       ...::...--:*=====-+@@-*@%%*##%%*###+#*= +-  ::-:**
     ::-:   .:---.#:=.:-==-==-:%%    ....  ..:  :                              :=  ==-+==-*@@=*@%#**#%#****##*++**- .:     .
    .--      .:--:=:=-.-==-==-:%@+   ....   .:                                ::   :=--===#@@**%%**#*##***++**+=+*- ::
   :.         :----=.- -=-====-%@@:   ...   .      .                         .     :---==-@@@#%%%#*#*******+++***+# :
 .             -:--: .:-+--==-:%@@@                                              . #%:-===@@@#%##*##**+++#*+*+*+****-
                ::-:  *:%==----*+%@%   .                                        . #@%--+=*@%@%%##**#**+++%#*==+*++*+=
                -=:-. #:+#+---:#%++%#.                      . .:. .:+          ..#@@@--**%%%%%###*+#++*++*--+*==+++-+.
                . =:: -==%@--=-=%**%%+                 =@+ .....:.:.:.         .*:@@%--%%@%%%####**#++*+++--:   .+*-==
                   :---+**%%---:@**%%#+     .      :@%%%::.:::::..:.:         .-::%%%-:@%%%%%###**#*+++=*+-::    :==:-=
               .    :=-+*##*#:-:**+*%**@:           =@#*:.::::::::::        .:...:@%%-+%%%%%###**+%*==+=%=:-.    ..    :.
               .     +*=+**%**-:=***##*+%%.        . .*%.:::::::::..       :. ....@%%=%%%#*#####+#%+===+:-:-.    .
                     .+-++**#+** +*-*++++%%%.    ..     --:.::.:::       =: .    .%%#+%%####*+@*++%+=-+. .:-
                      --++=**#*+*-++==+++%%%#@+..         .:::.        :=.  .    .%%%#*#*##*#+#=++#===:  .-
               .    . =-=+****+**+#:+==++#%%#%%%@%=. ..              :-:       .  %#%###%*##.:*+==#++-    :
                    .  :-=+=++***++#-:+++*++*#%%%%@@%=.. ..       :---.           #@@%@@@@=  :=  .+-+-
                .    . :.-===++**+==*+::+#++++*#%%%%%%%%-.     .*=:-:.            *%%%##*==+**#*+==*+=
                     :  -::====++*=+=+*==*=-=#**##%#%%%%%*+-:%#--:-. ..           .%#*=-==-*#*++==++-=#*:
                     :*::**=====+**==+=++*##*+++**##%%%%%%. :::.:. ..             .:=--===+@#*+++=+*+=-=+=*#=
                     #-=+==*=-++++#++==-++++*++++*#%%%%%%=-  .:.... .            .  -=--=+@#*#%@@%+==+=====+*+
                   ..*++==+**+:=*++%++++#++++++*+**#%%%%#-=. .:........              .@-=+++#%%@@%@=======++*@+
                .+-.-+*==*++#+-:=++*%+=**++++++*++**%%%%--=-.::..........            .: ==++*%@@%@+========+*#@@+
               -:--.=-*+*+++++=:.:-+*#+++*****=+*##%+#%==---::...........           :    .+%@@@%@#+======++*#%%@@#%=
              +::-:==--=*==**=#=:::-+#**+*+**++**%=.-++-:::--... ..  ....          :.     ..-@@@*++====++++*#%@@@%*=+.
              =---.=--:*+=+#*+=:-:--=++=**+++++*#+:=-.--:.:::..........           +        ..*%-+=-====+++*###@@@#+=+#*
              =----==-*+===@%:..-=---++##=+++***#-. .:=::...:..........         :=          :*:==-=====+++*%#%@@*++++##@*
             .+=-=*=+#*---==%:.:-=%+#+-:--+++*+*%:..  -::.............         :.          .--==-=======+*#*%@%+++==+##@#%+
             -:=##*+=-::-===+:.--+*#---::+*++++#+ ....-  .:.........  ..   . :+. .         =============+**#*++++===*%%#%###.
             :--*#@*+-::::-==-:-=#=.---:-+*==+#-......-:  ..........        :.            +============+*##**++====*%%%#**+=+
            .:---%=@*+-::--:-:.-*=:=:--=#++*@%-... . .-:.... ......       .:.           .=-===========+**+++===-===*#***+++=-:
            ..:-==+*#+*=:-::--.=+=::-=+*+%@+#@%.... ..-:.  .........     .-            .+============++========--===++**++==--
             .:----++%**-::  .+=+=++++++*%#+@@@%......-:.  .            =. .          .+-===-===-==++==--===------==+++====--:
              ..:--=*#%*+=   .=%##-:-+++*##+@@@@@.... -:.  .         ..-             -+==-======++*=======------==++======+*#*
               .::=-=#+#-  .::=#-:-:=++=+##*@@@@@@.. .::.  .         -:      .     .=+==-==+-==++=:=---=----========+**+=----:=
                .::--=+#=.:::-*=:::::++=+*#*%.#@@@@:..::.   .   .  .+           .=#*++++*+=====--=-=---=--=+**##*+=====-------:-
                 ..::-=*+::::=:.::::--===**+*. -@@@@:.::  ...  .  -.. .  .  .-%@@@*+*#*#*+====--=-:----*##*+==--==---======----:
                   ..:-:+:-:--:::--:::-+#*+++:   @@@@+:-  ..  .  +. ..   -@@@@@@@*@%*###*======*+-=-=%#=-=======-====-=======-:-+
                     ..:=::::::::::-:**++=-++.   .@@@@#= . .   :+    :#@@@@@@@@@%##%%%%#+++==#@%%@=**+==========-------=====-=+==
                       .  .:::::::--+==----+#++.  .@@@@@ .. ..:::+#%@%@@@@@@@#@%%%%%%@%*=+#@@@%@#%@=============------=====++++=+
                          ....  ..::=-:----+*=+**=++@@@@@:.-*@@%%%%%@@@@*:. .@@%%@%%@%**%@@@@@##@@*========--------=====+++*#*+==
                           .    ...::=:--==++=+++=+++%@@@@@@@%%@%@@#-      :%#%%%%@%#@@@@@@@%#@*@@+--===-----------======*##**=--
                                ...:.--:--=*+===++=++=#@@@@@%%%#*++=.     :%%%@@%%@@@@@@@@+@@#+*@@+===-----------====+++*##**+=-:
                                ....:+=:-==#++===+++===%@@%#*+==+++++++*##@@@%@@@@@@@@@**%##+=-%@#=-------------====+++*##*++=-:.
                                 ..:-+#===+#  .-:=+=*+*+#*+==+++++++++**%@@@@@@@@@@@*-@@#+=+==+@@=--------------===+++*##*+=-:.
                                  ..:=%+==+%       =#*-##*#+=%+++=++*+#%@@@@@@@@@@:%@#*=+=-+=#@@+-=-------------====+*#*++=-:.
                                     .=*===*      .--#:..-#@@-.   .:=**@@@@@@@@*@@@%+%+@@=--#@%=--:----------------=+++==-:.
                                       =::--         :*-##==-.        -@@@@@@@@@@@@@@@@@@@@@%+=::::::::::::::::::--====-:..
                                           ...        *%=-.....       %@@@@@@@@@@@@@@@@@@@@@*-::..:.............:::--:..      .-:
                                                  ::  ==.   .....    +@%@@@@@@@@@@@@@@@@@@@@*.:. . ...          .... .     =@*-:
                                                      ::..:---::... :#*#@@@@@@@@@%%@@@@@@@@@@+ .                  :*    ##+%+:
                                                             ...::::*-:::@@@@@@%##%%%%@@@@@@@#                   -+. *+ =  -:
                                                                   ..  .#@@%%%%##*+*#%@@@%%%=                    . :     ::
                                                                        @@@%%%######%%%%#####%=                =        #
                                                                          @@@@@%@@%%%###*##*-                 . .     =
                                                                          :@@%%%%###******+=-                 .
                                                                            *@###***+**+++:
                                                                               -*- =*++*:
 
 
*/


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;

int mod_inverse(int n, int x){




}


void solve(){
    int n, x, y;
    cin>>n>>x>>y;
}

int main(){
    vector<int> v;
   
    
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}






#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;




int main(){
    fastIO;
    int n;
    cin>>n;
    int arr[n], p_sum[n+1];
    for(int i=0; i<n; i++) cin>>arr[i];
    p_sum[0] = 0;
    for(int i=0; i<n; i++) p_sum[i+1] = arr[i] + p_sum[i];
    for(int i=0; i<n+1; i++) cout<<p_sum[i]<<" ";
}

#include<bits/stdc++.h>
using namespace std;
int Add_bin(int a,int b){
  int lastdigit =0;
  int ans = 0;
  int carry = 0;
  int i =0;
while(a>0 || b>0 || carry>0){
  if(a%10 == 0 && b%10 ==0){
         lastdigit =  carry;
         carry = 0;
  }
  else if((a%10 == 1 && b%10 ==0)||(a%10 == 0 && b%10 ==1)){
    if(carry == 0){
      lastdigit = 1;
      carry = 0;
    }
    else{
     lastdigit = 0;
      carry = 1;
    }
  }
  else{
    if(carry = 0){
      lastdigit = 0;
      carry = 1;
    }
    else{
      lastdigit = 1;
      carry = 1;
    }
  }
  a = a/10;
  b = b/10;
  ans = lastdigit*(pow(10,i)) + ans;
  i++;
}
return ans;
}
int main(){
  int a,b;
  cin>>a>>b;
  cout<<Add_bin(a,b);
  return 0;

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n;
    cin>>n;
    int r = sqrt(n);
    bool no = 0;
    char c;
    
    if(r*r != n) 
    {
        no = 1;
        for(int i=0; i<n; i++) cin>>c;
    }
    else
    {
        for(int i=0; i<r; i++)
        {
            for(int j=0; j<r; j++)
            {  
                cin>>c;
                if((i == 0 || i == r-1 || j == 0 || j == r-1))
                {
                    if(c != '1')
                        no = 1;
                }
                else if(c != '0')
                {
                    no = 1;
                }
            }
        }
    }

    if(no) cout<<"No\n";
    else cout<<"Yes\n";
    
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;

signed main(){
    fastIO;
    int n;
    cin>>n;

    int a[n], b[n];
    memset(b,-1,sizeof(b));
    for(int i=0;i<n;i++) cin>>a[i];

    stack<int> s;

    for(int i=0;i<n;i++)
    {
        while(!s.empty() && a[s.top()] < a[i])
        {
            b[s.top()] = a[i];
            s.pop(); 
        }
        s.push(i);
    }

    for(int i=0;i<n;i++)
    {
        cout<<b[i]<<" ";
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    int arr[n];

    for(int i=0; i<n; i++) cin>>arr[i];

    for(int i=0; i<n-2; i++)
    {
      
        if(arr[i+1] < arr[i] * 2)
        {
            cout<<"NO\n";
            return;
        }
        else if(arr[i+2] < arr[i])
        {
            cout<<"NO\n";
            return;
        }
        
        arr[i+1] -= 2*arr[i];
        arr[i+2] -= arr[i];
        arr[i] = 0;
    }

    if(arr[n-1] != 0 || arr[n-2] != 0) cout<<"NO\n";
    else
        cout<<"YES\n";
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n;
    cin>>n;
    int diff = 0;
    for(int i=0; i<n; i++){
        int a;
        cin>>a;
        if(a == i+1){
            diff++;
        }
    }
    cout<<(diff+1)/2<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, m, p, q;
    cin >> n >> m >> p >> q;
    if(n%p == 0 && (n/p)*q != m) 
    {
        cout << "No\n";
    }
    else cout << "Yes\n";
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n, m, rsum=0, csum=0;
    cin >> n >> m;
    char arr[n][m];
    for(int i=0; i<n; i++) for(int j=0; j<m; j++) cin >> arr[i][j];

    for(int i=0; i<n; i++)
    {
        int rowx = 0;
        for(int j=0; j<m; j++) rowx ^= (arr[i][j] == '1');
        rsum += rowx;
    }

    for(int i=0; i<m; i++)
    {
        int colx = 0;
        for(int j=0; j<n; j++) colx ^= (arr[j][i] == '1');
        csum += colx;
    }

    cout << max(rsum, csum) << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;
const int N = 1e6+10;
int dp[N];

int lis(int arr[], int n, int i){
        int ans=1;
        if(dp[i]!=-1){
            return dp[i];
        }
        for(int j=0; j<i; j++){
            if(arr[i]>arr[j]){
                ans = max(ans, lis(arr, n, j)+1);
            }
        }
        dp[i] = ans;
    return ans;
}

int main(){

    
    int t;
    cin>>t;
    while(t--){
        memset(dp, -1, sizeof(dp));

    int n;
    cin>>n;
    
    int arr[n];
    for(int i=0; i<n; i++){
        cin>>arr[i];
    }
    
    int lucky=0;
    for(int i=0; i<n; i++){
        if(lis(arr, n, i)==2){
            lucky++;
        }
    }
    
    cout<<lucky<<endl;
    }
}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;

vi arr;
vector<vi> adj;

void dfs(int u, int p)
{
    arr.push_back(u);
    for(int v:adj[u])
    {
        if(v != p) dfs(v, u);
    }
}

signed main(){
    fastIO;
    int n, t;
    cin>>n>>t;
    adj.resize(n+1);
    
    for(int i=0; i<n-1; i++)
    {
        int u, v;
        cin>>u>>v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    for(int i=0; i<n; i++)
    {
        if(adj[i].size() == 1)
        {
            dfs(i, -1);
            break;
        }
    }
    
    int ind[n+1];
    for(int i=0; i<n; i++)
    {
        ind[arr[i]] = i;
    }

    for(int i=0; i<t; i++)
    {
        int u;
        cin>>u;
        if((ind[u])%2 == 1 || (n - ind[u] + 1) % 2 == 1)
        {
            cout<<"Ron\n";
        }
        else cout<<"Hermione\n";
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


signed main(){
    fastIO;
    int n;
    cin >> n;
    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];

    for(int i=n-1;i >=0; i--)
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


signed main(){
    fastIO;
    int n, m, paths = 0;
    cin>>n>>m;

    vector<vector<int>> adj(n);
    int maxx[n];
    int curr[n];

    memset(maxx, 0, sizeof(maxx));
    memset(curr, 0, sizeof(curr));
    
    bool has_cat[n];

    for(int i=0; i<n; i++) cin>>has_cat[i];

    for(int i=0; i<n-1; i++)
    {
        int u, v;
        cin>>u>>v;
        u--, v--;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    function <void(int, int)> dfs = [&](int u, int p) -> void
    {
        if(p == -1)
        {
            if(has_cat[u]) curr[u]++;
            maxx[u] = curr[u];
        }
        else
        {
            if(has_cat[u]) 
            {
                curr[u] = curr[p]+1;
                maxx[u] = max(curr[u], maxx[p]);
            }
            else
            {
                curr[u] = 0;
                maxx[u] = max(curr[u], maxx[p]);
            }
        }
        
        bool no_child = 1;
        for(int v: adj[u])
        {
            if(v != p)
            {
                dfs(v, u);
                no_child = 0;
            }
        }

        if(no_child && maxx[u] <= m) 
        {
            paths++;
        }
    };

    dfs(0, -1);
    cout << paths << endl;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    vector<int> bindec = {10, 11, 101, 110, 111, 1001, 1010, 1011, 1100, 1101, 1110, 1111, 10000, 10001, 10010, 10011, 10100, 10101, 10110, 10111, 11000, 11001, 11010, 11011, 11100, 11101, 11110, 11111, 100000};
    reverse(bindec.begin(), bindec.end());
    for(int i:bindec)
    {
        while(n%i == 0) n/=i;
    }
    if(n == 1) cout<<"YES\n";
    else cout<<"NO\n";

}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, k, ans = 0;
    cin>>n>>k;
    if(k == 0)
    {
        cout<<0<<endl;
        return;
    }

    else if(k < n)
    {
        cout<<1<<endl;
        return;
    }

    else 
    {
        k -= n;
        n--;
        ans = 1;
    }

    while(n != 0 && k != 0)
    {
        if(k <= n)
        {
            cout << ans + 1 << endl;
            return;
        }
        else if(k < 2*n) 
        {
            cout << ans + 2 << endl;
            return;
        }
        else{
            k -= 2*n;
            ans+=2;
            n--;
        }    
    }
    cout<<ans<<endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;
 
typedef long long int lli;
typedef vector<int> vi;
typedef pair<int, int> pi;
 
 
void solve()
{
    int n, x;
    cin >> n >> x;
    int arr[n], sorted[n];
    for (int i = 0; i < n; i++)
    {
        cin>>arr[i];
        sorted[i] = arr[i];
    }
 
   if(n >= 2*x)
   {
        cout<<"YES\n";
        return;
   }
   

   sort(sorted, sorted+n);
 
 int start = max(n-x, 0);
    for(int i = start; i<n - start; i++)
    {
        if(sorted[i] != arr[i])
        {
            cout<<"NO\n";
            return;
        }
    }

    cout<<"YES\n";


 
 
 
}
 
int main()
{
    fastIO;
    int t;
    cin >> t;
    while (t--)
    {
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin >> n;
    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];
    int pos = abs(arr[0]);
    int gret = 0;

    for(int i=1; i<n; i++)
    {
        if(abs(arr[i]) >= pos) gret++;
    }

    if(gret >= (n-1)/2) cout << "YES\n";
    else cout << "NO\n";
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

/*
#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;

vector <string> square(int n){
    vector <string> v1 = {"1"}, v2 = {"169", "196", "961"};
    if(n == 1) return v1;
    if(n == 3) return v2;
vector <string> prev = square(n-2);
vector <string> ans;

for(string i:prev){
    
    ans.push_back(i+"00");
}

string a, b;
a.push_back('1');
b.push_back('9');
for(int i=0; i < (n-3)/2; i++){
    a.push_back('0');
    b.push_back('0');
}
a.push_back('6');
b.push_back('6');
for(int i=0; i < (n-3)/2; i++){
    a.push_back('0');
    b.push_back('0');
}
a.push_back('9');
b.push_back('1');
ans.push_back(a);
ans.push_back(b);
return ans;
}


void solve(){
    int n;
    cin>>n;
    for(string i:square(n)) cout<<i<<"\n";

}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}*/


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;

bool zero_in(string s)
{
    for(char c:s)
    {
        if(c == '0') return true;
    }
    return false;
}

void solve(){
    int n;
    cin>>n;
    string s;
    cin>>s;
    if(n==2)
    {
        cout<<10*(s[0]-'0') + (s[1]-'0')<<endl;
        return;
    }
    if(n >= 4 && zero_in(s))
    {
        cout<<0<<endl;
        return;
    }
    if(n==3)
    {
        int a = s[0]-'0';
        int b = s[1]-'0';
        int c = s[2]-'0';
        cout<<min(min(a+10*b+c, a*(10*b+c)), min((10*a+b+c), (10*a+b)*c))<<endl;
        return;
    }
    int ans = INT_MAX;
    for(int i=0; i<n-2; i++)
    {
        int curr = 0;
        int a = s[i]-'0';
        int b = s[i+1]-'0';
        int c = s[i+2]-'0';   
        curr += min(min(a+10*b+c, a*(10*b+c)), min((10*a+b+c), (10*a+b)*c));
        for(int j=0; j<n; j++)
        {
            if(j != i && j!= i+1 && j!= i+2)
            {
                if(s[j] != '1') curr += s[j]-'0';
            }
        }
        ans = min(ans, curr);
    }
    cout<<ans<<endl;
    
    /*int ans = 0, smallest = 100;
    for(int i = 0; i<n-1; i++)
    {
        int a = 10*(s[i]-'0') + (s[i+1]-'0');
        smallest = min(a, smallest);
    }

     bool minus_one = 0;

    for(int i=2; i<n-1; i++)
    {
        int a = 10*(s[i]-'0') + (s[i+1]-'0');
        {
            if(a == smallest)
            {
                if(s[i] == s[i-1] && s[i] == s[i-2] && smallest != 11 && s[i+1] == '1') minus_one = 1;
            }
        }
    }





    for(int i=0; i<n-2; i++)
    {
        int a = 10*(s[i]-'0') + (s[i+1]-'0');
        if(a == smallest && s[i+2] != '1' && smallest == 11)
        {
            minus_one = 1;
        }
    }

    for(int i=0; i<n-1; i++)
    {
        int a = 10*(s[i]-'0') + (s[i+1]-'0');
        if(smallest == a)
        {
            s[i] = '0';
            s[i+1] = '0';
            break;
        }
    }

    for(int i=0; i<n; i++)
    {
        if(s[i] != '1') ans += s[i] - '0';
    }

   

    
    ans += smallest;
    if(minus_one) ans--;
    cout<<ans<<endl;
    */
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n;
    cin>>n;
    int arr[n], farr[101];
    for(int i=0; i<n; i++){
        cin>>arr[i];
    }
    memset(farr, 0, sizeof(farr));
    for(int i=0; i<n; i++){
        farr[arr[i]] = farr[arr[i]]+1;
    }
    vector <int> v;
    for(int i=0; i<101; i++){
        if(farr[i]>=2){
            v.insert(v.end(), i);
        }
    }
    if(v.size()>=2){
        
    }
    else{
        cout<<-1<<endl;
    }

}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;

bool fact(int n)
{
    vector<int> v;
    for(int i=1; i*i <=n; i++)
    {
        if(n%i == 0)
        {
            v.push_back(i);
            v.push_back(n/i);
        }
        if(i * i == n) v.pop_back();
    }
    sort(v.begin(), v.end());
    if(v.size() == 2) return 0;
    for(int i=0; i<v.size()-2; i++)
    {
        if((v[i+1]+v[i+2]) % v[i] != 0) return 0;
    }
    return 1;
}

signed main(){
    fastIO;
    int n;
    cin>>n;
    for(int i=1; i<=n; i++)
    {
        if(fact(i)) cout<<i<<endl;
    }
    


}

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int, int> pi;

void solve()
{
    int n, maxx = 0, ones = 0;
    cin >> n;
    char arr[n][n];

    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            cin >> arr[i][j];

            ones += arr[i][j] - '0';
        }
    }

    for (int diff = 0; diff < n; diff++)
    {
        int sum = 0;
        for (int row = 0; row < n; row++)
        {
            sum += arr[row][(row + diff) % n] - '0';
        }
        maxx = max(maxx, sum);
    }
    cout << ones - 2 * maxx + n << endl;
}

int main()
{
    fastIO;
    int t;
    cin >> t;
    while (t--)
    {
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, a, b;
    cin >> n >> a >> b;
    vector<pair<int, int>> v;
    int p1=0, p2 = 0;

    bool yes = 0;

    v.push_back({p1, p2});

    for(int i=0; i<n; i++)
    {
        char c;
        cin >> c;
        if(c == 'N') 
        {
            p2 += 1;
        }
        else if(c == 'E') p1++;
        else if(c == 'W') p1--;
        else p2--;

        v.push_back({p1, p2});
    }

    for(int i=0; i<v.size(); i++)
    {
        int q1 = v[i].first, q2 = v[i].second;
        
        if((p1 != 0 || p2 != 0 ) && (a-q1)*p2 == (b-q2)*p1)
        {
            yes = 1;
            if(p1 != 0 && ((a-q1)%p1 != 0 || (a-q1)/p1 < 0)) yes = 0;
            if(p2 != 0 && ((b-q2)%p2 != 0 || (b-q2)/p2 < 0)) yes = 0;  
            if(yes) break;
        }

        if(a==q1 && b==q2) yes = 1;
        if(yes) break;
    }

    if(yes) cout << "YES\n";
    else cout << "NO\n";

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    string s;
    cin>>s;
    
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long



void solve()
{
    int n, a;
    cin >> n;

    cout << "digit" << endl;
    cin >> a;

    cout << "mul 99" << endl;
    cin >> a;

    cout << "digit" << endl;
    cin >> a;

    cout << "add " << n-18 << endl;
    cin >> a;

    cout << "!" << endl;
    cin >> a;

}

signed main()
{
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    string s, t;
    cin>>n>>s>>t;
    while(s != t)
    {
        
        for(int i=0; i<n; i++)
        {
            
            if(s[i] != t[i])
            {
                if(i != n-1){
                if(s[i] == 'b')
                {
                    if(t[i] != 'c')
                    {
                        cout<<"NO\n";
                        return;
                    }
                    bool flag = 1;
                    for(int j=i+1; j<n; j++)
                    {

                        if(s[j] != 'b')
                        {
                            if(s[j] == 'c')
                            {
                                flag = 0;
                                s[i] = 'c';
                                s[j] = 'b';
                                break;
                            }
                            else {
                                cout<<"NO\n";
                                return;
                            }
                        }
                    }
                    if(flag)
                    {
                        cout<<"NO\n";
                        return;
                    }
                }
                else if(s[i] == 'a')
                {
                    if(t[i] != 'b')
                    {
                        cout<<"NO\n";
                        return;
                    }
                    bool flag = 1;
                    for(int j=i+1; j<n; j++)
                    {
                        if(s[j] != 'a')
                        {
                            if(s[j] == 'b')
                            {
                                flag = 0;
                                s[i] = 'b';
                                s[j] = 'a';
                                break;
                            }
                            else {
                                cout<<"NO\n";
                                return;
                            }
                        }
                    }
                    if(flag)
                    {
                        cout<<"NO\n";
                        return;
                    }
                }
                else {
                    cout<<"NO\n";
                    return;
                }
            }
            else {
                cout<<"NO\n";
                return;
            }
            }
            
        }
    }
    cout<<"YES\n";
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, k, ans = INT_MAX;
    cin >> n >> k;
    vector<pair<int, int>> v(n);

    for(int i=0; i<n; i++) cin >> v[i].first;
    for(int i=0; i<n; i++) cin >> v[i].second;

    sort(v.begin(), v.end());
    reverse(v.begin(), v.end());

    int pref[n+1];
    pref[0] = 0;

    for(int i=0; i<n; i++)
    {
        pref[i+1] = pref[i] + v[n - i - 1].second;
    }

    for(int i: pref) cout << i << " ";
    cout << endl;

    for(int i=0; i<=n-k; i++)
    {
        ans = min(ans, v[i].first * (pref[k-1] + v[i].second));
    }
    cout << ans << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


signed main(){
    for(int a=0; a<=2; a++)
    {
        for(int b=0; b<=2; b++)
        {
            for(int c=0; c<=2; c++)
            {
                if(b == (a<b) + (c<b)) { cout << a << " " << " " << b << " " << c << endl;}
                // else  cout << a << " " << " " << b << " " << c << endl;
            }
        }
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



signed main(){
    fastIO;
    int n;
    cin >> n;
    cout << n/2 + (n==1) << "\n";
    if(n == 1) cout << 1;
    for(int i=1; i<=n; i++) if(i%2 == 0) cout << i << " ";
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;


bool compare(pair<lli, lli> p1, pair<lli, lli> p2)
{
    return p1.second<p2.second;
}


void solve(){
    lli n;
    cin>>n;
    vector<pair<lli, lli>> v;

    for(lli i=0; i<n; i++)
    {
       lli a;
       cin>>a;
       v.push_back(make_pair(a, i));
    }
    sort(v.begin(), v.end());
    vector <lli> v1;
    v1.push_back(v[0].second);
    lli start = 0;
    for(lli i=1; i<v.size(); i++)
    {
        if(v[i].first/4 == v[i-1].first/4)
        {
            v1.push_back(v[i].second);
        }
        else 
        {
            sort(v1.begin(), v1.end());
            for(lli j = start; j<start + v1.size(); j++)
            {
                v[j].second = v1[j-start];
            }
            start = i;
            v1.clear();
            v1.push_back(v[i].second);
        }
    }
    sort(v1.begin(), v1.end());
    
    for(lli j = start; j<start + v1.size(); j++)
            {
                v[j].second = v1[j-start];
            }
    
    sort(v.begin(), v.end(), compare);
    for(pair<lli, lli> p: v) cout<<p.first<<" ";
    cout<<endl;

}

int main(){
    fastIO;
    lli t;
    cin>>t;
    while(t--){
        solve();
    }
}

/*
#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int, int> pi;

#define MAXN 1000001
vector<int> spf(MAXN + 1, 1);

void sieve()
{
    spf[0] = 0;
    for (int i = 2; i <= MAXN; i++)
    {
        if (spf[i] == 1)
        {
            for (int j = i; j <= MAXN; j += i)
            {
                if (spf[j] == 1)
                    spf[j] = i;
            }
        }
    }
}

pair<int, int> getFactorization(int x)
{
    vector<int> ret;
    vector<int> ans;
    ans.push_back(1);

    if(x == 1) return make_pair(1, 1);

    while (x != 1) {
        ret.push_back(spf[x]);
        x = x / spf[x];
    }

    int cnt = 1;
    for(int i=0; i<ret.size() - 1; i++)
    {
        if(ret[i] == ret[i+1]) cnt++;
        else
        {
            if(cnt%2 == 1)
            {
                ans.push_back(ret[i]);
            }
        }
    }
    if(cnt%2 == 1)
    {
        ans.push_back(ret[ret.size()-1]);
    }

    if(ans.size() == 3) return make_pair(ans[1], ans[2]);
    if(ans.size() == 1) return make_pair(1, 1);
    return make_pair(ans[0], ans[1]);
}

vector<set<int>> adj(MAXN);
vector<int> parent(MAXN, -1);


int bfs(int u)
{
    queue <int> q;
    int depth = 0;
    q.push(u);

    while(!q.empty())
    {
        int p = q.front();
        q.pop();

        for(int v:adj[p])
        {
            if(v != parent[p])
            {
                q.push(v);
                parent[v] = p;

                if(v == u)
                {
                    v = parent[v];
                    while(v != u)
                    {
                        v = parent[v];
                        depth++;
                    }
                    return depth+1;
                }

            }
        }

    }

    return -1;
}

int main()
{
    sieve();
    bool one = 0;
    bool two = 0;

    fastIO;
    int n, maxx = 0;
    cin >> n;

    int arr[n];
    for (int i = 0; i < n; i++)
    {
        int a;
        cin>>a;
        maxx = max(maxx, a);
        pi p = getFactorization(a);

        if(p.first == 1 && p.second == 1) one = 1;
        if(adj[p.first].find(p.second) != adj[p.first].end())
        {
            two = 1;
        }

        else
        {
            adj[p.first].insert(p.second);
            adj[p.second].insert(p.first);
        }
    }


    if(one)
    {
        cout<<one<<endl;
        return 0;
    }

    if(two)
    {
        cout<<2<<endl;
        return 0;
    }

    int ans = INT_MAX;

    for(int i = 1; i*i <= maxx; i++)
    {
        if(spf[i] == i)
        {
            parent[i] = -1;
            int m = bfs(i);
            if(m != -1)
                ans = min(ans, m);
        }
    }


    if(ans == INT_MAX) cout<<-1;
    else cout<<ans<<endl;

}
*/

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int, int> pi;

vector<int> spf;

void sieve(int size)
{
    spf[0] = 0;
    for (int i = 2; i <= size; i++)
    {
        if (spf[i] == 1)
        {
            for (int j = i; j <= size; j += i)
            {
                if (spf[j] == 1)
                    spf[j] = i;
            }
        }
    }
}

pair<int, int> getFactorization(int x)
{
    vector<int> ret;
    vector<int> ans;
    ans.push_back(1);

    if (x == 1)
        return make_pair(1, 1);

    while (x != 1)
    {
        ret.push_back(spf[x]);
        x = x / spf[x];
    }

    int cnt = 1;
    for (int i = 0; i < ret.size() - 1; i++)
    {
        if (ret[i] == ret[i + 1])
            cnt++;
        else
        {
            if (cnt % 2 == 1)
            {
                ans.push_back(ret[i]);
            }
            cnt = 1;
        }
    }
    if (cnt % 2 == 1)
    {
        ans.push_back(ret[ret.size() - 1]);
    }

    if (ans.size() == 3)
        return make_pair(ans[1], ans[2]);
    if (ans.size() == 1)
        return make_pair(1, ans[0]);

    return make_pair(ans[0], ans[1]);
}

const int INF = INT_MAX;

int findShortestCycle(vector<set<int>> &graph, vector<int> &existingNodes)
{
    int shortestCycle = INF;

    for (int start : existingNodes)
    {
        vector<int> dist(graph.size(), INF);
        vector<int> parent(graph.size(), -1);
        queue<int> q;

        q.push(start);
        dist[start] = 0;

        while (!q.empty())
        {
            int node = q.front();
            q.pop();

            for (int neighbor : graph[node])
            {
                if (dist[neighbor] == INF)
                {
                    dist[neighbor] = dist[node] + 1;
                    parent[neighbor] = node;
                    q.push(neighbor);
                }
                else if (parent[node] != neighbor && parent[neighbor] != node)
                {
                    shortestCycle = min(shortestCycle, dist[node] + dist[neighbor] + 1);
                    if (shortestCycle == 3)
                        return 3;
                }
            }
        }
    }

    return (shortestCycle == INF) ? -1 : shortestCycle;
}

int main()
{

    bool one = 0;
    bool two = 0;

    fastIO;
    int n, maxx = 0;
    cin >> n;
    int arr[n];

    for (int i = 0; i < n; i++)
    {
        cin >> arr[i];
        maxx = max(maxx, arr[i]);
    }

    spf.resize(maxx + 6, 1);
    vector<set<int>> adj(maxx + 1);
    sieve(maxx + 5);

    for (int i = 0; i < n; i++)
    {
        int a = arr[i];
        pi p = getFactorization(a);

        if (p.first == 1 && p.second == 1)
        {
            one = 1;
        }

        if (adj[p.first].find(p.second) != adj[p.first].end())
        {
            two = 1;
        }
        else
        {
            adj[p.first].insert(p.second);
            adj[p.second].insert(p.first);
        }
    }

    if (one)
    {

        cout << one << endl;
        return 0;
    }

    if (two)
    {
        cout << 2 << endl;
        return 0;
    }

    vector<int> prime;
    for (int i = 1; i * i <= maxx; i++)
    {
        if (spf[i] == i)
            prime.push_back(i);
    }

    cout << findShortestCycle(adj, prime);
}


#include<bits/stdc++.h>
#include<vector>
using namespace std;



int main(){
    
    int t;
    cin>>t;

    while (t--){
        int n,m,x;
        cin>>n>>m>>x;

        vector<int> v;
        set<int> temp;

        v.push_back(x);

        for (int i=0;i<m;i++){
            int d;
            string c;
            cin>>d;
            cin>>c;
            if (c==" 0"){

                temp.insert((x+d)%n);
                }
            else if (c==" 1"){
                temp.insert((x-d)%n);
            }
            else{
                temp.insert((x+d)%n);
                temp.insert((x-d)%n);
            }
        }
        for (auto x : temp)
        cout << x << " ";
    }
    return 0;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 




signed main(){
    fastIO;
    int n, q;
    cin >> n >> q;

    map<int, int> mp;
    set<pair<int, int>> s;

    for(int i=0; i<n; i++) 
    {
        mp[i] = 0;
        s.insert({0, i});
    }


    while(q--)
    {
        int a;
        cin >> a;
        if(a == 0)
        {
            int box = (*s.begin()).second;
            s.erase(s.begin());
            mp[box]++;
            cout << box+1 << " ";
            s.insert({mp[box], box});
        }
        else 
        {
            a--;
            int box = a;
            cout << box+1 << " ";
            s.erase(s.find({mp[box], box}));
            mp[box]++;
            s.insert({mp[box], box});
        }
    }
    
    
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin >> n;
    int a = n/5, e=n/5, i=n/5, o=n/5, u=n/5;

    if(n%5 >= 1) a++;
    if(n%5 >= 2) e++;
    if(n%5 >= 3) i++;
    if(n%5 >= 4) o++; 

    while(a--) cout << 'a';
    while(e--) cout << 'e';
    while(i--) cout << 'i';
    while(o--) cout << 'o';
    while(u--) cout << 'u';
    cout << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

// #include <bits/stdc++.h>
// #define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
// using namespace std;
// #define int long long 





// signed main(){
//     fastIO;
//     int n, m, ans = 0;
//     cin >> n >> m;
//     vector<vector<int>> adj(n);
//     vector<int> visited(n, 0);
//     vector<int> dp(n, 0);

//     for(int i=0; i<m; i++)
//     {
//         int u, v;
//         cin >> u >> v;
//         u--, v--;
//         adj[u].push_back(v);
//         adj[v].push_back(u);
//     }

//     function <void(int, int)> dfs = [&](int u, int p) -> void
//     {
//         // cout << u+1 << endl;
//         bool leaf = 1;
//         if(p != -1) dp[u] = dp[p];
//         visited[u] = 1;

//         for(int v: adj[u])
//         {
//             if(visited[v] && v != p)
//             {
//                 dp[u] += dp[u] - dp[v] + 1;
//                 // dp[u]++;
//                 // back = 1;
//             }
//         }


//         for(int v: adj[u])
//         {
//             if(!visited[v])
//             {
//                 dfs(v, u);
//                 leaf = 0;
//             }
//             // else if(v != p)
//             // {
//             //     dp[u]++;
//             //     back = 1;
//             // }
       
//         }

//         if(leaf) 
//         {
//             cout << u+1 << endl;
//             ans += dp[u];
//         }

//     };

    
    

//     for(int i=0; i<n; i++)
//     {
//         if(!visited[i]) dfs(i, -1);
//     }

//     for(int i=0; i<n; i++) cout << i + 1 << ": " << dp[i] << endl;

//     cout << ans << endl;

// }


#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<long long> vll;
typedef vector<pair<ll,ll>> vp;

#define all(v) v.begin(), v.end()
#define rep1(i, n1, n2) for(int i = n1; i < n2; i++)
#define rep2(i, n2, n1) for(int i = n2; i >= n1; i--)
#define vecMAX(a) *max_element(all(a))
#define vecMIN(a) *min_element(all(a))
#define srt(v) sort(all(v))
#define rev(v) reverse(all(v))
#define pb push_back

template <typename T>
vector<vector<T>> vec2d(int rows, int cols, T initialValue) {
    return vector<vector<T>>(rows, vector<T>(cols, initialValue));
}

const int mod7 = 1000000007;
const ll inf = 1e18;
const int mod9 = 998244353;

int n,m;
vvi adj;
vi v;
vi p;
vi dp;
void dfs(int i)
{
    v[i] = 1;
    int up = 0 , tot = 0;
    for(int j: adj[i])
    {
        if(v[j] != 0 && p[i] != j)
        {
            up++;
            v[i] = 2;
        } 
    }

    for(int j: adj[i])
    {
        if(v[j] == 0)
        {
            p[j] = i;
            dfs(j);
            dp[i] += dp[j];
        }
        else if(j != p[i])
        {
            tot++;
        }
    }
    dp[i] += up;
    dp[i] -= (tot - up);
    // cout << i << "->" << up << " " << tot-up << endl;
}

void solve(int tc){
    cin>>n>>m;
    adj.assign(n+1,vi(0));
    v.assign(n+1, 0);
    p.assign(n+1, 0);
    dp.assign(n+1, 0);

    for(int i=0;i<m; i++)
    {
        int a,b;
        cin>>a>>b;
        adj[a].pb(b);
        adj[b].pb(a);
    }

    dfs(1);
    ll ans = 1;

    for(int i= 0; i<n; i++)
    {
        cout<<v[i+1]<<" "<<dp[i+1]<<endl;
    }

    for(int i=1; i<=n; i++)
    {
        if(v[i] == 2)
        {
            v[i] = 1;
            int j = i, a = 1;
            while(dp[j] != 0)
            {
                a++;
                j = p[j];
            }
            ans *= a;
        }
    }
    cout<<"Case "<<tc<<": "<<ans<<endl;
}

int main(){
    ios::sync_with_stdio(0); cin.tie(0);
    int t;
    cin>>t;
    for(int i = 1; i<t+1; i++){
        solve(i);
    }
    return 0;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n;
    cin >> n;
    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];

    set<int> s;
    for(int i=1; i<=n; i++) s.insert(i);

    int ans[n];
    memset(ans, -1, sizeof(ans));

    for(int i=0; i<n; i++)
    {
        if(s.find(arr[i]) != s.end()) 
        {
            ans[i] = arr[i];
            s.erase(s.find(arr[i]));
        }
    }

    auto ptr = s.begin();

    for(int i=0; i<n; i++)
    {
        if(ans[i] == -1) ans[i] = *(ptr++);
    }

    for(int i: ans) cout << i << " ";
    cout << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, maxx = 0, last;
    cin>>n;
    for(int i=0; i<n; i++)
    {
        int a;
        cin>>a;
        if(i!=n-1)
        {
            maxx = max(a, maxx);
        }
        else last = a;
    }
    cout<<last+maxx<<endl;

}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin >> n;
    cout << 2*n << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n;
    cin >> n;
    if(n%2 == 0)
    {
        for(int i=0; i<n; i++) cout << 1 + (i/2) << " ";
        cout << endl;
    }
    else
    {
        if(n < 27) cout << -1 << endl;
        else
        {
            int ans[n + 1];
            ans[1] = 1, ans[10] = 1, ans[26] = 1;
            for(int i=2; i<=9; i++) ans[i] = (i+2)/2;
            for(int i=11; i<=22; i++) ans[i] = (i+1)/2;
            ans[23] = 12, ans[27] = 12;
            ans[24] = 13, ans[25] = 13;
            for(int i=28; i<=n; i++) ans[i] = i/2;
            for(int i=1; i<=n; i++) cout << ans[i] << " ";
            cout << endl;
        }
    }
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n, m, j; 
    cin >> n >> m;
    int arr[m];
    for(int i=0; i<m; i++) cin >> arr[i];

    sort(arr, arr+m, greater<>());

    vector<int> ans(n, arr[0]);
    map<int, int> next;

    for(int i=0; i<m-1; i++) next[arr[i]] = arr[i+1];

    if(m <= log2(n)) cout << -1 << endl;
    else 
    {
        for(int i=1; i<=n; i++) for(int j=2*i; j<=n; j+=i) if(ans[j-1] == ans[i-1]) ans[j-1] = next[ans[j-1]];
        for(int i: ans) cout << i << " ";
        cout << endl; 
    }
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    for(int i=0; i<n; i++){
        if(i%2==0) cout<<(i/2)+1<<" ";
        else cout<<n - (i/2)<<" ";
    }
    cout<<"\n";
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    lli n, x, y, ans = 0;
    cin>>n>>x>>y;
    char a[n], b[n];
    vector <int> ind;
    for(int i=0; i<n; i++){
        cin>>a[i];
    }
    for(int i=0; i<n; i++){
        cin>>b[i];
    }
    for(int i=0; i<n; i++){
        if(a[i] != b[i]) {
            ind.push_back(i);
            }   
    }
    if(ind.size()%2 == 1) ans = -1;
    else if(ind.size() > 2){
        ans += y*ind.size()/2;
    }
    else if(ind.size() == 2){
        if(abs(ind[0]-ind[1]) > 1) ans += y;
        else if(n > 3) ans += min(x, 2*y);
        else ans += x;
    }
    cout<<ans<<"\n";
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;
#define int long long

int t1, t2, t3, t, d;

int test(int n)
{
    
    int ans = 0;
    //int one = 0, two = 0, three = 0;
    int ones[t1], twos[t2], threes[t3];

    memset(ones, 0, sizeof(ones));
    memset(ones, 0, sizeof(twos));
    memset(ones, 0, sizeof(threes));

    for(int i=1; i<n; i++)
    {
        int c1 = 0;
        for(int j=0; j<t1; j++)
        {
            if(ones[j] == t)
            {
                c1++;
            }
        }

        for

    }

}

signed main()
{
    fastIO;
    int n;
    cin >> n;

    
    cin >> t1 >> t2 >> t3 >> t >> d;

    int tt1 = t + (t + 2) * ((n + min(t1, t2) - 1) / min(t1, t2)), d1;

    if((n + min(t3, min(t1, t2))-1)/(min(t3, min(t1, t2)) * (t-2) > tt1))  d1 = (n+t3-1)/t3 * (t-2) + 2*t+2;
    else d1 = 2 * t - 2 + (t + 2) * ((n + min(t1, t2) - 1) / min(t1, t2));

    cout << test(68) << endl;
    //test(69);
    

    if (d1 <= d) cout << "YES " << d1 << endl;
    else cout << "NO " << d1 - d << endl;
}





#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

void solve(){
    int n, c = 0, max = 0;
    cin>>n;
    char arr[n];
    int freq[26][2];
    memset(freq, 0, sizeof(freq[0][0])*26*2);
    for(int i=0; i<n; i++){
        cin>>arr[i];
        freq[arr[i]-'a'][1]+=1;
    }
    for(int i=0; i<n; i++){
      c = 0;
        for(int j=0; j<26; j++){
            if(freq[j][0]>0){
                c++;
            }
            if(freq[j][1]>0){
                c++;
            }
            if(c>max){
                max = c;
            }
        }
        freq[arr[i]-'a'][0] += 1;
        freq[arr[i]-'a'][1] -= 1;
    }
    cout<<max<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    int arr[n];
    for(int i=0; i<n; i++) cin>>arr[i];
    string ans = "";
    bool yes = 0, f = 1;
    ans += 'R';
    for(int i=0; i<n-1; i++)
    {
        ans+="B";
        if(arr[i] != arr[i+1]) yes = 1;
    }
    if(arr[0] != arr[1])
    {
        ans[0] = 'B';
        ans[1] = 'R';
    }

    if(yes) 
    {
        cout<<"YES"<<endl<<ans<<endl;
    }
    else cout<<"NO\n";
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

int main()
{
  int t;
  cin >> t;

  while(t--)
  {
      long long int k, l1, r1, l2, r2;
      cin >> k >> l1 >> r1 >> l2 >> r2;
      long long int ans = 0;
      long long int m = 1;

      while(1)
      {
        int val = (min(r1*m, r2)/m - (max(l1*m, l2) - 1)/m);
        if(val > 0) ans += val;
        if(m * l1 > r2) break;
        m *= k;
      }

      cout << ans << endl;
  }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

int ask(int a, int b)
{
    int ans;
    cout << "? " << a << " " << b << endl;
    cin >> ans;
    return ans;
}

void solve()
{
    int p = 2, add = 0;

    for(int i = 1; i <= 29; i++)
    {
        if(ask(p - add, 2*p - add) != p) add += p/2;
        p *= 2;
    }

    if(2*add + (1LL << 30) <= 2e9 && ask((1LL<<29) + add, 2*add + (1LL << 30)) == add + (1LL << 29)) cout << "! " << add + (1LL << 29) << endl;
    else cout << "! " << add << endl;
}

signed main(){
    fastIO;
    int t;
    cin >> t;
    while(t--) solve();
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

const int N = 501;
int arr[N];

bool dp[501][501];
bool visited[501][501];

bool can_make(int x, int y, int n)
{
    dp[0][0] = 1;

//    if(visited[x][y]) return dp[x][y];

    for(int i=0; i<n; i++)
    {
        if(x >= arr[i]) dp[x][y] |= dp[x - arr[i]][y];
        if(y >= arr[i]) dp[x][y] |= dp[x][y - arr[i]];

        for(int j=arr[i]; j<n; j++) 
        {

            for(int k=0; k<n; k++)
            {
                dp[j][k] |= dp[j - arr[i]][k];
                dp[k][j] |= dp[k][j - arr[i]];
            }
            
            

        }
    }

    visited[x][y] = 1;

    return dp[x][y];
}

signed main(){
    
    fastIO;
    int n, k;
    cin >> n >> k;

    memset(dp, 0, sizeof(dp));
    memset(visited, 0, sizeof(visited));

    for(int i=0; i<n; i++) cin >> arr[i];

    vector<int> ans;

    for(int i = 0; i <= k; i++)
    {
        if(can_make(i, k-i, n)) ans.push_back(i);
    }

    cout << ans.size() <<  endl;
    for(int i: ans) cout << i << " ";

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, q;
    string s;
    cin>>n>>q>>s;
    int arr[n+1];
    arr[0] = 0;
    arr[1] = 1;
    for(int i=1; i<n; i++){
        if(s[i]==s[i-1]){
            arr[i+1] = arr[i];
        }
        else arr[i+1] = 1 + arr[i];
    }
    
    
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n;
    cin>>n;
    int arr[n];
    int min=INT_MAX, minlucky=INT_MAX, lucky=0;
    for(int i=0; i<n; i++){
        cin>>arr[i];
    }
    for(int i=0; i<n; i++){
        if(arr[i]>min && arr[i]<minlucky){
            lucky++;
            if(arr[i]<minlucky){
                minlucky=arr[i];
            }
        }
        if(min>arr[i]){
            min = arr[i];
        }
    }
    cout<<lucky<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n;
    cin>>n;
    if(n%2==0){
        cout<<"even"<<endl;
    }
    else{
        cout<<"odd"<<endl;
    }
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

void solve(){
    int n, k, m, sum=0, count=0;
    string ans;
    cin>>n>>k>>m;
    int farr[k];
    memset(farr, 0, sizeof(farr));
    string s;
    cin>>s;
    for(int i=0; i<m; i++){
        sum = 0;
        farr[s[i]-97] = 1;
        for(int j=0; j<k; j++){
            if(farr[j]==1){
                sum++;
            }
        }
        //cout<<sum<<endl;
        if(sum==k && count <= n-2){
            //cout<<s[i]<<endl;
            ans.push_back(s[i]);
            memset(farr, 0, sizeof(farr));
            count++;
        }
    }
    sum = 0;
    for(int j=0; j<k; j++){
            if(farr[j]==1){
                sum++;
            }
            
            if(farr[j]==0){
                while(ans.length()!=n){
                ans.push_back(char(j+97));
                }
            }
            
        }
    if(sum==k){
        cout<<"YES"<<endl;
    }
    else{
        cout<<"NO"<<endl;
        cout<<ans<<endl;
    }

}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;

void solve(){
    int n;
    cin>>n;
    double arr[n];
    int power[n];
    memset(power, 0, sizeof(power));

    for(int i=0; i<n; i++) 
    {
        int a;
        cin>>a;
        arr[i] = log(a);
    }

    for(int i=1; i<n; i++)
    {
        if(log2((double)arr[i]/arr[i-1]) < power[i-1])
        {
            if(arr[i] == 0)
            {
                cout<<-1<<endl;
                return;
            }
            
            int j = power[i-1] + ceil(log2((double)arr[i-1]/arr[i]));
            power[i] = j;
        
        }
    }

    cout<<accumulate(power, power+n, (int)0)<<endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long

int ask(string s, int i, int j)
{
    int ans;
    cout << s << " " << i << " " << j << endl;
    cin >> ans;
    return ans;
}

signed main()
{
    fastIO;
    int n;
    cin >> n;
    int ans[n];
    ans[0]=0;

    vector<int> visited(n, 0);
    visited[0]=1;

    int ind1=-1, ind2=-1;
    bool f = 1;

    for(int i=2; i<=n; i++) 
    {
        ans[i-1] = ask("XOR", 1, i);
        if(f && visited[ans[i-1]])
        {
            ind2 = i;
            for(int j=1; j<i; j++) if(ans[j-1] == ans[i-1]) ind1 = j;
            f = 0;
        }
        visited[ans[i-1]] = 1;
    }

    if(!f)
    {
        int num = ans[ind1-1];
        for(int i=0; i<n; i++) ans[i] ^= num;
        num = ask("AND", ind1, ind2);
        for(int i=0; i<n; i++) ans[i] ^= num;

        cout << "! ";
        for(int i: ans) cout << i << " ";
        cout << endl;
        return 0;
    }

    for(int i=2; i<=n; i++) if(ans[i-1] <= 2) ans[0] |= ask("AND", 1, i);
    for(int i=2; i<=n; i++) ans[i-1] ^= ans[0];

    cout << "! ";
    for(int i: ans) cout << i << " ";
    cout << endl;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



void solve(){
    int n, q;
    cin >> n >> q;
    int arr[n][n];

    for(int i=0; i<n; i++)
    {
        for(int j=0; j<n; j++) cin >> arr[i][j];
    }

    int pref1[n+1][n+1], pref2[n+1][n+1], pref3[n+1][n+1];

    for(int i=0; i<=n; i++)
    {
        pref1[i][0] = 0;
        pref1[0][i] = 0;
        pref2[i][0] = 0;
        pref2[0][i] = 0;
        pref3[i][0] = 0;
        pref3[0][i] = 0;
    }

    for(int i=1; i<=n; i++)
    {
        for(int j=1; j<=n; j++) 
        {
            pref1[i][j] = pref1[i-1][j] + pref1[i][j-1] + (j + (i-1)*n)*arr[i-1][j-1] - pref1[i-1][j-1];
            pref2[i][j] = pref2[i-1][j] + pref2[i][j-1] + arr[i-1][j-1] - pref2[i-1][j-1];
            pref3[i][j] = pref3[i-1][j] + pref3[i][j-1] + (i)*arr[i-1][j-1] - pref3[i-1][j-1];
        }
    }

    while(q--)
    {
        int x1, y1, x2, y2;
        cin >> x1 >> y1 >> x2 >> y2;

        int ans = pref1[x2][y2] - pref1[x2][y1-1] - pref1[x1-1][y2] + pref1[x1-1][y1-1];
        int a = (y1 + (x1-1) * n) - 1;
        int d = n - (y2 - y1) - 1;
        int b = pref3[x2][y2] - pref3[x2][y1-1] - pref3[x1-1][y2] + pref3[x1-1][y1-1] - x1 * (pref2[x2][y2] - pref2[x2][y1-1] - pref2[x1-1][y2] + pref2[x1-1][y1-1]);

        ans -= a*(pref2[x2][y2] - pref2[x2][y1-1] - pref2[x1-1][y2] + pref2[x1-1][y1-1]) + d*b;

        cout << ans << " ";
    }

    cout << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

signed main(){
    fastIO;
    int n, m;
    cin>>n>>m;
    int arr[n];
    for(int i=0; i<n; i++)
    {
        cin>>arr[i];
    }

    for(int i=0; i<n-1; i++)
    {
        arr[i+1] = max(arr[i+1], arr[i] - m);
    }

    for(int i=n-1; i>=1; i--)
    {
        arr[i-1] = max(arr[i-1], arr[i] - m);
    }

    for(int i:arr) cout<<i<<" ";

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



signed main(){
    fastIO;
    int n, c;
    cin >> n >> c;
    int prev = INT_MIN, ans = 0;
    for(int i=0; i<n; i++)
    {
        int x;
        cin >> x;
        if(x - prev >= c) 
        {
            ans++;
            prev = x;
        }
    }

    cout << ans << endl;
    
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

const int MOD = 998244353;

int abModm(int a, int b, int m){
    a%=m;
    int res = 1;
    while (b > 0) {
        if (b & 1)
            res = (res * a)%m;
        a = (a * a)%m;
        b >>= 1;
    }
    return res;
}

int InverseModulo(int a, int p){

    int q = p-2;

    int res = 1;
    while (q > 0) {
        if (q & 1)
            res = (res * a)%p;
        a = (a * a)%p;
        q >>= 1;
    }
    return res%p;
}

signed main(){
    fastIO;
    int n;
    cin >> n;
    int arr[6];
    set<int> s;

    map<int, int> freq;

    for(int i=0; i<n; i++)
    {

        for(int j=0; j<6; j++) 
        {
            cin >> arr[j];
        }

        sort(arr, arr+6);

        if(freq.find(arr[5]) == freq.end())
        {
            if(s.size() && s.lower_bound(arr[5]) != s.begin())
            {
                auto ptr = s.lower_bound(arr[5]);
                ptr--;

                freq[arr[5]] = freq[*ptr]*6;
                freq[arr[5]] %= MOD;
            }
            else freq[arr[5]] = 6;
        }
        else 
        {
            freq[arr[5]] *= 6;
            freq[arr[5]] %= MOD;
        }

        // cout << freq[4] << endl;

        for(int i=4; i>=0; i--)
        {
            if(arr[i] != arr[i+1])
            {
                if(freq.find(arr[i]) == freq.end())
                {
                    if(s.size() && s.lower_bound(arr[i]) != s.begin())
                    {
                        auto ptr = s.lower_bound(arr[i]);
                        ptr--;
                        freq[arr[i]] = i+1;
                        freq[arr[i]] *= freq[*ptr];
                        freq[arr[i]] %= MOD;
                    }
                    else freq[arr[i]] = i+1;
                }
                else 
                {
                    freq[arr[i]] *= (i+1);
                    freq[arr[i]] %= MOD;
                }
            }
        }

        for(int i: arr) s.insert(i);




    }

    for(pair<int, int> p: freq)
    {
        cout << p.first << " " << p.second << endl;
        
    }


}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;


void solve(){
    lli n, h;
    cin>>n>>h;
    lli arr[n];
    for(lli i=0; i<n; i++) cin>>arr[i];
    if(n==1)
    {
        cout<<h<<endl;
        return;
    }
    lli diff[n-1];
    for(lli i=0; i<n-1; i++)
    {
        diff[i] = arr[i+1] - arr[i];
    }
    sort(diff, diff + n - 1);
    lli psum[n];
    psum[0] = 0;
    for(lli i=1; i<n; i++)
    {
        psum[i] = psum[i-1] + diff[i-1];
    }
    


    lli index = lower_bound(psum, psum+n, h) - psum;
    lli k = INT64_MAX;

    for(lli i = 0; i<n; i++)
    {
        lli a = (h-psum[i] + n - i-1)/(n-i);
        
        if((i!=0) && (i != n-1) && (a >= diff[i-1] && a <= diff[i]))
            k = min(k, a);
        if(i==0 && a <= diff[i]) k = min(k, a);;
        if(i == n-1 && a >= diff[i-1]) 
        {
            k = min(k, a);
        }
    }

    cout<<k<<endl;
    

}

int main(){
   
    fastIO;
    lli t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

map<int, int> mp = {{0, 2}, {1, 3}, {2, 0}, {3, 1}};
string dirs = "LDRU";
vector<vector<int>> adj;
vector<pair<int, int>> ans;
int len = 30;

bool dfs(int u, int p, char dir)
{
    int i = 0;
    bool a = 1;

    for(int v: adj[u])
    {
        if(v != p)
        {
            if(dirs[mp[i]] == dir) i++;

            if(i >= 4) 
            {
                return 0;
            }

            int inc = (1LL<<len);

            if(dirs[i] == 'L') ans[v] = {ans[u].first - inc, ans[u].second};
            else if(dirs[i] == 'D') {ans[v] = {ans[u].first, ans[u].second - inc};}
            else if(dirs[i] == 'R') {ans[v] = {ans[u].first + inc, ans[u].second};}
            else ans[v] = {ans[u].first, ans[u].second + inc};
            len--;

            a &= dfs(v, u, dirs[i]);
            i++;
        }
    }
    return a;
}


signed main(){
    fastIO;
    int n;
    cin >> n;
    adj.resize(n);
    ans.resize(n);

    ans[0] = {0, 0};

    for(int i=0; i<n-1; i++)
    {
        int u, v;
        cin >> u >> v;
        v--, u--;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    if(dfs(0, -1, 'a')) cout << "YES\n";
    else 
    {
        cout << "NO\n";
        return 0;
    }

    for(pair<int, int>p: ans)
    {
        cout << p.first << " " << p.second << endl;
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    int arr[n];
    for(int i=0; i<n; i++) cin>>arr[i];
    sort(arr, arr+n);
    vector <int> freq;
    int f = 1;
    for(int i=0; i<n; i++){
        
        if(i != n-1 && arr[i] == arr[i+1]) f++;
        else {
            freq.push_back(f);
            f = 1;
        }
    }
    sort(freq.begin(), freq.end(), greater<int>());
    lli sum=0, maxx=0;
    for(int i=0; i<freq.size(); i++){
        sum += freq[i];
        if((i == freq.size()-1) || (i != freq.size()-1 && freq[i] != freq[i+1])){
            maxx = max(maxx, lli((i+1)*freq[i]));
        }
    }
    cout<<sum-maxx<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



void solve()
{
    string s;
    cin >> s;
    
    bool no = 1;

    int c1=0, c2=0;

    for(int i=0; i<s.size()-1; i++)
    {
        c1 += (s[i] == '(');
        c2 += (s[i] == ')');    
        if(c1 == c2) no = 0;
    }

    cout << (no?"NO\n":"YES\n");
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

const int MOD = 1e9+7;
const int inv2 = 500000004;

void solve(){
    int n, ans=0, i;
    cin >> n;
    string s;
    cin >> s;

    for(i=s.size()-1; i>0; i--) ans = ((ans+(s[i] != '0'))*inv2)%MOD;
    
    cout << ans + s.size() - 1 << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    int arr[n], l[n], r[n], ans = 0;
    

    for(int i=0; i<n; i++) cin>>arr[i];

    for(int i=0; i < n; i++)
    {
        l[i] = arr[i] + i;
        r[i] = arr[i] - i;
    }
    int lmax[n+1], rmax[n+1];
    lmax[0] = 0, rmax[n] = INT_MIN;

    for(int i=1; i<=n; i++)
    {
        lmax[i] = max(lmax[i-1], l[i-1]);
        rmax[n-i] = max(rmax[n - i + 1], r[n-i]);
    }

    for(int i = 0; i<n; i++)
    {
        ans = max(ans, arr[i] + lmax[i] + rmax[i+1]);
    }

    cout<<ans<<endl;
    
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;

int mex(int arr[], int start, int end)
{
    set<int>s;
    for(int i=start; i<=end; i++) s.insert(arr[i]);

    int i = 0;
    for(int j:s)
    {
        if(j != i) return i;
        i++;
    }
    
    
    return (*s.rbegin()) + 1;
}

void solve(){
    int n;
    cin>>n;
    int arr[n];
    for(int i=0; i<n; i++) cin>>arr[i];
    
    int m = mex(arr, 0, n-1);
    vector<bool>done(m, 0);
    

    int small = 0;
    int ind;

    for(int i=0; i<n; i++)
    {
        

        if(arr[i] < m && !done[arr[i]])
        {
            done[arr[i]] = 1;
            small++;
        }

        if(small == m) 
        {
            ind = i;
            break;
        }
    }

    
    
    if(ind+1 <= n-1 && mex(arr, ind+1, n-1) == m)
    {
        cout<<2<<endl;
        cout<<1<<" "<<ind+1<<endl<<ind+2<<" "<<n<<endl;
    }
    else cout<<-1<<endl;
    

}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



signed main(){
    fastIO;
    int a, b;
    cin >> a >> b;
    int i = a/b;

    int ans = i;

    int minn = INT_MAX;

    for(int ii=-5; ii<=5; ii++)
    {
        if(abs(b*(i+ii)-a) < minn)
        {
            minn = abs(b*(i+ii)-a);
            ans = i+ii;
        }
    }

    cout << ans << endl;

}

#include <bits/stdc++.h>
using namespace std;
#define int long long
int t;

void solve(int tc){
    int n, odd_max = 0, even = 0, odd = 0;
    cin>>n;
    vector<int> ev;
    for(int i=0; i<n; i++)
    {
        int a;
        cin>>a;
        if(a&1)
        {
            odd++;
            odd_max = max(odd_max, a);
        }
        else{
            ev.push_back(a);
            even++;
        }
    }
    ev.push_back(0);
    sort(ev.begin(), ev.end());

    if(!(even*odd)) cout<<0<<"\n";
    else{
        for(int i=0; i < ev.size()-1; i++)
        {
            if(odd_max + ev[i] < ev[i+1])
            {
                cout<<even+1<<"\n";
                return;
            }
            else
            {
                odd_max += ev[i];
            }
        }
        cout<<even<<"\n";
    }
    
}

signed main(){
    
    cin>>t;
    for(int tc = 1; tc<=t; tc++){
        solve(tc);
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    string a, b;
    bool inf=0;
    long long int x=1;
    cin>>a>>b;
    if(b == "1"){
        cout<<1<<endl;
    }
    else{
        for(int i=0; i<b.length(); i++){
            if(b[i]=='1'){
                inf = 1;
                break;
            }
        }
        if(inf){
        cout<<-1<<endl;
    }
    else{
        for(int i=0; i<a.length(); i++){
            x *= 2;
        }
        cout<<x<<endl;
    }
    } 
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int x, y, z;
    cin >> x >> y >> z;

    if(x == z+1 && y == 0)
    {
        cout << "Yes\n";
        return;
    }

    cout << (x > z ? "No\n" : "Yes\n");
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n;
    cin>>n;
    long long int a[n], b[n];
    bool yes=true;
    for(int i=0; i<n; i++){
        cin>>a[i];
        b[i] = a[i];
    }
    sort(a, a+n);
    for(int i=0; i<n; i++){
        if((a[i] + b[i])%2 == 1 ){
            yes = false;
            break;
        }
    }
    if(yes){
        cout<<"YES"<<endl;
    }
    else{
        cout<<"NO"<<endl;
    }

}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
int n, x=0;
cin>>n; 
   for(int i=0; i<n; i++){
    int a;
    cin>>a;
    if(i==0){
        x = 3*a;
    }
    else{
        x = max(x, a+1);
    }
   }
   if(x%2==0){
    cout<<x<<endl;
   }
   else{
    cout<<x+1<<endl;
   }
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

signed main(){
    fastIO;
    int n, start = 0;
    cin>>n;
    int arr[n];
    for(int i=0; i<n-1 ;i++) cin>>arr[i];

    for(int i = 0; i<=32; i++)
    {
        int no = 0;
        int b = 1LL<<i;
        for(int j = 0; j<n; j++)
        {
            if((j>>i)&1) no++;
        }
        for(int j=0; j < n-1; j++)
        {
            if((b>>i)&1) no--;
            b ^= arr[j];
        }
        if((b>>i)&1) no--;
        if(no == 0) start += 1LL<<i;
    }

    for(int i=0; i<n-1; i++)
    {
        cout<<start<<" ";
        start ^= arr[i];
     
    }

   cout<<start<<"\n";

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

string bin(long long int x){
    string ans = "";
    while(x!=0){
        ans = to_string(x%2) + ans;
        x /= 2;
    }
    return ans;
}


void solve(){
    long long int a, b, r, g = 0, ans;
    cin>>a>>b>>r;
    ans = r;
    if(b>a){
        long long int c = a;
        a = b;
        b = c;
    }
    string bina = bin(a);
    string binb = bin(b);
    int l = binb.length();
    for(int i=0; i<bina.length()-l; i++){
        binb = "0" + binb;
    }
    bool co = 1;
    long long int p = pow(2, bina.length()-1);
    
    for(int i=0; i<bina.length(); i++){
        
        if(bina[i]=='1' && binb[i]=='0' && r >= p && co==0){

            bina[i]='0';
            binb[i]='1';
            r -= p;
        }
        if(bina[i]=='1' && binb[i]=='0' && co==1){
            /*if(r>=p){
            bina[i] = '0';
            binb[i] = '0';
            if(binb>bina && binb.length()==bina.length()){
                bina[i] = '1';
            }
            else{
                binb[i] = '1';
                string ca = bina;
                bina = binb;
                binb = ca;
                r -= p;
            }}*/
            co = 0;
        }
        p/=2;
        if(r==0){
            break;
        }
        
    }
    g = ans-r;
    //cout<<g<<endl;
cout<<abs((a^g)-(b^g))<<endl;

    
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



void solve()
{
    int x, y, k;
    cin >> x >> y >> k;

    int a = x/gcd(x, y);
    int b = y/gcd(x, y);

    int N = max(a, b) + 1;

    vector<int> dp(N, -1);

    
    function <int(int)> ans = [&](int val) -> int
    {
        int anss = INT_MAX;
        if(dp[val] != -1) return dp[val];
        if(val == 1) return 0;

        for(int i=1; i*i<=val && i <= k; i++)
        {
            if(val%i == 0) 
            {
                if(i != 1)
                {
                    int ans1 = ans(val/i);
                    if(ans1 != -1) anss = min(1+ans1, anss);
                }
                if(val/i <= k)
                {
                    int ans1 = ans(i);
                    if(ans1 != -1) anss = min(1+ans1, anss);
                }
            }
        }

        return dp[val] = (anss == INT_MAX? -1: anss);
    };


    int aa = ans(a);
    int bb = ans(b);

    if(aa == -1 || bb == -1) cout << -1 << endl;
    else cout << ans(a) + ans(b) << endl;

}

signed main()
{
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

signed main(){
    fastIO;
    int n;
    cin >> n;
    int dp[n+1];
    dp[0] = 0;

    for(int i=1; i<=n; i++)
    {
        int nn = i;
        int a = INT64_MAX;

        while(nn != 0)
        {
            if(nn%10 != 0) a = min(a, dp[i - nn%10]);
            nn /= 10;
        }
        dp[i] = 1+a;
    }

    cout << dp[n];

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

void solve(){
    int n, m;
    cin>>n>>m;
    cout<<n*(m/2)<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



void solve(){
    int n;
    cin >> n;

    cout << 2*n-3 << endl;

    cout << 1 << " " << 2 << " " << n << endl;

    for(int i=2; i<n-1; i++) cout << i  << " 1 " << i << "\n" << i << " " << i+1 << " " << n << endl;

    cout << n-1 << " " << 1 << " " << n-1 << endl;

    cout << n << " 1 " << n << endl;


}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



void solve(){
    int n;
    cin >> n;
    int arr[n];
    for(int i=0; i<n; i++)
    {
        cin >> arr[i];
    }

    for(int i=0; i<n; i++)
    {
        int a = arr[i] - (i+1);
        if(a != 0 &&  a != 1 && a != -1)
        {
            cout << "NO\n";
            return;
        }
    }
    cout << "YES\n";
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n, k, diff, c=INT_MAX;
    cin>>n>>k;
    int arr[n];
    for(int i=0; i<n; i++){
        cin>>arr[i];
    }
    int prev_pos[k], max_sec[k][2];
    memset(prev_pos, 0, sizeof(prev_pos));
    memset(max_sec, 0, sizeof(max_sec[0][0])*k*2);

    for(int i=1; i<n; i++){
            if(prev_pos[arr[i]-1]==0){
            diff = i - prev_pos[arr[i]-1];
            }
            else{
                diff = i - prev_pos[arr[i]-1]-1;
            }
            if(diff>max_sec[arr[i]-1][0]){
                max_sec[arr[i]-1][0] = diff;
            }
            if(diff>max_sec[arr[i]-1][1] || diff<=max_sec[arr[i]-1][0]){
                max_sec[arr[i]-1][1] = diff;
        }
        prev_pos[arr[i]-1] = i;
    }
    for(int i=0; i<k; i++){
        if(max(max_sec[i][0]/2, max_sec[i][1])<c){
            c = max(max_sec[i][0]/2, max_sec[i][1]);
        }
    }
    cout<<c<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
    
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

#define int unsigned long long 

int tc;

void solve(){
    int n, m;
    cin >> n >> m;

    vector<vector<int>> adj(n);
    vector<int> visited(n, 0);
    vector<int> depth(n, 0);

    for(int i=0; i<m; i++)
    {
        int u, v;
        cin >> u >> v;
        u--, v--;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    int ans = 1;

    function <void(int, int)> dfs = [&](int u, int p)
    {
        visited[u] = 1;
        for(int v: adj[u])
        {
            if(!visited[v])
            {
                depth[v] = depth[u]+1;
                dfs(v, u);
            }
            else if(v != p && depth[v] < depth[u]) {ans *= (depth[u] - depth[v] + 1);}
        }
    };

    dfs(0, -1);

    cout << "Case " << tc << ": " << ans << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    for(tc=1; tc<=t; tc++)
    {
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    lli n;
    lli ans = 1;
    cin>>n;
    while(n!=0){
        ans *= ((n%10 + 1) * (n%10 + 2))/2;
        n /= 10;
    }
    cout<<ans<<"\n";
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

const int MOD = 1e9+7;

signed main(){
    fastIO;
    int n;
    cin>>n;
    int sign = ((n%2 == 0) ? 1 : -1);
    int val = 1, ans = 0;
    for(int i=0; i<=n; i++)
    {
        ans += sign * val;
        sign *= -1;
        val *= (n-i);
        val %= MOD;
        ans = (ans + MOD)%MOD;
    }

    cout<<(ans+MOD)%MOD<<endl;

}

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int, int> pi;

void solve()
{

    string s1, s2;
    int t, q, diff = 0;
    cin >> s1 >> s2 >> t >> q;

    queue<int> block_list;

    for (int i = 0; i < t; i++)
    {
        block_list.push(-1);
    }

    for (int i = 0; i < s1.length(); i++)
    {
        diff += abs(s1[i] - s2[i]);
    }

    for (int querry = 1; querry <= q; querry++)
    {
        int type;
        cin >> type;

        if (block_list.front() != -1)
        {
            diff += abs(s1[block_list.front() - 1] - s2[block_list.front() - 1]);
        }

        if (type == 1)
        {
            int block;
            cin >> block;

            diff -= abs(s1[block - 1] - s2[block - 1]);
            block_list.push(block);
        }
        else
        {
            block_list.push(-1);
        }

        if (type == 2)
        {
            int from, pos1, to, pos2;

            cin >> from >> pos1 >> to >> pos2;

            if (from == 1 && to == 1)
            {
                diff -= abs(s1[pos1 - 1] - s2[pos1 - 1]) + abs(s1[pos2 - 1] - s2[pos2 - 1]);
                diff += abs(s1[pos2 - 1] - s2[pos1 - 1]) + abs(s1[pos1 - 1] - s2[pos2 - 1]);
                swap(s1[pos1 - 1], s1[pos2 - 1]);
            }
            else if (from == 2 && to == 2)
            {
                diff -= abs(s1[pos1 - 1] - s2[pos1 - 1]) + abs(s1[pos2 - 1] - s2[pos2 - 1]);
                diff += abs(s1[pos1 - 1] - s2[pos2 - 1]) + abs(s1[pos2 - 1] - s2[pos1 - 1]);
                swap(s2[pos1 - 1], s2[pos2 - 1]);
            }
            else if (from == 1 && to == 2)
            {

                if (pos1 != pos2)
                {
                    diff -= abs(s1[pos1 - 1] - s2[pos1 - 1]) + abs(s1[pos2 - 1] - s2[pos2 - 1]);
                    diff += abs(s2[pos2 - 1] - s2[pos1 - 1]) + abs(s1[pos1 - 1] - s1[pos2 - 1]);
                }

                swap(s1[pos1 - 1], s2[pos2 - 1]);
            }
            else if (from == 2 && to == 1)
            {
                if (pos1 != pos2)
                {
                    diff -= abs(s1[pos1 - 1] - s2[pos1 - 1]) + abs(s1[pos2 - 1] - s2[pos2 - 1]);
                    diff += abs(s1[pos1 - 1] - s1[pos2 - 1]) + abs(s2[pos1 - 1] - s2[pos2 - 1]);
                }
                swap(s1[pos2 - 1], s2[pos1 - 1]);
            }
        }

        if (type == 3)
        {
            if (diff == 0)
                cout << "YES\n";
            else
                cout << "NO\n";
        }

        block_list.pop();
    }
}

int main()
{
    fastIO;
    int t;
    cin >> t;
    while (t--)
    {
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

const int N = 500;

vector<pair<int, int>> v;
vector<int> fuind(1004004), futind(1004004);

bool cmp(pair<int, int> &p1, pair<int, int> &p2)
{
    if(p1.first + p1.second + 2*(p1.first%3 == 2)*(p1.second%3 == 2) < p2.first + p2.second + 2*(p2.first%3 == 2)*(p2.second%3 == 2)) return 1;
    if(p1.first + p1.second + 2*(p1.first%3 == 2)*(p1.second%3 == 2) > p2.first + p2.second + 2*(p2.first%3 == 2)*(p2.second%3 == 2)) return 0;
    if(p1.first < p2.first) return 1;
    if(p1.first > p2.first) return 0;
    if(p1.second < p2.second) return 1;
    return 0;
}

void solve(){
    int n;
    cin >> n;
    int arr[n];

    int fu = 0, fut = 0;

    vector<bool> visited(1004004, 0);

    for(int i=0; i<n; i++)
    {
        int a;
        cin >> a;
        if(a)
        {
            while(visited[fu]) fu = fuind[fu];
            visited[fu] = 1;
            cout << v[fu].first << " " << v[fu].second << endl;
            fu = fuind[fu];
        }
        else 
        {
            while(visited[fut]) fut = futind[fut];
            visited[fut] = 1;
            cout << v[fut].first << " " << v[fut].second << endl;
            fut = futind[fut];
        }
    }
}

signed main()
{

    int prev = -1;

    for(int i=0; i<=N; i++)
    {
        for(int j=0; j<=N; j++)
        {
            v.push_back({3*i+1, 3*j+1});
            v.push_back({3*i+1, 3*j+2});
            v.push_back({3*i+2, 3*j+1});
            v.push_back({3*i+2, 3*j+2});
        }
    }

    sort(v.begin(), v.end(), cmp);

    for(int i = 1004003; i>=0; i--)
    {
        fuind[i] = i+1;
        futind[i] = prev;
        if(v[i].first%3 == 1 && v[i].second%3 == 1) prev = i;
    }

    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


lli base_9(lli n){
    lli mul = 1, ans = 0;
    while(n != 0){
        int digit = n % 9;
        if(digit>=4) digit++;
        ans += digit*mul;
        mul *= 10;
        n/=9;
    }
    return ans;
}


void solve(){
    lli k;
    cin>>k;
    cout<<base_9(k)<<"\n";
    
    
    
}

int main(){
    
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    int arr[n];
    for(int i=0; i<n; i++) cin>>arr[i];
    sort(arr, arr+n);
    int c = 1, ans = 0;
    for(int i=0; i<n-1; i++)
    {
        if(arr[i] == arr[i+1]) c++;
        else 
        {
            ans = max(ans, c);
            c = 1;
        }
    }
    ans = max(ans, c);
    cout<<n-ans<<endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;

const lli N = 1e6 + 10;


int main(){
 
    fastIO;
    lli n, ans = 0;
    cin>>n;
    bool element[N];
    memset(element, 0, sizeof(element));
    for(lli i=0; i<n; i++)
    {
        lli x;
        cin>>x;
        element[x] = 1;
    }
    for(lli i = 1; i<N; i++)
    {
        bool first = 1;
        lli g;
        for(lli j = i; j<N; j+=i)
        {
            if(element[j] && first)
            {
                g = j;
                first = 0;
            }
            else if(element[j])
            {
                g = __gcd(g, j);
            }
        }
        if(first) g = 1;
        if(g == i) ans++;
    }
    cout<<ans - n;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


int ind_bin_search(vi v, int len, int k){
    int l = 0, r = len-1;
    int m = (l+r)/2;
    while(l != r){
        if(v[m] == k) return m;
        if(r-l==1){
            if(v[r]<=k) return r;
            else return l;
            }
        if(v[m] > k ){
            r = m-1;
        }
        else{
            l = m;
        }
    m = (l+r)/2;
    }
    return m;
}

void solve(){
    int n;
    cin>>n;
    vi ind, arr;
    for(int i=1; i<n+1; i++){
        int a;
        cin>>a;
        if(a>i){
            ind.push_back(i);
            arr.push_back(a);
        }
    }
    sort(arr.begin(), arr.end());
    int ans = 0;
    for(int i:ind){
        ans += size(arr) - ind_bin_search(arr, size(arr), i);
    }
    cout<<ans<<endl;
    
}

int main(){
    fastIO;
    vector <int> v;
    for(int i=0; i<5; i++){
        int a;
        cin>>a;
        v.push_back(a);
    }
    cout<<ind_bin_search(v, 5, 2);
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;
#define int long long

void solve() {
    int n, s;
    cin >> n >> s;

    set<pair<int, int>> c = {
        {0, 0}, {0, s}, {s, 0}, {s, s}
    };

    int count = 0;

    while (n--) {
        int dx, dy, x, y;
        cin >> dx >> dy >> x >> y;

        int add = 0;

        for (auto [cx, cy] : c) {
            int deltaX = x - cx;
            int deltaY = y - cy;

            if (abs(deltaX) == abs(deltaY)) {
                
                if (deltaX * dy == deltaY * dx)
                    add=1;
            }
        }
        count += add;
    }

    cout << count << "\n";
}

signed main() {
    int t;
    cin >> t;
    while (t--) solve();
}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve()
{
    int n, k;
    cin >> n >> k;
    int p[n], d[n];

    set<int> pos;
    map<int, int> ind;

    for(int i=0; i<n; i++) 
    {
        cin >> p[i];
        pos.insert(p[i]);
        ind[p[i]] = i;
    }

    for(int i=0; i<n; i++) cin >> d[i];

    int diff[n];

    for(int i=0; i<n; i++)
    {
        diff[i] = d[i]-p[i];
        diff[i] %= k;
        diff[i] = (diff[i] + k)%k;
    }

    set<int> s;



    vector<vector<int>> first(n, vector<int>(k, -1));


    for(int i=n-1; i>=0; i--)
    {
        if(i != n-1) first[i] = first[i+1];
        first[i][((-d[i] + p[i])%k + k)%k] = i;
    }



    map<int, int> mp1;

    int right[n], left[n];
    memset(right, -1, sizeof(right));
    memset(left, -1, sizeof(left));

    for(int i=0; i<n; i++)
    {
        if(mp1.find((d[i] + p[i])%k) != mp1.end()) left[i] = mp1[(d[i] + p[i])%k];
        mp1[((d[i] + p[i])%k + k )% k] = i;
    }

    mp1.clear();


    for(int i = n-1; i>=0; i--)
    {
        if(mp1.find(((d[i] - p[i])%k + k )%k) != mp1.end()) right[i] = mp1[((d[i] - p[i])%k + k )%k];
        mp1[((d[i] - p[i])%k + k )%k] = i;
    }

    


    bool ans[n];
    memset(ans, 0, sizeof(ans));
    ans[0]=1;



    for(int i=1; i<n; i++)
    {
        int lef = 1;
        int ind = i;

        vector<vector<bool>> visited(n, vector<bool>(2, 0));

        while(1)
        {

            if(visited[ind][lef]) break;
            visited[ind][lef] = 1;

            if(lef) ind = left[ind];
            else ind = right[ind];

            lef = 1-lef;

            if(ind == -1)
            {
                ans[i] = 1;
                break;
            }
        }
    }

    int q;
    cin >> q;

    while(q--)
    {
        int a;
        cin >> a;

        if(pos.lower_bound(a) == pos.end()) cout << "YES\n";
        else 
        {
            int index = ind[*pos.lower_bound(a)];
            if(first[index][a%k] == -1) cout << "YES\n";
            else cout << (ans[first[index][a%k]] ? "YES\n" : "NO\n");
        }
    }
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

signed main(){
    fastIO;
    int n;
    cin >> n;
    n++;
    int a[n], b[n], ans = 0;
    for(int i=0; i<n; i++) cin >> a[i];
    for(int i=0; i<n; i++) cin >> b[i];

    for(int i=n-1; i>=1; i--)
    {
        if(b[i] > a[i])
        {
            int transfer = (b[i] - a[i] + 1)/2;
            ans += transfer;
            a[i-1] -= transfer;
        }
    }

    cout << (b[0] > a[0] ? -1 : ans);

}

/*#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    int a[n], b[n];
    for(int i=0; i<n; i++) cin>>a[i];
    for(int i=0; i<n; i++) cin>>b[i];
    int i=0, ans=0;
    for(int j=0; j<n; j++)
    {
        if(a[i]>b[j])
        {
            ans++;
            i--;
        }
        i++;
    }
    cout<<ans<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}*/

#include <stdio.h>
#include <stdlib.h>
#define ROWS 4
#define COLS 70
int main() {
char q[ROWS][COLS] = {
"To be, or not to be, that is the question.", "Love all, trust a few, do wrong to none.",
"We know what we are, but know not what we may be.", "This above all: to thine own self be true."
};


char *p[5];
p[0] = &q[1][5]; p[1] = &q[0][7]; p[2] = &q[3][5]; p[3] = &q[2][3];
for (int i = 0; i < ROWS; i++) { for(int j = 0; j < 2; j++) putchar(p[i][j]); }
for (int i = 0; i < ROWS; i++) { for(int j = 0; j < 2; j++) putchar(q[i][j]); }
//putchar(’\n’);
return 0;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, m, k, ans = 0;
    string s;
    cin >> n >> m >> k >> s;

    int z = 0;

    for(int i=0; i<n; i++)
    {
        if(s[i] == '0') z++;
        else 
        {
            ans += z/(m+k-1);
            if(z % m+k-1 >= m) ans++;
            z = 0;
        }
    }

    ans += z/(m+k-1);
    if(z % m+k-1 >= m) ans++;
    
    cout << ans << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, m, k;
    cin >> n >> m >> k;

    int ans[n][m];

    if(m%k)
    {
        for(int i=0; i<n; i++)
        {
            for(int j=0; j<m; j++)
            {
                cout << ((i*m+j+1)%k == 0?k:(i*m+j+1)%k) << " ";
            }
            cout << endl;
        }
    }
    else
    {
        for(int i=0; i<n; i++)
        {
            for(int j=0; j<m; j++)
            {
                if(i%2) cout << ((i*m+j+1)%k == 0?k:(i*m+j+1)%k) << " ";
                else cout << ((i*m+j)%k == 0?k:(i*m+j)%k) << " ";

            }
            cout << endl;
        }
    }

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

void solve(){
    int n, m;
    cin>>n;
    int arr[n], min0[n], minl[n];
    for(int i=0; i<n; i++){
        cin>>arr[i];

    }
    cin>>m;
    minl[n-1] = 0;
    minl[n-2] = 1;
    min0[0]=0;
    min0[1] = 1;
    for(int i=1; i<n-1; i++){
        if(arr[i+1]-arr[i]>arr[i]-arr[i-1]){
            min0[i+1] = min0[i]+arr[i+1]-arr[i];
        }
        else{
            min0[i+1] = min0[i]+1;
        }
    }

    for(int i=n-2; i>0; i--){
        if(arr[i+1]-arr[i]>arr[i]-arr[i-1]){
            minl[i-1] = minl[i]+1; 
        }
        else{
            minl[i-1] = minl[i] + arr[i]-arr[i-1];
        }
    }
    
    

   
    for(int i=0; i<m; i++){
        int x, y;
        cin>>x>>y;
        if(x<y){
            cout<<min0[y-1]-min0[x-1]<<endl;
        }
        else{
            cout<<minl[y-1]-minl[x-1]<<endl;
        }
        
    }


}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    
    
}


int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int a, b;
    cin>>a>>b;
    if((a+b)%2==1){
        cout<<"Alice"<<endl;
    }
    else{
        cout<<"Bob"<<endl;
    }
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve()
{
    int n, a;
    cin >> n;

    cout << "mul 999999999" << endl;
    cin >> a;

    cout << "digit" << endl;
    cin >> a;

    if(n != 81)
    {
        cout << "add " << n-81 << endl;
        cin >> a;
    }

    cout << "!" << endl;
    cin >> a;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

// #include <bits/stdc++.h>
// #define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
// using namespace std;
// #define int long long 


// void solve(){
//     int a, b;
//     cin>>a>>b;
//     for(int i=2; i*i<=max(a, b); i++)
//     {
//         if(a%i == 0 || b%i == 0) 
//         {
//             cout<<i*(max(a, b))<<endl;
//             return;
//         }
//     }
//     if(a == 1 || b == 1) cout<<a*a*b*b<<endl;
//     else cout << a*b << endl;
// }

// signed main(){
//     fastIO;
//     int t;
//     cin>>t;
//     while(t--){
//         solve();
//     }
// }


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

int big(int n)
{
    int c = 1;
    while(n!=1)
    {
        n/=2;
        c++;
    }
    return c;
}

void solve(){
    int n, x;
    cin>>n>>x;
    int arr[n], len = 0, orr = 0;
    for(int i=0; i<n; i++)
    {
        cin>>arr[i];
        //if(big(x) > big(arr[i])) len++;
    }
    sort(arr, arr+n);
    for(int i=0; i<n; i++)
    {
        if((orr|arr[i]) > x)
        {
            i++;
        }
        else 
        {
            orr |= arr[i];
            len++;
        }
    }

    cout<<len<<endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;


int main(){
    fastIO;
    long long int n, sum = 0, prev;
    cin>>n;
    long long int a;
    cin>>a;
    prev = a;
    for(long long int i=0; i<n-1; i++){
        long long int a;
        cin>>a;
        if(a<prev) sum += prev - a;
        else prev = a;
    }
    cout<<sum;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


signed main()
{
    fastIO;
    int a, b, c, d;
    cin >> a >> b >> c >> d;
    if(a > c) cout << "Yes\n";
    else if(a == c && b > d) {cout << "Yes\n";}
    else cout << "No\n";
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
const int N = 2e5+10;
const int MOD = 1e9+7;

int arr[N];
 
void solve(){
    string n;
    int mod = 1e9+7;
 
    int m, sum = 0;
    cin>>n>>m;
    for(char c:n){
        sum=(sum+arr[c-'0'-1+m])%mod;
    }
    cout<<sum<<endl;
}
 
int main(){
    fastIO;
    for(int i=0; i<9; i++){
        arr[i] = 1;
    }
    arr[9] = 2;
    for(int i=10; i<N; i++){
        arr[i] = (arr[i-9]+arr[i-10])%MOD;
    }
    //cout<<arr[N-1];
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int l = 1, r = 1000, a, b, ar;
    
    while(r - l > 1)
    {
        a = (2*l+r)/3;
        b = (2*r+l)/3;

        cout<<"? "<<a<<" "<<b<<endl;
        cin>>ar;

        if(ar == a*b)
        {
            l = b;
        }
        else if(ar == a*(b+1))
        {
            r = b;
            l = a;   
        }
        else
        {
            r = a;
        } 
    }
    cout<<"! " << r << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--)
    {
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int, int> pi;

class DSU
{

    vector<int> baap;
    vector<int> sadasya;

public:
    vector<vector<int>> adj;
    DSU(int n)
    {
        baap.resize(n, -1);
        sadasya.resize(n, 0);
        adj.resize(n);
        for (int i = 0; i < n; i++)
        {
            baap[i] = i;
            sadasya[i] = 1;
            adj[i].push_back(i);
        }
    }

    int dada(int insaan)
    {
        if (insaan == baap[insaan])
            return insaan;

        return baap[insaan] = dada(baap[insaan]);
    }

    void shaadi(int u, int v)
    {
        u = dada(u);
        v = dada(v);
        if (u == v)
            return;
        if (sadasya[v] < sadasya[u])
        {
            swap(u, v);
        }

        for (int i : adj[u])
            adj[v].push_back(i);
        adj[u].clear();

        baap[u] = v;
        sadasya[v] += sadasya[u];
    }

    int kitne_sadasya(int u)
    {
        return sadasya[dada(u)];
    }
};

int main()
{
    fastIO;
    int n, m1, m2;
    cin >> n >> m1 >> m2;

    DSU gaon1(n + 1), gaon2(n + 1);
    vector<pi> ans;

    for (int i = 0; i < m1; i++)
    {
        int u, v;
        cin >> u >> v;
        gaon1.shaadi(u, v);
    }

    for (int i = 0; i < m2; i++)
    {
        int u, v;
        cin >> u >> v;
        gaon2.shaadi(u, v);
    }

    int l = 1, r = 1;

    for (int v = 2; v <= n; v++)
    {
        if (gaon1.dada(l) != gaon1.dada(v) && gaon2.dada(l) != gaon2.dada(v))
        {
            gaon1.shaadi(l, v);
            gaon2.shaadi(l, v);
            ans.push_back(make_pair(l, v));
        }
    }

    while (l <= n)
    {

        while (gaon1.dada(l) == gaon1.dada(1))
        {
            l++;
            if (l >= n + 1)
                break;
        }

        while (gaon2.dada(r) == gaon2.dada(1))
        {
            r++;
            if (r >= n + 1)
                break;
        }

        if (l >= n + 1)
            break;
        if (r >= n + 1)
            break;
        

        if (gaon1.dada(l) != gaon1.dada(r) && gaon2.dada(l) != gaon2.dada(r))
        {
            gaon1.shaadi(l, r);
            gaon2.shaadi(l, r);
            ans.push_back(make_pair(l, r));
        }
    }

    cout << ans.size() << endl;

    for (pi p : ans)
    {
        cout << p.first << " " << p.second << endl;
    }
}

#include <bits/stdc++.h>
using namespace std;



void solve(){
    long long int n, c=0;
    cin>>n;
    long long int arr[n][4];
    for(int i=0; i<n; i++){
        cin>>arr[i][0]>>arr[i][1]>>arr[i][2]>>arr[i][3];
    }
    for(int i=0; i<n; i++){
        for(int j=i+1; j<n; j++){
            if((arr[i][2]-arr[i][0])*(arr[j][3]-arr[j][1]) != (arr[j][2]-arr[j][0])*(arr[i][3]-arr[i][1])){
                c++;
            }
            else if(arr[i][0]==arr[j][0] && arr[i][1]==arr[j][1] && arr[i][2]==arr[j][2] && arr[i][3]==arr[j][3]){
                c++;
            }
        }
        }
    cout<<c<<endl;
    }


int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){

    string a, b, c;
    cin >> a >> b >> c;

    vector<vector<int>> dp(a.size() + 1, vector<int>(b.size() + 1, 0));

    for(int i=b.size() - 1; i>=0; i--)
    {
        if(b[i] == c[a.size() + i]) dp[a.size()][i] = dp[a.size()][i+1];
        else dp[a.size()][i] = 1 + dp[a.size()][i+1];
    }

    for(int i=a.size() - 1; i>=0; i--)
    {
        if(a[i] == c[b.size() + i]) dp[i][b.size()] = dp[i+1][b.size()];
        else dp[i][b.size()] = 1 + dp[i+1][b.size()];
    }

    for(int i=a.size()-1; i>=0; i--)
    {
        for(int j = b.size()-1; j>=0; j--)
        {
            if(a[i] == c[i+j] && b[j] == c[i+j]) dp[i][j] = min(dp[i+1][j], dp[i][j+1]);
            else if(a[i] != c[i+j] && b[j] == c[i+j]){ dp[i][j] = min(1 + dp[i+1][j], dp[i][j+1]); }
            else if(a[i] == c[i+j] && b[j] != c[i+j]){ dp[i][j] = min(dp[i+1][j], 1 + dp[i][j+1]); }
            else dp[i][j] = min(1 + dp[i+1][j], 1 + dp[i][j+1]); 
        }
    }

    cout << dp[0][0] << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



bool possible(int p, int s)
{
    int sq = sqrt(s);
    if(p%2) return 0;

    if(sq * sq == s && p >= 4*sq && p <= 2*(s+1)) return 1;
    else if(p >= 4*sq+4 - 2*(sq*(sq+1) == s) && p <= 2*(s+1)) return 1;

    return 0;
}


void solve(){

    int p, s;
    cin >> p >> s;


    int gcdd = gcd(p, s);

    p /= gcdd;
    s /= gcdd;

    for(int i=1; i*s <= 50000; i++)
    {
        if(possible(p*i, s*i))
        {
            p *= i, s *= i;
        
            cout << s << endl;

            for(int base = 1; base <= s; base++)
            {
                int height = p/2 - base;
                int rem = s - base - height + 1;

                if(rem >= height-1 && rem <= (base-1)*(height-1))
                {

                    int curr = base;
                    vector<int> v;
                    

                    for(int i=0; i<height; i++)
                    {
                        v.push_back(curr);
                        s -= curr;
                        curr = min(curr, s - height + i + 2);
                    }


                    for(int i=0; i<height; i++) for(int j=0; j<v[i]; j++) cout << i << " " << j << endl;
                    
                    return;
                }
            }
        }
    }

    cout << -1 << endl;

}

signed main(){
    fastIO;
    int t;
    // t=1;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

bool non_one(long long int arr[], int n){
    for(int i=0; i<n; i++){
        
        if(arr[i]==1){
            return false;
        }
    }
    return true;
}

bool yes(long long int arr[], int n){
    long long int one_sum=0, rest_sum=0;
    for(int i=0; i<n; i++){
        if(arr[i]==1){
            one_sum++;
        }
        else{rest_sum+=arr[i]-1;}
}
bool yes = rest_sum>=one_sum;
    return yes;
}

void solve(){
    int n;
    
    cin>>n;
    long long int arr[n];
    for(int i=0; i<n; i++){
        cin>>arr[i];
    }
    if(n==1){
        cout<<"NO"<<endl;
    }
    else if(non_one(arr, n)){
        
        cout<<"YES"<<endl;
    }
    else if(yes(arr, n)){
        cout<<"YES"<<endl;
    }
    else{
        cout<<"NO"<<endl;
    }


}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



void solve(){
    int n, m, l;
    cin >> n >> m >> l;
    int arr[l];

    vector<vector<int>> adj(n);

    vector<bool> visited(n, 0);
    vector<int> edist(n, INT_MAX);
    vector<int> odist(n, INT_MAX);


    for(int i=0; i<l; i++) cin >> arr[i];

    edist[0] = 0;

    for(int i=0; i<m; i++)
    {
        int u, v;
        cin >> u >> v;
        u--, v--;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    function <void(int)> dfs = [&](int u)->void
    {
        visited[u]=1;
        for(int v: adj[u])
        {
            if(!visited[v])
            {
                odist[v] = min(odist[v], edist[u]+1);
                edist[v] = min(edist[v], odist[u]+1);

                odist[u] = min(odist[u], edist[v]+1);
                edist[u] = min(edist[u], odist[v]+1);

                dfs(v);

                odist[v] = min(odist[v], edist[u]+1);
                edist[v] = min(edist[v], odist[u]+1);

                odist[u] = min(odist[u], edist[v]+1);
                edist[u] = min(edist[u], odist[v]+1);
            }
            else
            {
                odist[u] = min(odist[u], edist[v]+1);
                edist[u] = min(edist[u], odist[v]+1);

                odist[v] = min(odist[v], edist[u]+1);
                edist[v] = min(edist[v], odist[u]+1);
            }
        }
    };

    
    dfs(0);
    for(int j=0; j<n; j++) visited[j]=0;
    dfs(0);
    for(int j=0; j<n; j++) visited[j]=0;
    

    int sum = accumulate(arr, arr+l, (int)0);

    sort(arr, arr+l);

    int osum=0, esum=0;

    if(sum%2) osum = sum;
    else esum = sum;


    if(osum == 0)
    {
        for(int i=0; i<l; i++)
        {
            if((sum - arr[i])%2)
            {
                osum = sum - arr[i];
                break;
            }
        }
    }
    else
    {
        for(int i=0; i<l; i++)
        {
            if((sum - arr[i])%2 == 0)
            {
                esum = sum - arr[i];
                break;
            }
        }
    }




    for(int i=0; i<n; i++)
    {
        if(odist[i] <= osum || edist[i] <= esum) cout << 1;
        else cout << 0;
    }

    cout << endl;



}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n;
    cin >> n;
    int arr[n];
    int one=0, two=0, zero=0;

    for(int i=0; i<n; i++) 
    {
        cin >> arr[i];
        if(arr[i]%3 == 0) zero++;
        else if(arr[i]%3 == 1) one++;
        else two++;
    }

    if((one >= 3)|| (two >= 3) ||( zero%3 == 0 && zero>=1)|| zero >= 1 || (one >= 1 && two >= 1)) cout << "Yes\n";
    else cout << "No\n";
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


signed main(){
    fastIO;
    int n, k;
    cin >> n >> k;


    vector<vector<int>> adj(n+1);
    vector<int> depth(n, 0);

    for(int i=0; i<n-1; i++)
    {
        int u, v;
        cin >> u >> v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    function <void(int, int)> dfs = [&](int u, int p) -> void
    {
        for(int v: adj[u])
        {
            if(v != p)
            {
                depth[v-1] = depth[u-1]+1;
                dfs(v, u);
            }
        }
    };

    dfs(1, -1);

    for(int i=0; i<n; i++) cout << i+1 << ": " << depth[i] << endl;

    sort(depth.begin(), depth.end());

    int ans = 0, a1 = 0;

    for(int i=0; i<n; i++)
    {
        int a = upper_bound(depth.begin(), depth.end(), k - depth[i]) - lower_bound(depth.begin(), depth.end(), k - depth[i]);
        if(depth[i] + depth[i] == k) a--;
        a1 += a;

        int b = upper_bound(depth.begin(), depth.end(), k + depth[i]) - lower_bound(depth.begin(), depth.end(), k + depth[i]);
        if(depth[i] != 0)
        ans += b;
    }

    cout << a1 << endl;

    cout << ans + a1/2 << endl;

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;

lli op(lli a[], lli b[], int i, int j, int n)
{
lli ans = 0;
for(int k=0; k<i; k++) {
    ans += a[k]*b[k];
}
for(int k=i; k<=j; k++){
    ans += a[i+j-k]*b[k];
}
for(int k=j+1; k<n; k++){
    ans += a[k]*b[k];
}
return ans;
}


int main(){
    fastIO;
    int n;
    cin>>n;
    lli a[n], b[n], sum=0, maxx=0;
    
    for(int i=0; i<n; i++) cin>>a[i];
    for(int i=0; i<n; i++) cin>>b[i];

    int i, j;
    maxx = op(a, b, 0, 0, n);
    for(int s=1; s<=2*n-3; s++)
    {   i=0, j=n-1;
        if(s<=n-1) j = s-i;
        else i = s-j;
        sum = op(a, b, i, j, n);
        maxx = max(maxx, sum);
        i++;
        j--;
        while(j-i>=0)
        {
            sum += a[i-1]*b[i-1]+a[j+1]*b[j+1];
            sum -= a[i-1]*b[j+1]+b[i-1]*a[j+1];
            maxx = max(maxx, sum);
            i++;
            j--;
        }
    }
    cout<<maxx;

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    string s;
    cin>>s;
    int n = s.length(), m = 0;
    vector<bool>prev(26, 0);

    for(int i=0; i<n; i++)
    {
        int curr = s[i] - 'a';
        if(!prev[curr]) prev[curr] = 1;
        else
        {   
            m += 2;
            for(int i = 0; i<26; i++) prev[i] = 0;
        }
    }
    cout<<n-m<<endl;

}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    cout<<int(((sqrt(2*n-1)-1))/2)<< "\n";

}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long

void solve()
{
    int n, k, ans = 0;
    cin >> n >> k;
    
    int arr[n];

    priority_queue <int, vector<int>, greater<int>> pq;

    for(int i=0; i<n; i++) cin >> arr[i];
    
    for(int i=0; i<n; i++)
    {
        set<int> s;
        for(int bit = 63; bit >= 0; bit--)
        {
            if(((arr[i]>>bit)&1)) ans++;
            else pq.push(bit);
        }
    }

    while(pq.size())
    {
        int a = pq.top();
        pq.pop();
        if((1LL<<a) <= k)
        {
            k -= (1LL<<a);
            ans++;
        }
        else break;
    }

    cout << ans << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int b, c, h;
    cin>>b>>c>>h;
    if(b>=c+h+1){
        cout<<2*(c+h)+1<<endl;
    }
    else{
        cout<<2*b-1<<endl;
    }

}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n, sum=0;
    cin>>n;
    string s;
    cin>>s;
    for(int i=0; i<n; i++){
        if(s[i] == '+'){
            sum+=1;
        }
        else{
            sum-=1;
        }
    }
    cout<<abs(sum)<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, c, d;
    cin>>n>>c>>d;
    int arr[n*n];
    vector <int> v;
    for(int i=0; i<n*n; i++) cin>>arr[i];
    sort(arr, arr+n*n);
    
    for(int i=0; i<n; i++)
    {
        for(int j=0; j<n; j++)
        {
            v.push_back(arr[0]+i*c+j*d);
        }
    }
    sort(v.begin(), v.end());
    for(int i=0; i<n*n; i++)
    {
        if(arr[i]!=v[i])
        {
            cout<<"NO\n";
            return;
        }
    }
    cout<<"YES\n";
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--)
    {
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    string result = "DRAW";
    char arr[3][3];
    for(int i=0; i<3; i++){
        for(int j=0; j<3; j++){
            char c;
            cin>>c;
            arr[i][j] = c;
        }
    }
    if((arr[0][2]=='+' && arr[1][2]=='+' &&arr[2][2]=='+') || (arr[0][1]=='+' && arr[1][1]=='+' &&arr[2][1]=='+') || (arr[0][0]=='+' && arr[1][0]=='+' &&arr[2][0]=='+') || (arr[0][0]=='+' && arr[0][1]=='+' &&arr[0][2]=='+') || (arr[1][0]=='+' && arr[1][1]=='+' &&arr[1][2]=='+') || (arr[2][0]=='+' && arr[2][1]=='+' &&arr[2][2]=='+') || (arr[0][0] == '+' && arr[1][1] == '+' && arr[2][2]=='+') || (arr[2][0]=='+' && arr[1][1]=='+' && arr[0][2]== '+')){
        result = '+';
    }
    else if((arr[0][2]=='O' && arr[1][2]=='O' &&arr[2][2]=='O') || (arr[0][1]=='O' && arr[1][1]=='O' &&arr[2][1]=='O') || (arr[0][0]=='O' && arr[1][0]=='O' &&arr[2][0]=='O')||(arr[0][0]=='O' && arr[0][1]=='O' &&arr[0][2]=='O') || (arr[1][0]=='O' && arr[1][1]=='O' &&arr[1][2]=='O') || (arr[2][0]=='O' && arr[2][1]=='O' &&arr[2][2]=='O') || (arr[0][0] == 'O' && arr[1][1] == 'O' && arr[2][2]=='O') || (arr[2][0]=='O' && arr[1][1]=='O' && arr[0][2]=='O')){
        result = 'O';
    }
    else if((arr[0][2]=='X' && arr[1][2]=='X' &&arr[2][2]=='X') || (arr[0][1]=='X' && arr[1][1]=='X' &&arr[2][1]=='X') || (arr[0][0]=='X' && arr[1][0]=='X' &&arr[2][0]=='X') || (arr[0][0]=='X' && arr[0][1]=='X' &&arr[0][2]=='X') || (arr[1][0]=='X' && arr[1][1]=='X' &&arr[1][2]=='X') || (arr[2][0]=='X' && arr[2][1]=='X' &&arr[2][2]=='X') || (arr[0][0] == 'X' && arr[1][1] == 'X' && arr[2][2]=='X') || (arr[2][0]=='X' && arr[1][1]=='X' && arr[0][2]=='X')){
        result = 'X';
    }
    cout<<result<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n, esum = 0, osum = 0;
    cin >> n;
    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];

    vector<int> a(n, 0), b(n, 0);

    for(int i=0; i<n; i++)
    {
        if(i%2) 
        {
            a[i] += esum;
            osum -= arr[i];
        }
        else 
        {
            a[i] += osum;
            esum -= arr[i];
        }
    }

    esum = osum = 0;

    for(int i=n-1; i>=0; i--)
    {
        if(i%2) 
        {
            a[i] += osum;
            osum -= arr[i];
        }
        else 
        {
            a[i] += esum;
            esum -= arr[i];
        }
    }

    esum = osum = 0;

    for(int i=0; i<n; i++)
    {
        if(i%2) 
        {
            b[i] += osum;
            osum += a[i];
        }
        else 
        {
            b[i] += esum;
            esum += a[i];
        }
    }

    esum = osum = 0;

    for(int i=n-1; i>=0; i--)
    {
        if(i%2) 
        {
            b[i] += esum;
            osum += a[i];
        }
        else 
        {
            b[i] += osum;
            esum += a[i];
        }
    }

    int minn = *min_element(b.begin(), b.end());
    for(int i: b) cout << i - minn << " ";
    cout << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;

template <typename T>
T inverse(T a, T m) {
  T u = 0, v = 1;
  while (a != 0) {
    T t = m / a;
    m -= t * a; swap(a, m);
    u -= t * v; swap(u, v);
  }
  assert(m == 1);
  return u;
}

template <typename T>
class Modular {
 public:
  using Type = typename decay<decltype(T::value)>::type;

  constexpr Modular() : value() {}
  template <typename U>
  Modular(const U& x) {
    value = normalize(x);
  }

  template <typename U>
  static Type normalize(const U& x) {
    Type v;
    if (-mod() <= x && x < mod()) v = static_cast<Type>(x);
    else v = static_cast<Type>(x % mod());
    if (v < 0) v += mod();
    return v;
  }

  const Type& operator()() const { return value; }
  template <typename U>
  explicit operator U() const { return static_cast<U>(value); }
  constexpr static Type mod() { return T::value; }

  Modular& operator+=(const Modular& other) { if ((value += other.value) >= mod()) value -= mod(); return *this; }
  Modular& operator-=(const Modular& other) { if ((value -= other.value) < 0) value += mod(); return *this; }
  template <typename U> Modular& operator+=(const U& other) { return *this += Modular(other); }
  template <typename U> Modular& operator-=(const U& other) { return *this -= Modular(other); }
  Modular& operator++() { return *this += 1; }
  Modular& operator--() { return *this -= 1; }
  Modular operator++(int) { Modular result(*this); *this += 1; return result; }
  Modular operator--(int) { Modular result(*this); *this -= 1; return result; }
  Modular operator-() const { return Modular(-value); }

  template <typename U = T>
  typename enable_if<is_same<typename Modular<U>::Type, int>::value, Modular>::type& operator*=(const Modular& rhs) {
    value = normalize(static_cast<int64_t>(value) * static_cast<int64_t>(rhs.value));
    return *this;
  }
  template <typename U = T>
  typename enable_if<is_same<typename Modular<U>::Type, long long>::value, Modular>::type& operator*=(const Modular& rhs) {
    long long q = static_cast<long long>(static_cast<long double>(value) * rhs.value / mod());
    value = normalize(value * rhs.value - q * mod());
    return *this;
  }
  template <typename U = T>
  typename enable_if<!is_integral<typename Modular<U>::Type>::value, Modular>::type& operator*=(const Modular& rhs) {
    value = normalize(value * rhs.value);
    return *this;
  }

  Modular& operator/=(const Modular& other) { return *this *= Modular(inverse(other.value, mod())); }

  friend const Type& abs(const Modular& x) { return x.value; }

  template <typename U>
  friend bool operator==(const Modular<U>& lhs, const Modular<U>& rhs);

  template <typename U>
  friend bool operator<(const Modular<U>& lhs, const Modular<U>& rhs);

  template <typename V, typename U>
  friend V& operator>>(V& stream, Modular<U>& number);

 private:
  Type value;
};

template <typename T> bool operator==(const Modular<T>& lhs, const Modular<T>& rhs) { return lhs.value == rhs.value; }
template <typename T, typename U> bool operator==(const Modular<T>& lhs, U rhs) { return lhs == Modular<T>(rhs); }
template <typename T, typename U> bool operator==(U lhs, const Modular<T>& rhs) { return Modular<T>(lhs) == rhs; }

template <typename T> bool operator!=(const Modular<T>& lhs, const Modular<T>& rhs) { return !(lhs == rhs); }
template <typename T, typename U> bool operator!=(const Modular<T>& lhs, U rhs) { return !(lhs == rhs); }
template <typename T, typename U> bool operator!=(U lhs, const Modular<T>& rhs) { return !(lhs == rhs); }

template <typename T> bool operator<(const Modular<T>& lhs, const Modular<T>& rhs) { return lhs.value < rhs.value; }

template <typename T> Modular<T> operator+(const Modular<T>& lhs, const Modular<T>& rhs) { return Modular<T>(lhs) += rhs; }
template <typename T, typename U> Modular<T> operator+(const Modular<T>& lhs, U rhs) { return Modular<T>(lhs) += rhs; }
template <typename T, typename U> Modular<T> operator+(U lhs, const Modular<T>& rhs) { return Modular<T>(lhs) += rhs; }

template <typename T> Modular<T> operator-(const Modular<T>& lhs, const Modular<T>& rhs) { return Modular<T>(lhs) -= rhs; }
template <typename T, typename U> Modular<T> operator-(const Modular<T>& lhs, U rhs) { return Modular<T>(lhs) -= rhs; }
template <typename T, typename U> Modular<T> operator-(U lhs, const Modular<T>& rhs) { return Modular<T>(lhs) -= rhs; }

template <typename T> Modular<T> operator*(const Modular<T>& lhs, const Modular<T>& rhs) { return Modular<T>(lhs) *= rhs; }
template <typename T, typename U> Modular<T> operator*(const Modular<T>& lhs, U rhs) { return Modular<T>(lhs) *= rhs; }
template <typename T, typename U> Modular<T> operator*(U lhs, const Modular<T>& rhs) { return Modular<T>(lhs) *= rhs; }

template <typename T> Modular<T> operator/(const Modular<T>& lhs, const Modular<T>& rhs) { return Modular<T>(lhs) /= rhs; }
template <typename T, typename U> Modular<T> operator/(const Modular<T>& lhs, U rhs) { return Modular<T>(lhs) /= rhs; }
template <typename T, typename U> Modular<T> operator/(U lhs, const Modular<T>& rhs) { return Modular<T>(lhs) /= rhs; }

template<typename T, typename U>
Modular<T> power(const Modular<T>& a, const U& b) {
  assert(b >= 0);
  Modular<T> x = a, res = 1;
  U p = b;
  while (p > 0) {
    if (p & 1) res *= x;
    x *= x;
    p >>= 1;
  }
  return res;
}

template <typename T>
bool IsZero(const Modular<T>& number) {
  return number() == 0;
}

template <typename T>
string to_string(const Modular<T>& number) {
  return to_string(number());
}

// U == std::ostream? but done this way because of fastoutput
template <typename U, typename T>
U& operator<<(U& stream, const Modular<T>& number) {
  return stream << number();
}

// U == std::istream? but done this way because of fastinput
template <typename U, typename T>
U& operator>>(U& stream, Modular<T>& number) {
  typename common_type<typename Modular<T>::Type, long long>::type x;
  stream >> x;
  number.value = Modular<T>::normalize(x);
  return stream;
}

constexpr int md = (int)1e9 + 7;
using Mint = Modular<std::integral_constant<decay<decltype(md)>::type, md>>;


void solve(){
    lli n, k;
    cin>>n>>k;
    lli arr[n];
    for(lli i=0; i<n; i++) cin>>arr[i];

    lli maxx = INT64_MIN, sum = 0;
    lli arrsum = 0;

    for(lli i=0; i<n; i++)
    {
        arrsum += arr[i];
        sum += arr[i];
        maxx = max(maxx, sum);
        sum = max((lli)0, sum);
    }

    if(maxx > 0) cout << (Mint)arrsum - (Mint)maxx + power((Mint)2, k) * (Mint)maxx << endl;
    else cout << (Mint)arrsum << endl;
    
}

int main(){
    fastIO;
    lli t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

int num = 0;

map <int, int> asked;

int ask(int i)
{
    if(asked.find(i) != asked.end()) return asked[i];
    if(num == 250) assert(0);
    cout << "? " << i << endl;
    num++;
    int ans;
    cin >> ans;
    return asked[i] = ans;
}


void solve(){
    num=0;
    asked.clear();
    int n, k;
    cin >> n >> k;

    int a[k+1], b[k+1];

    for(int i=1; i<=k; i++)
    {
        a[i] = ask(i);
    }

    for(int i=1; i<=k; i++)
    {
        b[i] = ask(n-k+i);
    }


    int rot = k - n%k;

    rotate(b+1, b+rot+1, b+k+1);

    b[0]=0;


    int diff_ind = -1;


    for(int i=1; i<=k; i++)
    {
        if(a[i] != b[i]) diff_ind=i;
    }

    if(diff_ind==-1)
    {
        if(n == 2*k) cout << "! " << k << " " << k << endl;
        else cout << "! -1" << endl;
    }
    else
    {
        int l = 1, r = n/k - 1;
        int m = (l+r)/2;

        while(l <= r)
        {
            int num = ask(m*k+diff_ind);
            if(num == a[diff_ind])
            {
                l = m+1;
            }
            else
            {
                r = m-1;
            }
            m = (l+r)/2;
        }
        swap(l, r);

        // cout << l << " " << r << endl;

       int a_last=min(r*k+k, n-k), b_first = max(k+1, l*k+1);

       for(int i=1; i<=2*k && l*k+i + k <= n; i++)
       {
            if(ask(l*k+i) != a[(i%k==0?k:i%k)])
            {
                a_last = min(l*k+i-1, a_last);
                break;
            }
       }

       for(int i=1; i<=2*k && r*k+k-i+1 >= k; i++)
       {
            // cout << "b: " << r*k+k-i+1 << endl;
            if(r*k+k-i+1 > n) continue;

            if(ask(r*k+k-i+1) != b[((2*k-i+1)%k == 0?k:(2*k-i+1)%k)])
            {
                b_first = max(b_first, r*k+k-i+2);
                break;
            }
       }

    //    cout << a_last << " " << b_first << endl;

       if(a_last >= b_first) cout << "! -1" << endl;
       else cout << "! " << a_last << " " << n-a_last << endl;




    }

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, k;
    cin >> n >> k;
    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];
    bool ans = 0;

    bool first = 0;

    int lesseq = 0, more = 0;
    int lind = INT_MAX, rind=INT_MAX;

    for(int i=0; i<n; i++)
    {

        if(!first)
        {
            if(arr[i] <= k) 
            {
                if(lesseq >= more && lesseq != 0)
                {
                    cout << "YES\n";
                    return;
                }
                lesseq++;
            }
            else more++;

            if(lesseq == more)
            {
                lesseq=0;
                more=0;
                first=1;
            }
            if(lesseq >= more && lind == INT_MAX) lind=i;
            
        }

        else 
        {
            if(arr[i] <= k) lesseq++;
            else more++;

            if(lesseq == more)
            {
                cout << "YES\n";
                return;
            }
        }
    }




    reverse(arr, arr+n);

    first=0, lesseq=0, more=0;

    for(int i=0; i<n; i++)
    {

        if(!first)
        {
            if(arr[i] <= k) 
            {
                if(lesseq >= more && lesseq != 0)
                {
                    cout << "YES\n";
                    return;
                }
                lesseq++;
            }
            else more++;

            if(lesseq == more)
            {
                lesseq=0;
                more=0;
                first=1;
            }

            if(lesseq >= more && rind == INT_MAX) rind=i;
            
        }

        else 
        {
            if(arr[i] <= k) lesseq++;
            else more++;

            if(lesseq == more)
            {
                cout << "YES\n";
                return;
            }
        }
    }

    if(lind + rind + 1 < n) cout << "YES\n";
    else cout << "NO\n";
    

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

vector<vector<int>> adj;
vector <int> leaf;

void dfs(int u, int p)
{
    bool no_child = 1;
    for(int v:adj[u])
    {
        if(v != p)
        {
            no_child = 0;
            dfs(v, u);
        }
    }
    if(no_child)
    {
        leaf.push_back(u);
    }
}

void solve(){
    int n;
    string s;
    cin>>n;
    adj.clear();
    leaf.clear();
    adj.resize(n+1);
    for(int i=0; i<n-1; i++)
    {
        int u, v;
        cin>>u>>v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    cin>>s;
    dfs(1, -1);
    int zero = 0, ones = 0, qn = 0;

    for(int v:leaf)
    {
        if(s[v-1] == '1') ones++;
        else if(s[v-1] == '0') zero++;
        else qn++;
    }

    if(s[0] == '1') 
    {
        cout << zero + (qn+1)/2 << endl;
    }
    
    else if(s[0] == '0')
    {
        cout << ones + (qn+1)/2 << endl; 
    }
    else
    {
        int qnn = 0;
        for(char c:s) if(c == '?') qnn++;
        qnn -= (1+qn);
        if(ones == zero && qnn%2 != 0) cout << ones + (qn+1)/2<<endl;
        else cout << max(zero + qn/2, ones + qn/2) << endl;
    }
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;




int main(){
    fastIO;
    int arr[3], d;
    cin>>arr[0]>>arr[1]>>arr[2]>>d;
    sort(arr, arr+3);
    int d1 = arr[1]-arr[0];
    int d2 = arr[2]-arr[1];
    cout << max(d-d1, 0) + max(d-d2, 0);
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
   int h, w, x1, y1, x2, y2;
   int res = 0;
   cin>>h>>w>>x1>>y1>>x2>>y2;
   if(x1>=x2){
    res = 0;
   }
   else{
   if(abs(x1-x2)%2!=0){
    if(abs(y1-y2)<=1){
        res = 1;
    }
    else if(y2>y1){
            if(x2-x1-2*(w-y2)>=2 && 2*y2 - y1-w<=2){
                res = 1;
            }
            else{
                res = 0;
            }
    }
    else{
        if(x2-x1-2*(y2-1)>=2 && y1-2*y2+1<=2){
            res = 1;
        }
        else{
            res = 0;
        }
    }
   } 
   else{

    if(abs(y1-y2)<=1){
        res = -1;
    }
    else if(y2>y1){
            if(x2-x1-2*(y1-1)>=2 && y2-2*y1+1<=1){
                res = -1;
            }
            else{
                res = 0;
            }
    }
    else{
        if(x2-x1-2*(w-y1)>=2 && 2*y1 - y2-w<=1){
            res = -1;
        }
        else{
            res = 0;
        }
    }
   }
   }
   if(res == 1){
    cout<<"Alice"<<endl;
   }
   else if(res == -1){
    cout<<"Bob"<<endl;
   }
   else{
    cout<<"Draw"<<endl;
   }
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin >> n;
    string s;
    cin >> s;
    for(int i=0; i<n-1; i++) 
    {
        if(s[i] == s[i+1] && s[i] == '1')
        {
            cout << "YES\n";
            return;
        }
    }
    if(s[0] == '1' || s[n-1] == '1') cout << "YES\n";
    else
        cout << "NO\n";
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

int Ntimes(int a, int b){
   int count = 0, c;
   while(a!=0){
    c = abs(a-b);
    a = b;
    b = c;
    count++;
    cout<<count;
   }
   return count;
}


int main(){
    cout<<"yes";
    //cout<<Ntimes(1, 7);
    /*int t;
    cin>>t;
    for(int i=0; i<t; i++){
        int n;
        bool dull = true;
        cin>>n;
        int a[n], b[n];
        for(int j=0; j<n; j++){
            cin>>a[j];
        }
        for(int j=0; j<n; j++){
            cin>>b[j];
        }
        int c[n];
        while(1){
        for(int j=0; j<n; j++){
            c[j] = abs(a[j]-b[j]);
            a[j] = b[j];
            b[j] = c[j];
        }
        if(InsideArray(0, a, n)>=1){
            if(InsideArray(0, a, n)!=n){
                dull = false;
            }
            break;
        }
        }
        if(dull){
            cout<<"YES"<<endl;
        }
        else{
            cout<<"NO"<<endl;
        }
        }*/
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;

const lli MOD = 1e9 + 7;

lli lcm(int a, int b)
{
    return (a*b)/__gcd(a, b);
}

void solve(){
    lli n;
    cin>>n;
    lli s = 0;
    s += n;
    lli i = 1, j=2;
    while(n/i > 0){
        s += (n/i)%MOD;
        s %= MOD;
      
        i = lcm(i, j);
        j++;
    }
    cout<<s<<endl;
}

int main(){
   
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

bool sortcol(const vector<int>& v1, const vector<int>& v2)
{
    return v1[0] > v2[0];
}

int main(){
    int n;
    long long int s1=0, s2=0, sm=0;
   
    cin>>n;
    vector <vector<int> > vect;
    for(int i=0; i<n; i++){
        int a, b;
        cin>>a>>b;
        vector <int> v;
       v.push_back(a);
       v.push_back(b);
        vect.push_back(v);
    }
    for(int i=0; i<n-1; i++){
        s1+=vect[i][1]*vect[i][0];
        s2+=s1*vect[i+1][1];
    }
    sort(vect.begin(), vect.end(), sortcol);
    s1=0;
    for(int i=0; i<n-1; i++){
        s1+=vect[i][1]*vect[i][0];
        sm+=s1*vect[i+1][1];
    }

    cout<<fixed<<setprecision(1)<<(float) (sm-s2);
    
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n, k, x, sum=0, m;
    cin>>n>>k>>x;
    int arr[n+x];
    memset(arr, 0, sizeof(arr));
    for(int i=0; i<n; i++){
        cin>>arr[i];
    }
    
    sort(arr, arr+n+x, greater<int>());
    for(int i=0; i<n; i++){
        if(i<x){
            sum-=arr[i];
        }
        else{
            sum+=arr[i];
        }
    }
    m=sum;
    for(int i=0; i<k; i++){
        sum += arr[i]-2*arr[i+x];
        m = max(m, sum);
    }
    cout<<m<<endl;
    
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

signed main(){
    fastIO;
    int l = 1, r = 1000000;
    int mid = (l+r)/2;
    while(l <= r)
    {
        cout<<mid<<endl;
        string s;
        cin>>s;
        if(s[0] == '<')
        {
            r = mid-1;
        }
        else
        {
            l = mid+1;
        }
        mid = (l+r)/2;
    }
    cout<<"! "<<r<<endl;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, k, Pb, Ps, Bsc = 0, Psc = 0;
    cin>>n>>k>>Pb>>Ps;

    int p[n], a[n];
    for(int i=0; i<n; i++) cin>>p[i];
    for(int i=0; i<n; i++) cin>>a[i];

    int a1[n], a2[n];

    a1[0] = Pb-1, a2[0] = Ps-1;

    for(int i=1; i<n; i++)
    {
        a1[i] = p[a1[i-1]] - 1;
    }

    for(int i=1; i<n; i++)
    {
        a2[i] = p[a2[i-1]] - 1;
    }

    for(int i=0; i<n; i++)
    {
        a1[i] = a[a1[i]];
        a2[i] = a[a2[i]];
    }

    int b = 0, s = 0;
    int pref1 = 0, pref2 = 0;

    for(int i=0; i<n; i++)
    {
        if(k-i > 0)
        {
            b = max(b, pref1 + (k - i) * a1[i]);
            s = max(s, pref2 + (k - i) * a2[i]);
        }
        pref1 += a1[i];
        pref2 += a2[i];
    }

    if(b > s) cout<<"Bodya\n";
    else if(s > b) {cout<<"Sasha\n";}
    else cout<<"Draw\n";
    
    

    
    
    


}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    long long int n;
    cin>>n;
    cout<<n*n+2*n+2<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;
#define int long long 

class segtree
{
    int size;
    vector<int> sums;

public:
    segtree(int n = 1)
    {
        size = 1;
        while (size < n)
            size *= 2;
        sums.assign(2 * size, 0);
    }

    void build(vector<int> &v, int x, int lx, int rx)
    {
        if(rx - lx == 1)
        {
            if(lx < v.size())
                sums[x] = v[lx];
            return;
        }

        int m = (lx+rx)/2;

        build(v, 2*x+1, lx, m);
        build(v, 2*x+2, m, rx);

        sums[x] = max(sums[2*x+1], sums[2*x+2]);
    }

    void build(vector<int> &v)
    {
        build(v, 0, 0, size);
    }

    void set(int i, int v, int x, int lx, int rx)
    {
        if (rx - lx == 1)
        {
            sums[x] = v;
            return;
        }

        int m = (lx + rx) / 2;

        if (i < m)
            set(i, v, 2 * x + 1, lx, m);
        else
            set(i, v, 2 * x + 2, m, rx);

        sums[x] = max(sums[2 * x + 1], sums[2 * x + 2]);
    }

    void set(int i, int v)
    {
        set(i, v, 0, 0, size);
    }

    int sum(int l, int r, int x, int lx, int rx)
    {
        if (l >= rx || r <= lx)
            return 0;
        if (lx >= l && rx <= r)
            return sums[x];

        int m = (lx + rx) / 2;
        int s1 = sum(l, r, 2 * x + 1, lx, m);
        int s2 = sum(l, r, 2 * x + 2, m, rx);

        return max(s1, s2);
    }

    int sum(int l, int r)
    {
        return sum(l, r, 0, 0, size);
    }
};


signed main()
{
    int n, q, LOG = 32;
    cin >> n >> q;
    int val[n];

    vector<vector<int>> adj(n);
    vector<int> depth(n, 0);
    vector<int> size(n, 0);
    vector<int> top(n, 0);
    vector<int> label(n, 0);
    vector<vector<int>> up(n, vector<int>(LOG+1));


    for(int i=0; i<n; i++) cin >> val[i];


    for(int i=0; i<n-1; i++)
    {
        int u, v;
        cin >> u >> v;
        u--, v--;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    function <void(int, int)> dfs = [&](int u, int p) -> void
    {
        size[u]=1;
        int maxx = 0;
        for(int v: adj[u])
        {
            if(v != p)
            {

                up[v][0] = u;
                for(int i=1; i<=LOG; i++) up[v][i] =up[up[v][i-1]][i-1];
                depth[v] = depth[u]+1;
                dfs(v, u);
                size[u] += size[v];
                maxx = max(maxx, size[v]);
                top[v]=v;
            }
        }

        for(int v: adj[u])
        {
            if(v != p && size[v] == maxx)
            {
                top[v] = top[u];
                break;
            }
        }
    };

    int l = 0;

    function <void(int, int)> dfs1 = [&](int u, int p) -> void
    {
        label[u]=l++;
        for(int v: adj[u]) if(v != p && top[v] != v) dfs1(v, u);    
        for(int v: adj[u]) if(v != p && top[v] == v) dfs1(v, u);
    };

    dfs(0, -1);
    dfs1(0, -1);


    function <int(int, int)> kth_ancestor = [&](int u, int k) -> int
    {
        for(int bit = LOG; bit >= 0; bit--)
        {
            if((k>>bit &1))
            {
                k ^= (1LL << bit);
                u = up[u][bit];
            }
        }
        return u;
    };

    function <int(int, int)> lca = [&](int u, int v) -> int
    {
        if(depth[v] > depth[u]) swap(u, v);
        u = kth_ancestor(u, depth[u] - depth[v]);

        if(u == v) return u;

        for(int bit = LOG; bit >= 0; bit--)
        {
            if(up[u][bit] != up[v][bit])
            {
                u = up[u][bit];
                v = up[v][bit];
            }
        }

        return up[u][0];
    };

    vector<int> v(n);

    for(int i=0; i<n; i++) v[label[i]] = val[i];

    segtree st(n);
    st.build(v);

    while(q--)
    {
        int t;
        cin >> t;
        if(t == 1)
        {
            int s, x;
            cin >> s >> x;
            s--;
            val[s] = x;
            st.set(label[s], x);
            v[label[s]] = x;
        }
        else 
        {
            int a, b;
            cin >> a >> b;
            a--, b--;
            
            int c = lca(a, b);
            int ans = val[c];

            while(a != c)
            {
                
                if(top[a] == a)
                {
                    ans = max(ans, val[a]);
                    a = up[a][0];
                }
                else 
                {
                    int d = top[a];
                    if(depth[d] > depth[c])
                    {
                        ans = max(ans, st.sum(label[d], label[a] + 1));
                        a = up[top[a]][0];
                    }
                    else 
                    {
                        int dep = depth[a] - depth[c];
                        int node = kth_ancestor(a, dep-1);

                        ans = max(ans, st.sum(label[node], label[a] + 1));
                        a = c;
                    }
                } 
            }

            while(b != c)
            {
                if(top[b] == b)
                {
                    ans = max(ans, val[b]);
                    b = up[b][0];
                }
                else 
                {
                    int d = top[b];
                    if(depth[d] > depth[c])
                    {
                        ans = max(ans, st.sum(label[d], label[b] + 1));
                        b = up[top[b]][0];
                    }
                    else 
                    {
                        int dep = depth[b] - depth[c];
                        int node = kth_ancestor(b, dep-1);

                        ans = max(ans, st.sum(label[node], label[b] + 1));
                        b = c;
                    }
                } 
            }
            cout << ans << " ";
        }
    }
}

#include <bits/stdc++.h>
using namespace std;

int np(long long int arr[], int n, int sp){
    for(int i=sp+1; i<n; i++){
        if(arr[i]>0){
            return i;
        }
    }
    return n;
}

bool neg(long long int arr[], int n, int sp, int np){
for(int i=sp+1; i<np; i++){
    if(arr[i]<0){
        return true;
    }
}
return false;
}

int operations(long long int arr[], int n){
    int sp = -1;
    int count = 0;
    int nP = np(arr, n, sp);
    
while(sp != n){
    if(neg(arr, n, sp, nP)){
        count ++;
    }
    sp = nP;
    nP = np(arr, n, sp);
}
return count;
}

void solve(){
    int n;
    cin>>n;
    long long int arr[n], sum = 0;
    for(int i=0; i<n; i++){
        cin>>arr[i];
        sum = sum+abs(arr[i]);
    }
    
    cout<<sum<<" "<<operations(arr, n)<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

signed main(){
    fastIO;
    int n;
    cin >> n;
    int arr[n+1];
    vector<vector<int>> adj(n+1);
    vector<int> ans(n+1, 0), dp(n+1, 0);

    for(int i=1; i<=n; i++)
    {
        cin >> arr[i];
    }

    for(int i=0; i<n-1; i++)
    {
        int u, v;
        cin >> u >> v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    function <void(int, int)> dfs = [&](int u, int p) -> void
    {
        for(int v: adj[u])
        {
            if(v != p)
            {
                dfs(v, u);
                dp[u] += max((int)0, dp[v]);
            }
        }
        if(arr[u]) dp[u]++;
        else dp[u]--;
    };

    function <void(int, int)> dfs1= [&](int u, int p) -> void
    {
        if(p == 0) ans[u] = dp[u];
        else if(dp[u] > 0) {ans[u] = max(dp[u], ans[p]);}
        else ans[u] = dp[u] + max(ans[p], (int)0);

        for(int v: adj[u])
        {
            if(v != p)
            {
                dfs1(v, u);
            }
        }
    };

    dfs(1, 0);
    dfs1(1, 0);

    for(int i=0; i<n; i++)
    {
        cout << ans[i+1] << " ";
    }

    cout << endl;

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n;
    cin >> n;
    int arr[n];

    for(int i=0; i<n; i++)
    {
        cin >> arr[i];
    }

    bool yes = 1;

    int minn = 0, maxx = 0;
    int prev = 0;
    int ans[n];

    memset(ans, -1, sizeof(ans));

    vector<pair<int, int>> v;
    v.push_back({minn, maxx});

    for(int i=0; i<n; i++)
    {
        int l, r;
        cin >> l >> r;
        if(arr[i] == -1)
        {
            maxx++;
        }
        else if(arr[i]) 
        {
            minn++;
            maxx++;
        }

        
        minn = max(l, minn);
        maxx = min(maxx, r);
        
        v.push_back({minn, maxx});
       
        if(minn > maxx) yes = 0;

    }

    if(yes)
    {
        int val = v[n].first;
        for (int i = n - 1; i >= 0; i--) 
        {
            if (arr[i] == 1) 
            {
                ans[i] = 1;
                val--;
            } 
            else if (arr[i] == 0) 
            {
                ans[i] = 0;
            } 
            else 
            {
                if (val - 1 >= v[i].first && val - 1 <= v[i].second) 
                {
                    ans[i] = 1;
                    val--;
                } 
                else if (val >= v[i].first && val <= v[i].second) 
                {
                    ans[i] = 0;
                } 
            }
        }
        

        for(int i: ans) cout << i << " ";
        cout << endl;
    }
    else cout << -1 << endl;
    


}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;


void solve(){
    lli n, sum = 0;
    cin>>n;
    for(lli i=0; i<n; i++)
    {
        lli a;
        cin>>a;
        sum += a;
    }
    if(sum%2 == 1) cout<<"Mike\n";
    else cout<<"Joe\n";
}

int main(){
    fastIO;
    lli t;
    cin>>t;
    while(t--){
        solve();
    }
}

// #include <bits/stdc++.h>
// #define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
// using namespace std;
// #define int long long

// signed main(){
//     fastIO;
//     int n, m, MOD = 1e9+7, ans = 0;
//     cin >> n >> m;
//     int arr[n];
//     for(int i=0; i<n; i++) cin >> arr[i];

//     int dp[n][m+1];

//     memset(dp, 0, sizeof(dp));

//     if(arr[0] == 0) for(int i=1; i<=m; i++) dp[0][i] = 1;
//     else dp[0][arr[0]] = 1;
    
//     for(int i=1; i<n; i++)
//     {
//         if(arr[i] == 0)
//         {
//             for(int j=1; j<=m; j++)
//             {
//                 dp[i][j] = dp[i-1][j];
//                 if(j > 1) dp[i][j] += dp[i-1][j-1];
//                 if(j < m) dp[i][j] += dp[i-1][j+1];
//                 dp[i][j] %= MOD;
//             }
//         }
//         else
//         {
//             dp[i][arr[i]] = dp[i-1][arr[i]];
//             if(arr[i] > 1) dp[i][arr[i]] += dp[i-1][arr[i]-1];
//             if(arr[i] < m) dp[i][arr[i]] += dp[i-1][arr[i]+1];
//             dp[i][arr[i]] %= MOD;
//         }
//     }

//     for(int i=1; i<=m; i++) 
//     {
//         ans += dp[n-1][i];
//         ans %= MOD;
//     }
//     cout << ans;
// }




#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<long long> vll;
typedef vector<pair<ll,ll>> vp;

#define all(v) v.begin(), v.end()
#define rep1(i, n1, n2) for(int i = n1; i < n2; i++)
#define rep2(i, n2, n1) for(int i = n2; i >= n1; i--)
#define vecMAX(a) *max_element(all(a))
#define vecMIN(a) *min_element(all(a))
#define srt(v) sort(all(v))
#define rev(v) reverse(all(v))
#define pb push_back

template <typename T>
vector<vector<T>> vec2d(int rows, int cols, T initialValue) {
    return vector<vector<T>>(rows, vector<T>(cols, initialValue));
}

const int mod7 = 1000000007;
const ll inf = 1e18;
const int mod9 = 998244353;

int n,m;
vvi adj;
vi p;
map<pair<int,int>,int> m2;
vi v;
vi s;
vi path;

bool comp(int a, int b)
{
    if(m2[{a,b}] == 1) return true;
    else if(m2[{b,a}] == 1) return false;
    else if(b >= a) return true;
    else return false;
}

bool dfs(int  u)
{
    v[u] = 1;
    path[u] = true;
    
    bool f = 1;
    for(int i: adj[u])
    {
        if(v[i] == 0)
        {
            p[i] = u;
            f &= dfs(i);
        }
        else if(path[i])
        {
            f = 0;
        }
    }
    s.pb(u);
    path[u] = 0;
    return f;
}

void solve(){
    cin>>n>>m;
    
    adj.assign(n+1, vi(0));
    p.assign(n+1,0);
    v.assign(n+1, 0);
    path.assign(n+1,0);
    s.assign(0,0);
    for(int i=0; i<m; i++)
    {
        int a,b;
        cin>>a>>b;
        m2[{a,b}] = 1;
        adj[a].pb(b);
    }

    int a[n];
    for(int i=0; i<n; i++) a[i] = i+1;

    bool f = 1;
    for(int i=n; i>=1; i--)
    {
        if(v[i] == 0)
            f &= dfs(i);
    }
    if(f == 0)
    {
        cout<<"Sandro fails.";
        return;
    }

    rev(s);
    
    for (int i = 0; i < n - 1; i++) {
        bool swapped = false;
        for (int j = 0; j < n - i - 1; j++) {
            if (comp(s[j+1] , s[j])) {
                swap(s[j], s[j + 1]);
                swapped = true;
            }
        }
    }

    for(int i: s) cout<<i<<" ";

}

int main(){
    ios::sync_with_stdio(0); cin.tie(0);
    int t=1;
    //cin>>t;
    while(t--){
        solve();
    }
    return 0;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n, q;
    cin >> n >> q;
    int p[n];
    string s;
    for(int i=0; i<n; i++) cin >> p[i];
    cin >> s;

    vector<int> bp;
    vector<int> bp1;
    int maxx = 1;

    for(int i=0; i<n; i++)
    {
        if(i != n-1 && s[i] == 'L' && s[i+1] == 'R') bp1.push_back(i);
        if(p[i] == maxx) bp.push_back(i);
        maxx = max(maxx, p[i]);
    }

    for(int i: bp) cout << i << " ";
    cout << endl;
    for(int i: bp1) cout << i << " ";

    

    while(q--)
    {
        int i;
        cin >> i;
        i--;

    }

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;



void solve(){
    int n, m;
    cin>>n>>m;
    string arr[n];
    for(int i=0; i<n; i++){
        cin>>arr[i];
        
    }
    
    bool q, r, s, t, yes=0;
    
    for(int i=0; i<m; i++){
    for(int j=i+1; j<m; j++){
    for(int k=j+1; k<m; k++){
    for(int l=k+1; l<m; l++){
        q=0;
        r=0;
        s=0;
        t=0;
        yes=0;
        for(int p=0; p<n; p++){
            if(arr[p][i]=='v') {
                q=1;
            };
            if(arr[p][j]=='i') {
                r=1;
            };
            if(arr[p][k]=='k') {
                s=1;
            };
            if(arr[p][l]=='a') {
                t=1;
            };
        }
        if(q&&r&&s&&t){
            yes=1;
            break;
        }
        
        
        }
        if(yes) break;
        }
        if(yes) break;
    }   if(yes) break;
    }
    if(yes){
        cout<<"YES"<<endl;
    }
    else{
        cout<<"NO"<<endl;
    }
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n;
    cin >> n;
    string s;
    cin >> s;
    int ans = 0;
    ans += (s[0] == '1');
    int zo=(s[0] == '1');
    int oz = 0;
    int z = (s[0] == '0');
    

    for(int i=1; i<n; i++)
    {
        if(s[i] != s[i-1]) ans++;
        if(s[i] == '1' && s[i-1] == '0') zo++;
        if(s[i] == '0' && s[i-1] == '1') oz++;
        z += (s[i] == '0');
    }
    
    if(zo>=2 || oz>=2) cout << ans-2+n << endl;
    else if((z == 0 || z == n)||(oz == 0)){cout << ans+n << endl;}
    else cout << ans + n - 1 << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n, ans = 0;
    cin >> n;
    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];

    sort(arr, arr+n);

    int m = arr[n-1];
    int x[m + 1];

    vector<vector<int>> v(m+1);

    memset(x, 0, sizeof(x));

    for(int i=0; i<n; i++)
    {
        for(int j=1; j*j<=arr[i]; j++)
        {
            if(arr[i]%j == 0)
            {
                if(j <= m) v[j].push_back(i);
                if(j*j != arr[i] && arr[i]/j <= m) v[arr[i]/j].push_back(i);
            }
        }
    }

    for(int i=1; i<=m; i++)
        for(int j=0; j<v[i].size(); j++) 
            x[i] += j * (n - v[i][j] - 1);
    
    for(int i=m; i>=1; i--) 
        for(int j = 2*i; j<=m; j+=i) 
            x[i] -= x[j];
    for(int i=1; i<=m; i++) ans += i*x[i];

    cout << ans << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}






/*
#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long

signed main(){
    fastIO;
    int n;
    cin>>n;
    int arr[n];
    for(int i=0; i<n; i++) cin>>arr[i];

    vector<pair<int, int>> ans;
    // vector<pair<int, int>> dp[18];

    function <void(int, int)> operate = [&](int i, int j) -> void
    {
        // vector<pair<int, int>> ans1;
        // if(dp[j-i].size() != 0)
        // {
        //     pair<int, int> prev = {-1, -1};
        //     for(pair<int, int> p: dp[j-i])
        //     {
        //         if(p.first =! p.second || arr[p.first + i -1] > 1)
        //             ans.push_back({p.first+i, p.second+i});
        //         ans1.push_back({p.first+i, p.second+i});

        //         if(prev == p && arr[p.first + i - 1] != 1)
        //             ans.push_back({p.first+i, p.second+i});

        //         prev=p;
        //     }
        //     return ans1;
        // }

        if(i == j)
        {
            if(arr[i] > 1)
                ans.push_back({i+1, i+1}); 

            // ans1.push_back({i+1, i+1});

            if(arr[i] != 1)
                ans.push_back({i+1, i+1});

            // ans1.push_back({i+1, i+1});
            // return ans1;
            return;
        }
        for(int k=0; j-k>=i+1; k++) 
            // for(pair<int, int> p: 
            operate(i+1, j-k);
                // ans1.push_back(p);

        if(arr[i] > 0)
            ans.push_back({i+1, i+1});            
        // ans1.push_back({i+1, i+1});

        ans.push_back({i+1, j+1});
        // ans1.push_back({i+1, j+1});

        for(int ii=i; ii<=j; ii++) arr[ii] = j-i+1;

        // for(pair<int, int> p: ans1) dp[j-i].push_back({p.first-i, p.second-i});
        // return ans1;
    };

    vector<pair<int, int>> seg;

    for(int i=0; i<n; i++)
    {
        for(int j=i; j<n; j++)
        {
            int maxx = *max_element(arr+i, arr+j+1);
            if(j-i+1 >= maxx) seg.push_back({i, j});
        }
    }

    for(int i=0; i< seg.size(); i++)
    {
        bool out = 1;
        for(int j=0; j<seg.size(); j++)
            if(j != i && seg[i].first >= seg[j].first && seg[i].second <= seg[j].second) out=0;
        if(out) 
        {
            operate(seg[i].first, seg[i].second);
            // for(int j=seg[i].first; j<=seg[i].second; j++) arr[j] = seg[i].second - seg[i].first + 1;
        }
    }

    // operate(0, 0);

    cout << accumulate(arr, arr+n, (int)0) << " " << ans.size() << endl;
    for(pair<int, int> p: ans) cout << p.first << " " << p.second << endl;
}
*/

#include <bits/stdc++.h>

using namespace std;

string check(int n){
    if(n==1){
        return "YES";
    }
    if(n%3==0){
        return check(n/3);
    }
    if((n-1)%3==0){
        return check((n-1)/3);
    }
    else{
        return "NO";
    }
}

int main() 
{
  int t;
  cin>>t;
  for(int i=0; i<t; i++){
    int n;
    cin>>n;
    cout<<check(n)<<endl;
  }
  }

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;


void solve(){
    lli x, y;
    cin>>x>>y;
    lli xo = x^y;

    lli ans = 1;
    while(xo%2 != 1)
    {
        xo/=2;
        ans *= 2;
    }
    cout<<ans<<endl;
}

int main(){
    fastIO;
    lli t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n, k;
    cin >> n >> k;
    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];

    function <bool(int)> check = [&](int m) -> bool
    {
        int num = 0;
        int count = 0;
        vector<bool> visited(m, 0);
        for(int i=0; i<n; i++)
        {
            if(arr[i] < m && !visited[arr[i]]) {count++; visited[arr[i]]=1;}
            if(count >= m)
            {
                count = 0;
                num++;
                for(int j=0; j<m; j++) visited[j]=0;
            }
            if(num >= k) return 1;
        }
        return (num>=k);
    };

    int l = 0, r = *max_element(arr, arr+n) + 2;
    int mid = (l+r)/2;

    while(l <= r)
    {
        if(check(mid)) l = mid+1;
        else r = mid-1;
        mid = (l+r)/2;
    }

    cout << r << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long


void solve()
{
    int n;
    cin >> n;
    
    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];

    int gcdd = 0;
    for(int i=0; i<n; i++) gcdd = gcd(gcdd, arr[i]);
    for(int i=0; i<n; i++) arr[i] /= gcdd;
    map<int, int> gcddd;

    for(int i=0; i<n; i++)
    {
        for(auto p: gcddd)
        {
            if(gcd(p.first, arr[i]) != p.first)
            {
                if(gcddd.find(gcd(p.first, arr[i])) == gcddd.end()) gcddd[gcd(p.first, arr[i])] = p.second+1;
                else gcddd[gcd(p.first, arr[i])] = min(p.second+1, gcddd[gcd(p.first, arr[i])]);
            }
        }
        gcddd[arr[i]]=1;
    }
    int c=0;
    for(int i: arr) c += (i != 1);
    cout << c + gcddd[1] - 1 - (gcddd[1] != 1) << endl;
}

signed main()
{
    fastIO;
    int t;
    cin>>t;
    while(t--) solve();
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



void solve(){
    int n, m;
    cin >> n >> m;
    string s;
    cin >> s;

    set<int> ba, bc, ca, cb;

    for(int i=0; i<m; i++)
    {
        char c1, c2;
        cin >> c1 >> c2;
        if(c1 == 'b' && c2 == 'a') ba.insert(i);
        if(c1 == 'b' && c2 == 'c') bc.insert(i);
        if(c1 == 'c' && c2 == 'a') ca.insert(i);
        if(c1 == 'c' && c2 == 'b') cb.insert(i);
    }


    for(int i=0; i<s.size(); i++)
    {
        if(s[i] == 'b')
        {
            if(ba.size())
            {
                s[i] = 'a';
                ba.erase(ba.begin());
            }
            else if(bc.size() && ca.lower_bound(*bc.begin()) != ca.end())
            {
                s[i] = 'a';
                ca.erase(ca.lower_bound(*bc.begin()));
                bc.erase(bc.begin());
            }
        }
        else if(s[i] == 'c')
        {
            if(ca.size())
            {
                s[i] = 'a';
                ca.erase(ca.begin());
            }
            else if(cb.size() && ba.lower_bound(*cb.begin()) != ba.end())
            {
                
                s[i] = 'a';
                ba.erase(ba.lower_bound(*cb.begin()));
                cb.erase(*cb.begin());
            }
            else if(cb.size())
            {
                s[i] = 'b';
                cb.erase(cb.begin());
            }
        }
    }
    cout << s << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

vector<vector<int>> adj;
vector<bool> visited;

int dfs(int u)
{
    int anss = INT_MAX;
    visited[u] = 1;

    for(int v: adj[u])
    {
        if(v == 0) 
        {   
            return 1;
        }

        if(!visited[v])
        {
            anss = min(1 + dfs(v), anss);
        }

        visited[v] = 0;
    }

    return anss;

}

signed main(){
    fastIO;
    int n, m;
    cin >> n >> m;

    adj.resize(n);
    visited.resize(n, 0);

    while(m--)
    {
        int u, v;
        cin >> u >> v;
        u--, v--;
        adj[u].push_back(v);
    }

    int a = dfs(0);
    cout << (a == INT_MAX ? -1 : a)  << endl;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n, k, a = 0;
    cin>>n>>k;
    int g = 0;
    
    for(int i=0; i<n; i++)
    {
        int a;
        cin>>a;
        g = gcd(g, a);
    }
    if(n == 1)
    {
        cout << k-1 + (k-1>=g ? 1 : 0) << endl;
        return;
    }

    for(int i=0; i<n; i++)
    {
        if(k - 1 >= g*i) k++;
    }

    cout<<k-1<<endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

const int N = 2e5+10;
vector<int> primes;

void sieve(int n)
{

    vector<bool> prime(n + 1, true);

    for (int p = 2; p * p <= n; p++) {


        if (prime[p] == true) {
            for (int i = p * p; i <= n; i += p)
                prime[i] = false;
        }
    }

    for(int i=2; i<=n; i++)
    {
        if(prime[i]) primes.push_back(i);
    }
    
}


void solve(){
    int n;
    cin >> n;
    if(n == 3)
    {
        cout << "2 1 3\n";
        return;
    }

    int ans[n];
    memset(ans, 0, sizeof(ans));
    int ptr=0;

    set<int> s;
    for(int i=1; i<=n; i++) s.insert(i);
    s.erase(2);
    ans[0] = 2;
    ptr=1;
    for(int i=1;i<n; i+=2)
    {
        if(primes[ptr] <= n)
        {
            ans[i]=primes[ptr];
            s.erase(s.find(primes[ptr]));
            ptr++;
        }
        else break;
    }

    for(int i=0; i<n; i++)
    {
        if(ans[i] == 0)
        {
            ans[i] = *s.begin();
            s.erase(s.begin());
        }
    }

    for(int i: ans) cout << i << " ";
    cout << endl;
    



}

signed main(){

    sieve(N);
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;

bool present(string s1, string s2){
    for(int i = s1.length()-1; i>=0; i--){
        if(s1[i] == s2[s2.length()-1]) s2.pop_back();
    }
    if(s2 == "") return 1;
    else return 0;
}


int main(){
    
    fastIO;
    string n;
    cin>>n;
    bool y = 0;
    for(int i=0; i<=124*8; i+=8){
        if(present(n, to_string(i))){
            cout<<"YES\n";
            cout<<to_string(i);
            y = 1;
            break;
        }
    }
    if(!y) cout<<"NO";

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

signed main(){
    fastIO;
    int n, m;
    cin >> n >> m;
    vector<set<int>> adj(n);
    vector<bool> visited(n, 0);
    bool no = 0;

    for(int i =0; i<m ;i++)
    {
        int u, v;
        cin >> u >> v;
        u--, v--;
        adj[u].insert(v);
        visited[v] = 1;
    }

    int start = 0;

    for(int i=0; i<n; i++) 
    {
        if(!visited[i]) start = i;
        
        visited[i] = 0;
    }

    vector<int> ans;

    function <void(int)> dfs = [&dfs, adj, &visited, &ans](int u)->void
    {
        visited[u] = 1;
        for(int v: adj[u])
        {
            if(!visited[v]) dfs(v);
        }

        ans.push_back(u);
    };

    dfs(start);

    for(int i=0; i<n; i++) if(!visited[i]) 
    {
        no = 1;
    }


    reverse(ans.begin(), ans.end());

    if(no) cout << "No\n";
    else 
    {
        map<int, int> pos;

        for(int i=0; i<n; i++) pos[ans[i]] = i;

        for(int i=0; i<n; i++)
        {
            for(int j:adj[i])
            {
                if(pos[i] >= pos[j])
                {
                    cout << "No\n";
                    return 0;
                }
            }
        }

        for(int i=0; i<n-1; i++)
        {
            if(adj[ans[i]].find(ans[i+1]) == adj[ans[i]].end())
            {
                cout << "No\n";
                return 0;
            }
        }

        map<int, int> mp;

        for(int i=0; i<n; i++) mp[ans[i] + 1] = i+1;

        for(int i=0; i<n; i++) ans[i] = mp[i+1];

        cout << "Yes\n";
        for(int i: ans) cout << i << " ";
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;

vector<vi> adj;
//vector <bool> ron_wins;

bool dfs(int u, int p)
{
    bool ans = 0;
    for(int v:adj[u])
    {
        if(v != p) 
        {
            ans = ans|!dfs(v, u);
        }
    }
    return ans;
}

signed main(){
    fastIO;
    int n, t;
    cin>>n>>t;
    adj.resize(n+1);
    //ron_wins.resize(n+1);
    
    for(int i=0; i<n-1; i++)
    {
        int u, v;
        cin>>u>>v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    int u;
    cin >> u;

    cout << ((dfs(u, -1) == 1) ? "Ron": "Hermione");
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


signed main()
{
    fastIO;
    int x, y;
    cin >> x >> y;

    double num = 0;

    for(int i=1; i<=6; i++)
    {
        for(int j=1; j<=6; j++)
        {
            if(i+j >= x || abs(i-j)>=y) num++;
        }
    }

    cout << fixed << setprecision(10) << (double)num/36 << endl;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

long long int nc2(long long int n){
return (n*(n-1))/2;
}

long long int nc3(long long int n){
    return (n*(n-1)*(n-2))/6;
}

void solve(){
    long long int n, freq = 1, ans = 0;
    cin>>n;
    int arr[n];
    for(int i=0; i<n; i++){
        cin>>arr[i];
    }
    sort(arr, arr+n, greater<int>());

    for(int i=0; i<n-1; i++){
        
        if(arr[i]-arr[i+1]==0){
            freq++;
        }
        else{
            if(freq>=2){
                
                ans+=(n-i-1)*nc2(freq);
            }
            if(freq>=3){
                ans+=nc3(freq);
            }
            freq = 1;
        }
    }
            if(freq>=3){
                ans+=nc3(freq);
            }
    cout<<ans<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n, m, q;
    cin >> n >> m >> q;
    int a, b;
    cin >> a >> b;
    if(a > b) swap(a, b);
    int s;
    cin >> s;

    if(s < a)
    {
        cout << a - 1 << endl;
    }
    else if(s > b)
    {
        cout << n - b << endl;
    }
    else 
    {
        cout << (a+b)/2 - a << endl;
    } 
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;


int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        lli a, b;
        cin>>a>>b;
        if((a+b)%3==0 && max(a, b)<=2*min(a, b)) cout<<"YES"<<endl;
        else cout<<"NO"<<endl;
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

void solve(){
    int n, ans = 0;
    string s;
    cin>>n>>s;
    vector<int> count(4, 0);
    for(char c:s) if(c != '?') count[c - 'A']++;
    for(int i:count) ans += min(i, n);
    cout<<ans<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;

string opstring(int n)
{
    if(n==1) return "a";
    if(n==2) return "aabb";
    string s = opstring(n-1);
    char c = 'a' + n - 1;
    s = s + 'a';
    for(int i=1; i < n-1; i++)
    {
        s = s + c + (char)('a' + i);
    }
    s = s + c + c;
    return s;
}
 

int main()
{
    fastIO;
    int n, k;
    string s;
    cin>>n>>k>>s;
    string os = opstring(k);
    for(int i=0; i<n; i++)
    {
        cout<<os[i % (os.size())];
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;


int main(){
    fastIO;
    
    long long int sum, s=0, n;
    cin>>n;
    sum = (n*(n+1))/2;
    for(long long int i=0; i<n-1; i++){
        long long int a;
        cin>>a;
        s += a;
    }
    cout<<sum - s;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;

void swap(lli arr[], lli i, lli j)
{
    lli a = arr[i];
    arr[i] = arr[j];
    arr[j] = a;
}

void solve(){
    lli n, k;
    cin>>n>>k;
    lli ans[n];
    for(lli i=0; i<n; i++) ans[i] = i+1;
    lli ind = 0;

    if(k%2==1)
    {
        cout<<"NO\n";
        return;
    }

    while(k != 0)
    {
        if(ind == n)
        {
            cout<<"NO\n";
            return;
        }
        if(k <= 2*(n - 2*ind - 1))
        {
            swap(ans, ind, ind + k/2);
            k = 0;
        }
        else {
            swap(ans, ind, n-ind-1);
            k -= 2*(n - 2*ind - 1);
        }
        ind++;
    }

    cout<<"YES\n";
    for(lli i:ans) cout<<i<<" ";
    cout<<endl;
}

int main(){
    fastIO;
    lli t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

int main(){
    int n, m;
    cin>>n>>m;
    long long int a[n], b[m], ps[n+1];
    ps[0] = 0;
    for(int i=0; i<n; i++){
        cin>>a[i];
    }
    for(int i=0; i<m; i++){
        cin>>b[i];
    }
    for(int i=1; i<n+1; i++){
        ps[i] = ps[i-1]+a[i-1];
    }
    for(int i=0; i<m; i++){
        for(int j=0; j<n; j++){
            if(b[i] <= ps[j+1]){
                cout<<j+1<<" "<<b[i]-ps[j]<<endl;
                break;
            }
        }
    }

}



#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;



void solve(int tc){

  
    int n, m;
    cin>>n>>m;
  
    int arr[n][m];
    vector<int> v[n][m];
    for(int i=0; i<n; i++)
    {
        for(int j=0; j<m; j++)
        {
             cin>>arr[i][j];   
            
             v[i][j].resize(4);
        }
    }


    

    v[0][0] = {arr[0][0], arr[0][0], arr[0][0], arr[0][0]};
    
    for(int i=1; i<m; i++)
    {
        int a = arr[0][i] + v[0][i-1][0];
        v[0][i] = {a, a, a, a};
    }
    for(int i=1; i<n; i++)
    {
        int a = arr[i][0] + v[i-1][0][0];
        v[i][0] = {a, a, a, a};
    }

   
    for(int i=1; i<n; i++)
    {
        for(int j = 1; j<m; j++)
        {
            int sm = INT_MAX, lar = INT_MIN, neg_max = INT_MIN, pos_min = INT_MAX;
            for(int k=0; k<3; k++)
            {
                sm = min(sm, arr[i][j] + min(v[i-1][j][k], v[i][j-1][k]));

                lar = max(lar, arr[i][j] + max(v[i-1][j][k], v[i][j-1][k]));
                
                if(arr[i][j] + v[i-1][j][k] <= 0) neg_max = max(neg_max, arr[i][j] + v[i-1][j][k]);
                else pos_min = min(pos_min, arr[i][j] + v[i-1][j][k]);
                if(arr[i][j] + v[i][j-1][k] <= 0) neg_max = max(neg_max, arr[i][j] + v[i][j-1][k]);
                else pos_min = min(pos_min, arr[i][j] + v[i][j-1][k]);

                
            }

            v[i][j] = {sm, lar, neg_max, pos_min};
        }
    }

    for(int i:v[n-1][m-1])
    {
        
        if(i == 0)
        {
            cout<<"YES\n";
            return;
        }
    }

    cout<<"NO\n";
}

int main(){
    fastIO;
    int t;
    cin>>t;
    for(int tc=1; tc<=t; tc++){
        solve(tc);
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

void solve()
{
    int a, b, c, d;
    cin>>a>>b>>c>>d;

    bool b1 = (c > min(a, b) && c < max(a, b));
    bool b2 = (d > min(a, b) && d < max(a, b));

    cout << ((b1^b2) ? "YES\n" : "NO\n");
}

int main()
{
    fastIO;
    int t;
    cin>>t;
    while(t--)
    {
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve()
{
    int n;
    cin >> n;
    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];
    sort(arr, arr+n);
    
    int ans = n;

    for(int i=0; i<n; i++)
    {
        if((arr[i]+arr[n-1])%2 == 0) ans = min(ans, i);
    }
    for(int i=n-1; i>=0; i--)
    {
        if((arr[i]+arr[0])%2 == 0) ans = min(ans, n-i-1);
    }

    cout << ans << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;


void solve(){
    string s;
    cin>>s;
    lli arr[size(s)];
    lli ind = size(s);
    for(lli i=size(s)-1; i>=0; i--)
    {
        arr[i] = ind;
        if(s[i]=='1')
        {
            ind = i;
        }
    }
    lli ans = 0, cnt=1;
    for(lli i=0; i<size(s)-1; i++)
    {
        if(s[i]=='1') cnt++;
        if(s[i]=='1' && s[i+1]=='0')
        {
            ans += cnt*(arr[i]-i-1);
        }
       

    }

    cout<<ans<<endl;

}

int main(){
    fastIO;
    lli t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

int ans(int n)
{
    if(n == 1) return 3;
    return ans(n/2)+2;
}

void solve(){
    int n;
    cin >> n;
    cout << ans(n) << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



void solve(){
    int n;
    cin >> n;
    string s;
    cin >> s;

    int ind=-1, ind1=-1;
    for(int i=0; i<n-1; i++)
    {
        if(s[i] > s[i+1])
        {
            ind = i;
            break;
        }
    }


    for(int i=ind; i<n; i++)
    {   
        if(s[i] > s[ind])
        {
            ind1 = i-1;
            break;
        }
    }
    
    if(ind != -1 && ind1 == -1)
    {
        rotate(s.begin() + ind, s.begin() + ind + 1, s.end());
    }
    if(ind != -1 && ind1 != -1)
    {
        rotate(s.begin() + ind, s.begin() + ind + 1, s.begin() + ind1+ 1);
    }

    cout << s << endl;



}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli, lli> pi;
vector<lli> ans(lli a, lli b, lli gap)
{
    vector<lli> v;
    if (gap <= 0)
        return v;

    if (a == 0)
    {
        if (b == 0)
            b = 1;
        while (gap != v.size())
        {
            if ((gap - v.size()) % 2 == 0)
                v.push_back(b);
            else
                v.push_back(2 * b);
        }
        return v;
    }

    else if (b == 0)
    {
        while (gap != v.size())
        {
            if ((v.size()) % 2 == 0)
                v.push_back(2 * a);
            else
                v.push_back(a);
        }
        return v;
    }

    vector<lli> empty;
    if (a < b)
    {
        lli temp = b;
        while (temp != a)
        {
            temp /= 2;
            v.push_back(temp);
            if (temp < a)
            {

                return empty;
            }
        }

        if (v.size() <= gap + 1 && (gap - v.size() + 2) % 2 == 1)
        {
            while (v.size() != gap + 1)
            {
                if ((gap - v.size() + 2) % 2 == 1)
                    v.push_back(2 * a);
                else
                    v.push_back(a);
            }

            v.pop_back();
            reverse(v.begin(), v.end());
            return v;
        }
        else
            return empty;
    }
    else
    {
        lli temp = a;
        while (temp != b)
        {
            temp /= 2;
            v.push_back(temp);
            if (temp < b)
            {
                return empty;
            }
        }

        if (v.size() <= gap + 1 && (gap - v.size() + 2) % 2 == 1)
        {
            while (v.size() != gap + 1)
            {
                if ((gap - v.size() + 2) % 2 == 1)
                    v.push_back(2 * b);
                else
                    v.push_back(b);
            }

            v.pop_back();
            return v;
        }
        else
            return empty;
    }
}

string bin(lli x)
{
    string ans = "";
    while (x != 0)
    {
        ans = to_string(x % 2) + ans;
        x /= 2;
    }
    return ans;
}

void solve()
{
    lli n;
    cin >> n;
    lli a[n];
    vector<lli> res;
    for (lli i = 0; i < n; i++)
    {
        cin >> a[i];
    }

    lli prev = 0, count = 0;

    for (lli i = 0; i < n; i++)
    {
        if (a[i] == -1)
        {
            count++;
            if (i == n - 1)
            {
                for (lli i : ans(prev, 0, count))
                    res.push_back(i);
            }
        }

        else
        {
            if (prev != 0)
            {
                string aa = bin(prev);
                string bb = bin(a[i]);

                lli comm = 0, len = 0;

                for (lli i = 0; i < min(aa.length(), bb.length()); i++)
                {
                    if (aa[i] == bb[i])
                    {
                        len++;
                        comm = comm * 2 + (aa[i] - '0');
                    }
                    else
                        break;
                }

                lli aop = aa.length() - len;
                lli bop = bb.length() - len;

                if (aop + bop <= count + 1)
                {
                    if (comm != prev && comm != a[i])
                    {
                        for (lli i : ans(prev, comm, aop - 1))
                            res.push_back(i);
                        res.push_back(comm);
                        for (lli i : ans(comm, a[i], count - aop))
                            res.push_back(i);
                        res.push_back(a[i]);
                    }
                    else
                    {
                        for (lli i : ans(prev, a[i], count))
                            res.push_back(i);
                        res.push_back(a[i]);
                    }

                    prev = a[i];
                    count = 0;
                }
                else
                {
                    cout << -1 << endl;
                    return;
                }
            }
            else
            {
                for (lli i : ans(0, a[i], count))
                    res.push_back(i);
                res.push_back(a[i]);
                count = 0;
                prev = a[i];
            }
        }
    }

    if (res.size() == n)
    {
        for (int i = 0; i < n - 1; i++)
        {
            if (res[i + 1] / 2 != res[i] && res[i] / 2 != res[i + 1])
            {
                cout << -1 << endl;
                return;
            }
        }
        for (int i : res)
            cout << i << " ";
        cout << endl;
    }
    else
        cout << -1 << endl;
}

int main()
{
    fastIO;
    lli t;

    cin >> t;
    while (t--)
    {
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


int main(){
    fastIO;
    lli n;
    cin>>n;
    int ind = 0, a = 0;
    string s = "codeforces";
    while(lli(pow(ind, 10)) <= n) ind ++;
    ind--;
    if(lli(pow(ind, 10)) == n) a = 0;
    else{
        while(lli(pow(ind+1, a))*lli(pow(ind, 10-a))<n){
            a++;
        }
    }
    for(int i=0; i<a; i++){
        for(int j=0; j<1+ind; j++) cout<<s[i];
    }
    for(int i=a; i<10; i++){
        for(int j = 0; j<ind; j++) cout<<s[i];
    }
}

#include <bits/stdc++.h>
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    lli n;
    cin>>n;
    lli a[n];
    for(lli i = 0; i<n ; i++){
        cin>>a[i];
    }
    lli pow_2 = 0, sum = 0;
    for(int i = 0 ; i<n ; i++){
        pow_2 = 0;
    while(1){
        if((a[i] & (1 << pow_2)) == 0){
            sum += pow_2;
            break;
        }
        pow_2++;
    }
  

    }
    pow_2 = 0;
     while(1){
        if((n & (1 << pow_2)) == 0){
               pow_2++;
            break;
        }
     
    }
    if(sum >= (1 << n)){
        cout<<0<<endl;
        }
    
    else

}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n, x, y;
    cin>>n>>x>>y;
    cout<<(n+min(x, y)-1)/(min(x, y))<<endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

class segtree
{
    int size;
    vector<int> sums;

public:
    segtree(int n = 1)
    {
        size = 1;
        while (size < n)
            size *= 2;
        sums.assign(2 * size, 0);
    }

    void build(vector<int> &v, int x, int lx, int rx)
    {
        if(rx - lx == 1)
        {
            if(lx < v.size())
                sums[x] = v[lx];
            return;
        }

        int m = (lx+rx)/2;

        build(v, 2*x+1, lx, m);
        build(v, 2*x+2, m, rx);

        sums[x] = sums[2*x+1] + sums[2*x+2];
    }

    void build(vector<int> &v)
    {
        build(v, 0, 0, size);
    }

    void set(int i, int v, int x, int lx, int rx)
    {
        if (rx - lx == 1)
        {
            sums[x] = v;
            return;
        }

        int m = (lx + rx) / 2;

        if (i < m)
            set(i, v, 2 * x + 1, lx, m);
        else
            set(i, v, 2 * x + 2, m, rx);

        sums[x] = sums[2 * x + 1] + sums[2 * x + 2];
    }

    void set(int i, int v)
    {
        set(i, v, 0, 0, size);
    }

    int sum(int l, int r, int x, int lx, int rx)
    {
        if (l >= rx || r <= lx)
            return 0;
        if (lx >= l && rx <= r)
            return sums[x];

        int m = (lx + rx) / 2;
        int s1 = sum(l, r, 2 * x + 1, lx, m);
        int s2 = sum(l, r, 2 * x + 2, m, rx);

        return s1 + s2;
    }

    int sum(int l, int r)
    {
        return sum(l, r, 0, 0, size);
    }
};

signed main(){
    fastIO;
    int n, ans = 0;
    cin >> n;
    vector<pair<int, int> > v;

    for(int i=0; i<n; i++)
    {
        int x;
        cin >> x;
        v.push_back({x, i});
    }

    sort(v.begin(), v.end());

    segtree st1(n);
    segtree st2(n);

    for(int i=0; i<n; i++)
    {
        int x = v[i].second;
        st1.set(x, 1);
        int y = st2.sum(x + 1, n);
        st2.set(x, st1.sum(x+1, n));
        ans += y;
    }

    cout << ans << endl;
}

#include<stdio.h>
#include<string.h>
#include<stdlib.h>

int main(){
    struct Node{
    char word[101];
};

    int n;
    scanf("%d",&n);
    struct Node a[n];
    for(int i=0;i<n;i++){
    scanf("%s",a[i].word);
    }
    for(int k=0;k<n;k++){
    int size=strlen(a[k].word);
    
    if(size>10){
        printf("%c%d%c\n",a[k].word[0],size-2,a[k].word[size-1]);
    }
    else{
        printf("%s\n",a[k].word);
    }
}
return 0;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;
const lli MOD = (lli)1e9 + 7;
const lli N = (lli)1e6 + 1;
lli fact[N];


lli inv_mod(lli a, lli p){
    a %= MOD;
    lli q = p-2;
    lli res = 1;
    while (q > 0) {
        if (q & 1)
            res = (res * a)%p;
        a = (a * a)%p;
        q >>= 1;
    }
    return res%p;
}

bool is_good(lli n, lli a, lli b)
{
    while(n > 0)
    {
        if(n%10 != a && n%10 != b) return 0;
        n /= 10;
    }

    return 1;
}


int main(){
    fact[0] = 1;
    for(int i=1; i<N; i++)
    {
        fact[i] = (i*fact[i-1]) % MOD;
    }
    
    fastIO;
    lli a, b, n, ans = 0;
    cin>>a>>b>>n;
    if(a > b)
    {
        lli temp = b;
        b = a;
        a = temp;
    }
  
    for(lli sum = a*n; sum <= b*n; sum++)
    {
        if(is_good(sum, a, b))
        {
            if(a == b && sum == n*b) ans = (ans + 1) % MOD;
            if((sum - n*b) % (a-b) == 0)
            {
                lli x = (sum - n*b)/(a-b);
                if(x > 0 && x < n)
                {

                    lli a = (fact[n] * inv_mod((fact[n-x] * fact[x]) % MOD, MOD)) % MOD;
                    ans = (ans + a) % MOD;
                
                }
                if(x == 0 || x == n) ans += 1;
            }
            
        }
    }
    cout<<ans % MOD;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

bool ask(string s)
{
    cout << "? " << s << endl; 
    bool b;
    cin>>b;
    return b;
}

void solve(){
    int n;
    cin>>n;
    string s = "";
    while(1)
    {
        if(s.length() == n) break;
        s.push_back('1');
        if(ask(s))
        {
            continue;
        }

        s.pop_back();
        s.push_back('0');
        
        if(ask(s))
        {
            continue;
        }
        s.pop_back();
        break;
    }
    reverse(s.begin(), s.end());

    while(1)
    {
        if(s.length() == n) break;

        s.push_back('1');
        reverse(s.begin(), s.end());
        if(ask(s))
        {
            reverse(s.begin(), s.end());
            continue;
        }
        reverse(s.begin(), s.end());

        s.pop_back();
        s.push_back('0');

        continue;
        
        reverse(s.begin(), s.end());
        if(ask(s))
        {
            reverse(s.begin(), s.end());
            continue;
        }

        break;
    }
    reverse(s.begin(), s.end());

    cout << "! " << s << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


signed main(){
    fastIO;
    int n;
    cin >> n;

    vector<int> arr(n);
    for(int i=0; i<n; i++) cin >> arr[i];

    function<bool(int)> check = [&](int k) -> bool
    {
        int count = 0;

        for(int i: arr) if(i >= k) count++;
        return count >= k;
    };

    for(int i=n; i>=0; i--)
    {
        if(check(i))
        {
            cout << i << endl;
            return 0;
        }
    }


    
}

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;
#define int long long

signed main()
{
    fastIO;
    int n, m;
    cin >> n >> m;
    int arr[n];
    
    for (int i = 0; i < n; i++)
        cin >> arr[i];

    if(n > m)
    {
        cout<<"YES\n";
        return 0;
    }

    bool dp[n][m];
    memset(dp, 0, sizeof(dp));
    
    dp[0][arr[0] % m] = 1;

    for (int i = 1; i < n; i++)
    {
        for (int j = 0; j < m; j++)
        {
            dp[i][arr[i]%m] = 1;
            dp[i][j] = (dp[i - 1][(j + m - (arr[i] % m)) % m]) | (dp[i - 1][j]);
        }
    }

    cout << ((dp[n - 1][0]) ? "YES\n" : "NO\n");
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long



void solve(){
    int n;
    cin >> n;
    int arr[n][n];
    for(int i=0; i<n; i++) for(int j=0; j<n; j++) arr[i][j] = -1;

    int t = n*n;
    int x = 0, y = 0;
    int num = n*n-1;
    char curr = 'R';
    
    while(t--)
    {
        arr[x][y] = (num--);
        if(curr == 'R' && (y+1 >= n || arr[x][y+1] != -1))
        {
            curr = 'D';
        }

        if(curr == 'D' && (x+1 >= n || arr[x+1][y] != -1))
        {
            curr = 'L';
        }

        if(curr == 'L' && (y-1 < 0 || arr[x][y-1] != -1))
        {
            curr = 'U';
        }

        if(curr == 'U' && (x-1 < 0 || arr[x-1][y] != -1))
        {
            curr = 'R';
        }

        if(curr == 'R')
        {
            y++;
        }
        else if(curr == 'D')
        {
            x++;
        }
        else if(curr == 'L')
        {
            y--;
        }
        else x--;
    }

    for(int i=0; i<n; i++)
    {
        for(int j=0; j<n; j++) cout << arr[i][j] << " ";
        cout << endl;
    }

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    int arr[n];
    for(int i=0; i<n; i++) cin>>arr[i];
    sort(arr, arr+n);
    cout<<arr[n/2]<<endl;
    
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n;
    cin>>n;
    long long int arr[n];
    for(int i=0; i<n; i++){
        cin>>arr[i];
    }
    int ind=0;
    for(int i=n-1; i>0; i--){
        if(arr[i]<arr[i-1]){
            ind = i;
            break;
        }
    }
    
    int max=0;
    for(int i=0; i<ind; i++){
        if(arr[i]>max){
            max = arr[i];
        }
    }
    cout<<max<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

#define int long long


signed main()
{
    fastIO;
    int n, m;
    cin>>n>>m;
    unordered_map<string, int> mp;
    for(int i=0; i<n; i++)
    {
        string s, s1 = "";
        cin>>s;
        for(int i = 0; i<s.length(); i++)
        {
            if(s[i] == 'a' || s[i] == 'b' || s[i] == 'c'){s1.push_back('2');}
            else if(s[i] == 'd' || s[i] == 'e' || s[i] == 'f'){s1.push_back('3');}
            else if(s[i] == 'g' || s[i] == 'h' || s[i] == 'i'){s1.push_back('4');}
            else if(s[i] == 'j' || s[i] == 'k' || s[i] == 'l'){s1.push_back('5');}
            else if(s[i] == 'm' || s[i] == 'n' || s[i] == 'o'){s1.push_back('6');}    
            else if(s[i] == 'p' || s[i] == 'q' || s[i] == 'r' || s[i] == 's'){s1.push_back('7');}
            else if(s[i] == 't' || s[i] == 'u' || s[i] == 'v'){s1.push_back('8');}
            else s1.push_back('9');
            mp[s1]++;
        }
    }

    for(int i=0; i<m; i++) 
    {
        string s;
        cin>>s;
        cout << mp[s] << endl;
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n;
    cin >> n;
    int arr[n];
    int z=0;

    for(int i=0; i<n; i++)
    {
        cin >> arr[i];
        if(arr[i] == 0) z=1;
    }

    if(z == 0) {cout << "YES\n";return;}

    for(int i=1; i<n; i++)
    {
        if(arr[i] == arr[i-1] && arr[i] == 0)
        {
            cout << "YES\n";
            return;
        }
    }

    cout << "NO\n";
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long

void solve(){
    int n;
    cin >> n;
    int arr[n];

    for(int i=0; i<n; i++) cin >> arr[i];

    bool a=1,b=1;

    for(int i=0; i<n-1; i++)
    {
        if(arr[i] - arr[i+1] < 2) a = 0;
        if(arr[i+1] - arr[i] < 2) b = 0;
        if(abs(arr[i] - arr[i+1]) <= 1)
        {
            cout << 0 << endl;
            return;
        }
    }

    cout << ((a|b) ? -1 : 1) << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli, lli> pi;

const int MOD = 1e9 + 7;

void solve()
{
    lli n, m;
    string s = "";
    cin >> n >> m;

    lli a[n][m], b[n][m];

    vector<lli> row1(n, 0), row2(n, 0), col1(m, 0), col2(m, 0), row1m(n, 1), row2m(n, 1), col1m(m, 1), col2m(m, 1);

    for (lli i = 0; i < n; i++)
    {
        for (lli j = 0; j < m; j++)  cin >> a[i][j];
    }

    for (lli i = 0; i < n; i++)
    {
        for (lli j = 0; j < m; j++)  cin >> b[i][j];
    }

    for (lli i = 0; i < n; i++)
    {
        for (lli j = 0; j < m; j++)
        {
            row1[i] += a[i][j];
            row2[i] += b[i][j];
            row1m[i] *= a[i][j];
            row1m[i] %= MOD;
            row2m[i] *= b[i][j];
            row2m[i] %= MOD;
        }
    }

    for (lli j = 0; j < m; j++)
    {
        for (lli i = 0; i < n; i++)
        {
            col1[j] += a[i][j];
            col2[j] += b[i][j];
            col1m[j] *= a[i][j];
            col1m[j] %= MOD;
            col2m[j] *= b[i][j];
            col2m[j] %= MOD;
        }
    }

    sort(row1.begin(), row1.end());
    sort(row2.begin(), row2.end());
    sort(row1m.begin(), row1m.end());
    sort(row2m.begin(), row2m.end());
    sort(col1.begin(), col1.end());
    sort(col2.begin(), col2.end());
    sort(col1m.begin(), col1m.end());
    sort(col2m.begin(), col2m.end());

    for (lli i = 0; i < n; i++)
    {
        if (row1[i] != row2[i])
        {
            cout << "NO\n";
            return;
        }
    }

    for (lli i = 0; i < n; i++)
    {

        if (row1m[i] != row2m[i])
        {
            cout << "NO\n";
            return;
        }
    }

    for (lli i = 0; i < m; i++)
    {
        if (col1[i] != col2[i])
        {
            cout << "NO\n";
            return;
        }
    }

    for (lli i = 0; i < m; i++)
    {
        if (col1m[i] != col2m[i])
        {
            cout << "NO\n";
            return;
        }
    }

    cout << "YES\n";
}

int main()
{
    fastIO;
    lli t;
    cin >> t;

    while (t--)
    {
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;

const int N = 1e6+10;

int spf[N];
vector<int> primes;

void seive(int n)
{
    for(int i=2; i<n; i++)
    {
        if(spf[i] == -1)
        {
            primes.push_back(i);
            spf[i] = i;
        }

        for(int j = 0; j < primes.size() && i * primes[j] < n; j++)
        {
            if(spf[i * primes[j]] == -1)
                spf[i * primes[j]] = min(spf[i], spf[primes[j]]);  
            if (i % primes[j] == 0) break; 
        }
        
    }
}


signed main(){
    fastIO;
    memset(spf, -1, sizeof(spf));
    seive(N);
    int n;

    cin>>n;

    while(n != 1)
    {
        cout << spf[n];
        n /= spf[n];
        if(n != 1) cout<<"*";
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, m, ans = 0;
    cin >> n >> m;
    int a[n], b[n];
    a[0] = 1;
    for(int i=1; i<n; i++) cin >> a[i];
    for(int i=0; i<n; i++) cin >> b[i];
    sort(a, a+n);
    sort(b, b+n);
    auto ptr = b;
    for(int i=0; i<n; i++)
    {
        if(lower_bound(b, b + n, a[i] + 1) != b + n && ptr != b + n)
        {
            ans ++;
            ptr = max(ptr + 1, 1+lower_bound(b, b + n, a[i] + 1));
        }
    }
    cout << n - ans << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n, x;
    cin >> n >> x;
    int ans[n + 1];
    for(int i=1; i<=n; i++) ans[i] = i;

    for(int i=1; i<=n; i++)
    {
        int num = x^i;
        if(num >= 1 && num <= n && ans[i] == i && ans[num] == num) swap(ans[i], ans[num]);
    }

    for(int i=1; i<=n; i++) cout << ans[i] << " ";
    cout << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    long long int n, m, sum = 0;
    cin>>n>>m;
    deque <int> v1, v2;
    for(int i=0; i<n; i++){
        int a;
        cin>>a;
        v1.push_back(a);
    }
    for(int i=0; i<m; i++){
        int a;
        cin>>a;
        v2.push_back(a);
    }
    sort(v1.begin(), v1.end());
    sort(v2.begin(), v2.end());
    
    while(v1.size()>0){
        int a1 = abs(v1[0]-v2[0]);
        int a2 = abs(v1[0]-v2[v2.size()-1]);
        int b1 = abs(v1[v1.size()-1]-v2[0]);
        int b2 = abs(v1[v1.size()-1] - v2[v2.size()-1]);
        if(max(a1, a2)>max(b1, b2)){
            if(a1>a2){
                sum+=a1;
                v1.pop_front();
                v2.pop_front();
            }
            else{
                sum+=a2;
                v1.pop_front();
                v2.pop_back();
            }
        }
        else{
            if(b2>b1){
                sum+=b2;
                v1.pop_back();
                v2.pop_back();
            }
            else{
                sum+=b1;
                v1.pop_back();
                v2.pop_front();
            }
        }
    }
   cout<<sum<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    long long int m, k, a1, ak;
    cin>>m>>k>>a1>>ak;
    long long int kcoin, onecoin;
    if(m/k <= ak){
        kcoin = m/k;
    }
    else{
        kcoin = ak;
    }
    if((m-k*kcoin)<=a1){
        onecoin = (m-k*kcoin);
    }
    else{
        onecoin = a1;
    }
    
    
    long long int remburyles = m-onecoin-k*kcoin;
    if(k-remburyles%k<=a1 && remburyles%k!=0){
    cout<<(remburyles/k)+1<<endl;    
    }
    else{
    cout<<(remburyles/k)+(remburyles%k)<<endl;
    }
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
typedef long long int lli;


void seive(lli n)
{
 bool is_prime[n+1];
 memset(is_prime, true, sizeof(is_prime));
    for(lli i = 2; i <= n; i++)
    {
        if(is_prime[i])
        {
            for(lli j = i*i; j <= n; j += i)
            {  
                is_prime[j] = 0;
            }
        }
    }
}



const lli N = 1e7 + 10;


lli spf[N];
lli answ[N];

lli binpow(lli a, lli b) {
    lli res = 1;
    while (b > 0) {
        if (b & 1)
            res = res * a;
        a = a * a;
        b >>= 1;
    }
    return res;
}


lli d(lli n){
    lli ans = 1;
    lli c = 1, prev = spf[n];
    while(n != 1)
    {
        if(spf[n/spf[n]] == spf[n])
        {
        n /= spf[n];
        c++;
        }
        else
        {
            ans = (ans*(binpow(spf[n], c+1) - 1))/(spf[n] - 1); 
            c = 1;
            n /= spf[n];
        }
    }
    return ans;
}



void solve(){
    lli c;
    cin>>c;
    /*
    for(lli i = 1; i <= c; i++)
    {
        if(d(i) == c){
            cout<<i<<endl;
            return;
        }
    }
    */
    cout<<answ[c]<<endl;
}



int main(){
    

    for(lli i=0; i < N; i++) spf[i] = i;

    for(lli i = 2; i < N; i++)
    {
        if(spf[i] == i)
        {
            for(lli j = i*i; j < N; j += i) {
                if(spf[j] == j)
                spf[j] = i;
            }
        }
    }
    memset(answ, -1, sizeof(answ));

    for(int i=N-1; i>=1; i--)
    {
        if(d(i) < N)
        answ[d(i)] = i;
    }


    
    fastIO;
    lli t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

signed main(){
    fastIO;
    int n;
    cin >> n;

    vector<vector<int>> adj(n+1);
    vector<int> num(n+1);

    int root;

    for(int i=1; i<=n; i++)
    {
        int p;
        cin >> p >> num[i];
        if(p == 0) root = i;
        else adj[p].push_back(i);
    }

    int a = 1;

    bool no = 0;

    function <multiset<pair<int, int>>(int)> dfs = [&](int u) -> multiset <pair<int, int>>
    {
        multiset<pair<int, int>> s;

        for(int v: adj[u])
        {
            for(auto i : dfs(v)) s.insert(i);
        }

        int count = 0;

        if(s.size() < num[u]) 
        {
            no = 1;
            
            return s;
        }

        auto ptr = s.begin();
        multiset<pair<int, int>> s1;
        while(count < num[u])
        {
            s1.insert(*ptr);
            ptr++;
            count++;
        }

        if(ptr == s.end())
        {
            s.insert({a++, u});
            return s;
        }

        pair<int, int> p = {(*ptr).first, u};

        while(ptr != s.end())
        {
            s1.insert({(*ptr).first + 1, (*ptr).second});
            ptr++;
        }

        s1.insert(p);

        ptr = s1.end();
        ptr--;
        a = (*ptr).first + 1;

        return s1;
    };    

    map <int, int> mp;

    for(auto i: dfs(root))
    {
        mp[i.second] = i.first;
    }

    if(no)
    {
        cout << "NO\n";
        return 0;
    }

    cout << "YES\n";
    for(int i=1; i<=n; i++) cout << mp[i] << " ";

}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;


lli prev_ind_bin_search(lli arr[], lli n, lli k)
{
    lli l = 0, r = n-1;
    lli m = (l + r)/2;

    while(l<r)
    {
        
        if(arr[l] == k) return l;
        if(arr[r] <= k) return r;
        if(r-l == 1) return l;
        else if(arr[m] > k)
        {
            r = m;
        }
        else l = m;
        m = (l+r)/2;
    }
    return r;
    
}


void solve(){
    lli n, k, q;
    cin>>n>>k>>q;
    lli a[k+1], b[k+1];
    a[0] = 0;
    b[0] = 0;
    for(lli i=1; i<=k; i++) cin>>a[i];
    for(lli i=1; i<=k; i++) cin>>b[i];
    for(lli i=0; i<q; i++)
    {
        lli query;
        cin>>query;
        lli index = prev_ind_bin_search(a, k, query);
        if(query != n)
        cout<<b[index] + ((b[index+1]-b[index])*(query-a[index]))/(a[index+1] - a[index])<<" ";
        else cout<<b[k]<<' ';
    }
    cout<<endl;

}

int main(){
    
    fastIO;
    lli t;
    cin>>t;
    while(t--){
        solve();
    }
}



/*

#include <bits/stdc++.h>
using namespace std;
typedef long long int lli;
typedef long double d;

int main(){
    int t;
    cin>>t;
    int number = 0;
    while(t--) {
        int n,k,q;
        cin>>n>>k>>q;

   

        vector<d> vk, vb, vs;
        vk.push_back(0);
        vb.push_back(0);
        for (int i = 0; i < k; i++) {
            int num;
            cin>>num;
            vk.push_back(num);
        }
        for (int i = 0; i < k; i++) {
            int num;
            cin>>num;
            vb.push_back(num);
            // vs.push_back(vk[i]/num);
        }

         if(number < 227 && number+q >= 227)
    {
        string s = "";
        s += to_string(n) + '.' + to_string(k) + '.' + to_string(q) + '.';
        for(int i:vk) s += to_string(i) + '.';
        for(int i:vb) s += to_string(i) + '.';
        cout<<s;
        return 0;
    }

        number += q;


        for (int i = 0; i < k; i++) {
            vs.push_back((vk[i+1] - vk[i])/(vb[i+1] - vb[i]));
        }
        while(q--){
            d query, index;
            cin>>query;
            index = lower_bound(vk.begin(), vk.end(), query) - vk.begin();
            if(query == 0) index = 1;
            int ans;
            ans = vb[index-1] + (int)((query - vk[index-1])/vs[index-1]);
            // if(vk[index+1] == query){
            //     ans = vb[index+1];
            // }
            // cout<<query - vk[index]<<" ";
            cout<<ans<<" ";
        }
        cout<<endl;
    }
    return 0;
}

*/

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;

lli max_div_pow(lli num, lli p){
    lli ans = 0, value = 1;

    while(num % value == 0){
        value *= p;
        ans++;
    }
    return ans-1;
}

lli max_pow_less(lli num, lli p){
    lli ans = 0, value = 1;
    while(num >= value){
        value *= p;
        ans++;
    }
    return ans-1;
}

void solve(){
    lli n, k;
    cin>>n>>k;
    lli a = n;
    while(a%10 == 0) a/=10;
    if(a%2 != 0 && a%5 != 0){
        if(to_string(k).length() == 1) cout << (n * k) <<endl;
        else cout << (n * lli(pow(10, to_string(k).length()-1)) * ( k / lli(pow(10, to_string(k).length()-1) ))) << "\n";

    }
    if(a%2 == 0){
        lli po = lli(pow(5, min(max_pow_less(k, 5), max_div_pow(a, 2))));
        while(po <= k) po *= 10;
        po /= 10;
        cout<<(n*po*(k/po))<<"\n";
    }
    if(a%5 == 0){
        lli po = lli(pow(2, min(max_pow_less(k, 2), max_div_pow(a, 5))));
        while(po <= k) po *= 10;
        po /= 10;
        cout<<(n*po*(k/po))<<"\n";
    }

}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

const int N = 5e5 + 1;
int arr[N];


signed main(){
    for(int i = 0; i<N; i++) arr[i] = i;
    fastIO;
    int q;
    cin>>q;

    vector<vector<int>> querries;
    vector<int> ans;
    for(int i=0; i<q; i++)
    {
        int a;
        cin>>a;
        if(a == 1)
        {
            int x;
            cin>>x;
            querries.push_back({1, x});
        }
        else 
        {
            int x, y;
            cin>>x>>y;
            querries.push_back({2, x, y});
        }
    }

    reverse(querries.begin(), querries.end());

    for(int i = 0; i<q; i++)
    {
        if(querries[i][0] == 1) ans.push_back(arr[querries[i][1]]);
        else 
        {   
            arr[querries[i][1]] = arr[querries[i][2]];
        }
    }

    reverse(ans.begin(), ans.end());
    for(int i:ans) cout<<i<<" ";
    
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;


void solve()
{
    lli r;
    cin>>r;
    lli ans = 0;
    for(lli x = -r; x <= r; x++)
    {
        lli y_min = sqrt(r*r - x*x);
        lli y_max = sqrt((r+1)*(r+1) - x*x);
        if(y_max * y_max == (r+1)*(r+1) - x*x)
        {
            y_max--;
        }
        if(y_min*y_min < r*r - x*x ) y_min++;


        ans += 2*(y_max - y_min+1);
        if(y_min == 0) ans--;

    }
    cout << ans << endl;

}

int main(){
    fastIO;
    lli t;
    cin>>t;
    while(t--)
    {
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;


int main(){
long long int n, m, a;
long long int na, ma;
cin>>n>>m>>a;
if(n%a==0){
na = n/a;
}
else{
    na = n/a+1;
}

if(m%a==0){
ma = m/a;
}
else{
    ma = m/a+1;
}
cout<<na*ma<<endl;
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n, max=0, min=INT_MAX, c=0;
    cin>>n;
    int arr[n][2];
    for(int i=0; i<n; i++){
        cin>>arr[i][0]>>arr[i][1];
        if(arr[i][0]==1){
            if(arr[i][1]>=max){
                max=arr[i][1];
            }
        }
        if(arr[i][0]==2){
            if(arr[i][1]<=min){
                min = arr[i][1];
            }
        }
    }
    for(int i=0; i<n; i++){
        if(arr[i][0]==3){
            if(arr[i][1]>=max && arr[i][1]<=min){
                c++;
            }
        }
    }
    if(min>=max){
    cout<<min-max+1-c<<endl;
    }
    else{
        cout<<0<<endl;
    }


}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, m, k, ma = 0;
    cin>>n>>m>>k;
    int arr[m];
    for(int i=0; i<m; i++){
        
        cin>>arr[i];
        ma = max(ma, arr[i]);
    }
    if(ma > (n+k-1)/k) cout<<"NO\n";
    else{
       int count = 0;
       for(int i=0; i<m; i++){
        if(arr[i] > n/k) count++;
       }
       if(count > n % k) cout<<"NO\n";
       else cout<<"YES\n";
    }
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    string s;
    cin>>s;
    if((int(s[0])-48)*(int(s[1])-48)*(int(s[2])-48)*(int(s[3])-48) == (int(s[4])-48)*(int(s[5])-48)*(int(s[6])-48)*(int(s[7])-48)){
        cout<<"YES"<<endl;
    }
    else{
        cout<<"NO"<<endl;
    }
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;

int binarySearch(lli arr[], int low, int high, lli x) 
{ 
    
    if (high >= low) { 
       
        int mid = low + (high - low) / 2; 
  
    
        if (arr[mid] == x) 
            return mid; 
  
      
        if (arr[mid] > x) 
            return binarySearch(arr, low, mid - 1, x); 
  
       
        return binarySearch(arr, mid + 1, high, x); 
    } 
  

    return -1; 
} 


void solve(){
   int n;
   cin>>n;
   lli a[n], b[n], p_sum[n+1];
   for(int i=0; i<n; i++){
    cin>>a[i];
    b[i] = a[i];
   }
    sort(b, b+n);
    p_sum[0] = 0;
    for(int i=1; i<=n; i++){
        p_sum[i] = p_sum[i-1] + b[i-1];
    }

    for(int i=0; i<n; i++){
        int ind = binarySearch(b, 0, n-1, a[i]);
        lli sum = p_sum[n] - 2*p_sum[ind];
        sum += a[i]*(ind - (n-ind));
        cout<<sum+n<<" ";

}

cout<<"\n";


}

int main(){
    
    
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;

vector<int> curr_colour;
vector<int> final_colour;
vector<vector<int>> adj;
int steps = 1;

void dfs(int u)
{
    for (int v : adj[u])
    {
        if (curr_colour[v] == -1)
        {
            if (final_colour[v] != curr_colour[u])
            {
                steps++;
            }
            curr_colour[v] = final_colour[v];
            dfs(v);
        }
    }
}

int main()
{
    fastIO;
    int n;
    cin >> n;
    curr_colour.resize(n + 1, -1);
    final_colour.resize(n + 1);
    adj.resize(n + 1);

    for (int i = 2; i <= n; i++)
    {
        int u;
        cin >> u;
        adj[u].push_back(i);
        adj[i].push_back(u);
    }

    for (int i = 0; i < n; i++)
    {
        int c;
        cin >> c;
        final_colour[i + 1] = c;
    }

    curr_colour[1] = final_colour[1];
    dfs(1);
    cout << steps << endl;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    lli n;
    cin>>n;
    lli arr[n];
    for(lli i=0; i<n; i++){
        cin>>arr[i];
    }
    sort(arr, arr+n);
    lli ans = 0;
    for(lli i=0; i<n-1; i++){
        if(arr[i]==arr[i+1]) ans++;
    }
    cout<<ans<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}



#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 




long get(vector<int> efficiency, int k) 
{
    int n = efficiency.size();
    k = k - 1;
    int x = efficiency[k];
    vector<int> arr(n);

    for (int i = 0; i < n; ++i) 
    {
        if (efficiency[i] > x) arr[i] = 1;
        else if (efficiency[i] < x) arr[i] = -1;
        else arr[i] = 0;
    }

    map<int, int> even, odd;
    int sum = 0;
    even[0] = 1; 

    for (int i = k - 1, par = 1; i >= 0; --i, par ^= 1) 
    {
        sum += arr[i];
        if (par == 0) even[sum]++;
        else odd[sum]++;
    }

    long ans=0;
    sum=0;

    for(int i=k,par=0; i<n;++i,par^= 1) 
    {
        sum+= arr[i];
        if(par == 0) 
        {
            if (even.count(-sum)) ans +=even[-sum];
        } 
        else 
        {
            if (odd.count(-sum)) ans+=odd[-sum];
        }
    }   
    return ans;
}

signed main()
{
    fastIO;
    int n, k;
    cin >> n >> k;
    vector<int> v(n);
    for(int i=0; i<n; i++) cin >> v[i];
    cout << get(v, k) << endl;
}





#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;

int main(){
    fastIO;
    lli n, ans = 0;
    cin>>n;
    while(n != 0){
        ans += n/5;
        n /= 5;
    }
    cout<<ans;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long

int orr(int n)
{
    int ans = 1;
    while(ans <= n) ans*=2;
    return ans-1;
}

void solve(){

    int n, ans = 0;
    cin >> n;
    int arr[n];

    for(int i=0; i<n; i++) cin >> arr[i];
    int prev = arr[0];

    for(int i=1; i<n; i++)
    {   
        int l = 0, r = 1e10;
        int m = (l+r)/2;

        while(l <= r)
        {
            if((orr(m)|arr[i]) >= prev) r = m-1;
            else l = m + 1;
            m = (l+r)/2;
        }

        ans = max(ans, l);
        prev = (orr(l)|arr[i]);
    }

    cout << ans << endl;
    
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, m;
    cin>>n>>m;
    int arr[n][m];
    for(int i=0; i<n; i++)
    {
        for(int j=0; j<m; j++) cin>>arr[i][j];
    }
    for(int i=0; i<n; i++)
    {
        for(int j=0; j<m; j++)
        {
            if(i != 0 && j != 0 && i != n-1 && j != m-1)
            arr[i][j] = min(arr[i][j], max(max(arr[i+1][j], arr[i][j+1]), max(arr[i-1][j], arr[i][j-1])));

            if(n == 1)
            {
                if(j == 0)
                {
                    arr[i][j] = min(arr[i][j+1], arr[i][j]);
                }
                else if(j == m-1)
                {
                    arr[i][j] = min(arr[i][j], arr[i][j-1]);
                }
                else {
                    arr[i][j] = min(arr[i][j], max(arr[i][j-1], arr[i][j+1]));
                }
            }
            else if(m==1)
            {
                if(i == 0)
                {
                    arr[i][j] = min(arr[i][j], arr[i+1][j]);
                }
                else if(i == n-1)
                {
                    arr[i][j] = min(arr[i][j], arr[i-1][j]);
                }
                else {
                    arr[i][j] = min(arr[i][j], max(arr[i-1][j], arr[i+1][j]));
                }
            }
            else if(i == 0 && j == 0)
            {
                arr[i][j] = min(arr[i][j], max(arr[i+1][j], arr[i][j+1]));
            }
            else if(i == 0 && j == m-1)
            {
                arr[i][j] = min(arr[i][j], max(arr[i+1][j], arr[i][j-1]));
            }
            else if(i == 0 && j != m-1)
            {
                arr[i][j] = min(arr[i][j], max(max(arr[i+1][j], arr[i][j+1]), arr[i][j-1]));
            }
            else if(j == 0 && i == n-1)
            {
                arr[i][j] = min(arr[i][j], max(arr[i][j+1], arr[i-1][j]));
            }
            else if(j == 0 && i != n-1)
            {
                arr[i][j] = min(arr[i][j], max(max(arr[i+1][j], arr[i][j+1]), arr[i-1][j]));
            }
            else if(i == n-1 && j == m-1)
            {
                arr[i][j] = min(arr[i][j],max(arr[i-1][j], arr[i][j-1]));
            }
            else if(i == n-1)
            {
                arr[i][j] = min(arr[i][j], max(arr[i][j+1], max(arr[i-1][j], arr[i][j-1])));
            }
            else if(j == m-1)
            {
                arr[i][j] = min(arr[i][j], max(arr[i+1][j], max(arr[i-1][j], arr[i][j-1])));
            }
        }
    }
    for(int i=0; i<n; i++)
    {
        for(int j =0; j<m; j++)
        {
            cout<<arr[i][j]<<" ";
        }
        cout<<endl;
    }
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    lli x;
    cin>>x;
    if(x%2 == 1) cout << -1 << "\n";
    else if( (x & (x/2)) != 0 )cout << -1 << "\n";
    else cout<< x + (x/2) << " " << x/2 << "\n";
}

int main(){
    
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

// 1
// 1
// 2
// 1 1
// 2
// 1 2
// 2
// 2 1
// 2
// 2 2
// 3
// 1 1 1
// 3
// 1 1 2
// 3
// 1 1 3
// 3
// 1 2 1
// 3
// 1 2 2
// 3
// 1 2 3
// 3
// 1 3 1
// 3
// 1 3 2
// 3
// 1 3 3
// 3
// 2 1 1
// 3
// 2 1 2
// 3
// 2 1 3
// 3
// 2 2 1
// 3
// 2 2 2
// 3
// 2 2 3
// 3
// 2 3 1
// 3
// 2 3 2
// 3
// 2 3 3
// 3
// 3 1 1
// 3
// 3 1 2
// 3
// 3 1 3
// 3
// 3 2 1
// 3
// 3 2 2
// 3
// 3 2 3
// 3
// 3 3 1
// 3
// 3 3 2
// 3
// 3 3 3
// 4
// 1 1 1 1
// 4
// 1 1 1 2
// 4
// 1 1 1 3
// 4
// 1 1 1 4
// 4
// 1 1 2 1
// 4
// 1 1 2 2
// 4
// 1 1 2 3
// 4
// 1 1 2 4
// 4
// 1 1 3 1
// 4
// 1 1 3 2
// 4
// 1 1 3 3
// 4
// 1 1 3 4
// 4
// 1 1 4 1
// 4
// 1 1 4 2
// 4
// 1 1 4 3
// 4
// 1 1 4 4
// 4
// 1 2 1 1
// 4
// 1 2 1 2
// 4
// 1 2 1 3
// 4
// 1 2 1 4
// 4
// 1 2 2 1
// 4
// 1 2 2 2
// 4
// 1 2 2 3
// 4
// 1 2 2 4
// 4
// 1 2 3 1
// 4
// 1 2 3 2
// 4
// 1 2 3 3
// 4
// 1 2 3 4
// 4
// 1 2 4 1
// 4
// 1 2 4 2
// 4
// 1 2 4 3
// 4
// 1 2 4 4
// 4
// 1 3 1 1
// 4
// 1 3 1 2
// 4
// 1 3 1 3
// 4
// 1 3 1 4
// 4
// 1 3 2 1
// 4
// 1 3 2 2
// 4
// 1 3 2 3
// 4
// 1 3 2 4
// 4
// 1 3 3 1
// 4
// 1 3 3 2
// 4
// 1 3 3 3
// 4
// 1 3 3 4
// 4
// 1 3 4 1
// 4
// 1 3 4 2
// 4
// 1 3 4 3
// 4
// 1 3 4 4
// 4
// 1 4 1 1
// 4
// 1 4 1 2
// 4
// 1 4 1 3
// 4
// 1 4 1 4
// 4
// 1 4 2 1
// 4
// 1 4 2 2
// 4
// 1 4 2 3
// 4
// 1 4 2 4
// 4
// 1 4 3 1
// 4
// 1 4 3 2
// 4
// 1 4 3 3
// 4
// 1 4 3 4
// 4
// 1 4 4 1
// 4
// 1 4 4 2
// 4
// 1 4 4 3
// 4
// 1 4 4 4




#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin >> n;
    int arr[n];
    for(int i=0; i<n; i++)
    {
        cin >> arr[i];
    }

    bool all_same = 1;

    for(int i=1; i<n; i++)
    {
        if(arr[i]!=arr[i-1]) all_same=0;
    }

    if(all_same) cout << "NO\n";
    else 
    {
        cout << "YES\n";
        int maxx = *max_element(arr, arr+n);
        for(int i=0; i<n; i++)
        {
            if(arr[i] == maxx) cout << 1 << " ";
            else cout << 2 << " ";
        }
        cout << endl;
    }
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n, a, e=0, o=0, sum=0;
    cin >> n;
    while(n--)
    {
        cin >> a;
        if(a%2) o++;
        else e++;
        sum += a;
        // cout << sum << endl;

        // if(o <= e) cout << sum - o/3 - (o%3 == 1) << " ";
        // else 
        // {
        //     cout << sum << "->" << e << ":" << o << " ";
        // }
        // cout << sum - o/3 - (o%3 == 1) << " ";
        // cout << sum - (min(o, e)/3 + (min(o, e)%3==1)) << " ";
    }

    cout << endl;

    
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int Px, Py, Ax, Ay, Bx, By;
    cin>>Px>>Py>>Ax>>Ay>>Bx>>By;
    /*
    float r1 = max(sqrt(Ax*Ax + Ay*Ay), sqrt((Px-Ax)*(Px-Ax) + (Py-Ay)*(Py-Ay)));
    float r2 = max(sqrt(Bx*Bx + By*By), sqrt((Px-Bx)*(Px-Bx) + (Py-By)*(Py-By)));
    float r3 = max(min(sqrt(Ax*Ax + Ay*Ay), sqrt(Bx*Bx + By*By)),0.5*sqrt((Ax-Bx)*(Ax-Bx) + (Ay-By)*(Ay-By)), min(sqrt((Px-Ax)*(Px-Ax) + (Py-Ay)*(Py-Ay)), sqrt((Px-Bx)*(Px-Bx) + (Py-By)*(Py-By))));
    */
    cout<<fixed<<setprecision(10)<<min(max(sqrt(Ax*Ax + Ay*Ay), sqrt((Px-Ax)*(Px-Ax) + (Py-Ay)*(Py-Ay))), min(max(sqrt(Bx*Bx + By*By), sqrt((Px-Bx)*(Px-Bx) + (Py-By)*(Py-By))), max(0.5*sqrt((Ax-Bx)*(Ax-Bx) + (Ay-By)*(Ay-By)), max(min(sqrt(Ax*Ax + Ay*Ay), sqrt(Bx*Bx + By*By)),0.5*sqrt((Ax-Bx)*(Ax-Bx) + (Ay-By)*(Ay-By)), min(sqrt((Px-Ax)*(Px-Ax) + (Py-Ay)*(Py-Ay)), sqrt((Px-Bx)*(Px-Bx) + (Py-By)*(Py-By)))))))<<endl;

}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    lli l, r;
    cin>>l>>r;
    if(r < 2*l) cout<<-1<<" "<<-1<<endl;
    else cout<<l<<" "<<2*l<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
typedef long long int lli;
lli ways(lli k){
    lli ans = 0;
    for(lli i=1; i<=k; i++){
        ans += (k*(k-1))/2;
        ans += (k-i)*k*k;
        if(i<=k-1) ans -= 2*(k-2);
        if(i<=k-2) ans -= 2*(k-1);
    }
    return ans;
}

int main(){
    fastIO;
    lli n;
    cin>>n;
    for(lli i = 1; i<=n; i++){
        cout<<ways(i)<<endl;
    }
}

#include <bits/stdc++.h>
using namespace std;
void printset(multiset <int> &s){
    for (auto &value :s){
        cout<<value<<" ";
    }
}

int main(){
    int n,k;
    cin>>n>>k;
    multiset <int> s;
    for(int i=0;i<n;i++)
    {
        int x;
        cin>>x;
        s.insert(x);
    }

    if(k == 0)
    {
        cout << (*s.begin() == 1? -1: *s.begin()-1);
        return 0;
    }

    auto it = s.begin();
    for (int i=0;i<k-1;i++)
    {
        it++;
    }
    auto it2=it;
    ++it2;
    if (k<n && (*it2)==(*it)){
        cout<<-1<<endl;
    }
    else {
        cout<<(*it)<<endl;
    }
}

#include <bits/stdc++.h>
using namespace std;
#define int long long 

void solve()
{
    int n, ans=0;
    cin >> n;
    int arr[2*n];
    
    for(int i=0; i<2*n; i++) cin >> arr[i];

    multiset<int, greater<int>> s;

    for(int i=0; i<n; i++)
    {
        s.insert(arr[2*i]);
        if(i>0) s.insert(arr[2*i-1]);
        ans += *s.begin();
        s.erase(s.begin());
    }

    cout << ans << endl;
}

signed main()
{
    int t;
    cin>>t;
    while(t--)
    {
        solve();
    }
}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n,c;
    cin >> n >> c;
    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];
    int v[n];
    for(int i=0; i<n; i++) cin >> v[i];

    vector<pair<int, int> > p(n);

    for(int i=0; i<n; i++) p[i] = {v[i], arr[i]};

    sort(p.begin(), p.end());

    for(int i=0; i<n; i++) arr[i] = p[i].second;


    sort(v, v+n);
    int ans=0, sum=0, count=0;
    set<int> s;

    for(int i=0; i<n; i++)
    {
        if(s.find(arr[i]) == s.end())
        {

            count++;
            sum += v[i];
            ans = max(ans, c*count - sum);
        }
        s.insert(arr[i]);
    }

    cout << ans << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

// #include <bits/stdc++.h>
// #define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
// using namespace std;
// #define int long long 

// typedef vector<int> vi;
// typedef pair<int,int> pi;


// void solve(){
//     int n, cost=0;
//     cin >> n;
//     int arr[n];
//     for(int i=0; i<n; i++) cin >> arr[i];

//     int sum = accumulate(arr, arr+n, (int)0);

//     set<pair<int, int>> s1;

//     for(int i=0; i<n; i++)
//     {
//         s1.insert({arr[i]-i, -i});
//     }
//     set<pair<int, int>> s;

//     for(int i=n-1; i>=0; i--)
//     {
//         if(i != n-1)
//         {
//             pair<int, int> p = *s.begin();
//             pair<int, int> p1 = *s1.begin();

//             if(p.first-i <= p1.first+i)
//             {
//                 if(p.first < arr[i]+i||(p.first == arr[i]+i && p.first - p.second < arr[i]))
//                 {
//                     cost += p.first - i;

//                     s1.erase(s1.find({arr[i]-i, -i}));
//                     s.erase(s.begin());
//                     s.insert({arr[i]+p.second, p.second});
//                     s.insert({p.first-p.second+i, i});
//                     swap(arr[i], arr[p.second]);
//                 }
//                 else if(p1.first < arr[i]-i||(p1.first == arr[i]-i && p1.first - p1.second < arr[i]))
//                 {
//                     cost += p1.first + i;

//                     s1.erase(s1.begin());
//                     if(s1.find({arr[i]-i, -i}) != s1.end()) s1.erase(s1.find({arr[i]-i, -i}));
//                     s1.insert({arr[i]+p1.second, p1.second});
//                     swap(arr[i], arr[-p1.second]);
//                     s.insert({arr[i]+i, i});
//                 }
//                 else 
//                 {
//                     cost += arr[i];
//                     s.insert({arr[i]+i, i});
//                     s1.erase(s1.find({arr[i]-i, -i}));

//                 }
//             }
//             else
//             {
//                 if(p1.first < arr[i]-i||(p1.first == arr[i]-i && p1.first - p1.second < arr[i]))
//                 {
//                     cost += p1.first + i;

//                     s1.erase(s1.begin());
//                     if(s1.find({arr[i]-i, -i}) != s1.end()) s1.erase(s1.find({arr[i]-i, -i}));
//                     s1.insert({arr[i]+p1.second, p1.second});
//                     swap(arr[i], arr[-p1.second]);
//                     s.insert({arr[i]+i, i});
//                 }
//                 else if(p.first < arr[i]+i||(p.first == arr[i]+i && p.first - p.second < arr[i]))
//                 {
//                     cost += p.first - i;

//                     s1.erase(s1.find({arr[i]-i, -i}));
//                     s.erase(s.begin());
//                     s.insert({arr[i]+p.second, p.second});
//                     s.insert({p.first-p.second+i, i});
//                     swap(arr[i], arr[p.second]);
//                 }
//                 else 
//                 {
//                     cost += arr[i];
//                     s.insert({arr[i]+i, i});
//                     s1.erase(s1.find({arr[i]-i, -i}));
//                 }
//             }
//         }
//         else 
//         {

//             pair<int, int> p = *s1.begin();

//             if(p.first < arr[i]-i || (p.first == arr[i]-i && p.first - p.second < arr[i]))
//             {
//                 cost += p.first + i;
//                 s1.erase(s1.begin());
//                 if(s1.find({arr[i]-i, -i}) != s1.end()) s1.erase(s1.find({arr[i]-i, -i}));
//                 s1.insert({arr[i]+p.second, p.second});
//                 swap(arr[i], arr[-p.second]);
//                 s.insert({arr[i]+i, i});

//             }
//             else
//             {
//                 cost += arr[i];
//                 s1.erase(s1.find({arr[i]-i, -i}));
//                 s.insert({arr[i]+i, i});
//             }
//         }

//         // for(pair<int, int> p: s) cout << p.first << " " << p.second << endl;

//         // cout << cost << endl;
//     }
//     cout << min(cost, sum) << endl;
// }

// signed main(){
//     fastIO;
//     int t;
//     cin>>t;
//     while(t--){
//         solve();
//     }
// }


#include <bits/stdc++.h>
using namespace std;

int main(){
    int t; cin >> t;
    while (t--){
        int n; cin >> n;
        
        vector <int> a(n);
        for (int i = 0; i < n; i++){
            cin >> a[i];
        }
        

        function <int(vector<int>, int)> bruteforce = [&](vector <int> v, int i) -> int
        {
            if(i < 0) return 0;


            int minn_ind = i;
            int ans = v[i]+bruteforce(v, i-1);

            for(int ind=0; ind<n; ind++)
            {
                swap(v[i], v[ind]);
                int a = v[i]+bruteforce(v, i-1)+abs(ind-i);
                if(a<ans) minn_ind = ind;
                ans = min(ans, a);
                swap(v[i], v[ind]);
            }

            cout << i << ": " << minn_ind << endl;

            return ans;

        };

        cout << bruteforce(a, 2) << "\n";


        // vector <long long> dp(n + 1, 1e18);
        // dp[n] = 0;
        
        // for (int i = n - 1; i >= 0; i--){
        //     int p = i + 1;
        //     for (int j = i + 1; j <= n; j++) if (a[j] < a[p]){
        //         p = j;
        //     }
            
        //     for (int j = p; j <= n; j++){
        //         dp[i] = min(dp[i], dp[j] + 2 * (j - p) + 1LL * (j - i) * a[p] + (p - i - 1));
        //     }
        // }
        
        // cout << dp[0] << "\n";
    }
    return 0;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n, q, ans = INT64_MAX;
    cin >> n >> q;
    string s1, s2;
    cin >> s1 >> s2;

    reverse(s2.begin(), s2.end());

    vector<int> o1, o2;
    vector<int> cost1(n, -1), cost2(n, -1);

    for(int i=0; i<n; i++) if(s1[i] == '1') o1.push_back(i);
    for(int i=0; i<n; i++) if(s2[i] == '1') o2.push_back(i);

    int ones = 0;
    int start = 0;
    int end = -1;
    int zeros_sum = 0, zeros_num = 0;


    for(int i=0; i<n; i++)
    {
        if(s1[i] == '1')
        {
            if(end-start+1 > 0) ones -= o1[start];
            start++;
            end++;
            if(end-start+1 > 0 && end < o1.size() && end>=0) ones += o1[end];
        }
        else 
        {
            zeros_sum+=i;
            zeros_num++;
            end++;
            if(end-start+1>0 && end < o1.size() && end>=0) ones += o1[end];
        }

        if(zeros_num == end - start + 1 && end < o1.size()) cost1[i] = ones - zeros_sum;
    }

    ones = 0;
    start = 0;
    end = -1;
    zeros_sum = 0;
    zeros_num = 0;


    for(int i=0; i<n; i++)
    {
        if(s2[i] == '1')
        {
            if(end-start+1 > 0) ones -= o2[start];
            start++;
            end++;
            if(end-start+1 > 0 && end < o2.size() && end >= 0) ones += o2[end];
        }
        else 
        {
            zeros_sum+=i;
            zeros_num++;
            end++;
            if(end-start+1>0 && end < o2.size() && end>=0) ones += o2[end];
        }

        if(zeros_num == end - start + 1 && end < o2.size()) cost2[i] = ones - zeros_sum;
    }

    for(int i=0; i<n; i++)
        if(cost1[i] >= 0 && cost2[n-i-1] >= 0) ans = min(ans, cost1[i] + cost2[n-i-1]);

    cout << (ans == INT64_MAX ? -1 : ans) << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n, k, x, ans = 0;
    cin >> n >> k >> x;
    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];
    vector<pair<int, int>> v;

    int len = 0, csum = 0;

    for(int i=0; i<n; i++)
    {
        csum += arr[i];

        ans = max(ans, csum + x*min(k, len+1) - x*(len+1 > k)*(len+1 - k));
        
        if(csum < 0)
        {
            v.push_back({csum, len});
            csum = 0;
            len = 0;
        }
        else len++;
    }

    if(len>0)ans = max(ans, csum + x*min(k, len) - x*(len+1 > k )*(len+1 - k));

    len = 0, csum = 0;

    for(int i=n-1; i>=0; i--)
    {
        csum += arr[i];

        ans = max(ans, csum + x*min(k, len+1) - x*(len+1 > k )*(len+1 - k));

        
        if(csum < 0)
        {
            v.push_back({csum, len});
            csum = 0;
            len = 0;
        }
        else len++;
    }

    if(len>0) ans = max(ans, csum + x*min(k, len) - x*(len+1 > k )*(len+1 - k));


    cout << ans << endl;
    
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


signed main(){
    fastIO;
    int n, x;
    cin >> n >> x;
    int h[n], s[n], dp[x+1];

    memset(dp, 0, sizeof(dp));

    for(int i=0; i<n; i++) cin >> h[i];
    for(int i=0; i<n; i++) cin >> s[i];

    for(int i=0; i<n; i++)
    {
        for(int j=x; j>=h[i]; j--)
        {
            dp[j] = max(dp[j], dp[j-h[i]] + s[i]);
        }
    }

    cout << dp[x];

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve()
{
    int a, b, c, d;
    cin >> a >> b >> c >> d;
    cout << (min(a,c) >= min(b, d) ? "Gellyfish\n" : "Flower\n");
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, k;
    cin >> n >> k;
    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];   
    sort(arr, arr+n);

    bool tom = accumulate(arr, arr+n, (int)0)%2;
    // cout << tom << endl;
    // cout << arr[n-1]-arr[0] << endl;
    // int gtk, eqkpo;

    if(arr[n-1]-arr[0] >= k+2) tom=0;
    if(arr[n-1]-arr[0] == k+1)
    {
        if(n > 2 && arr[n-1] == arr[n-2]) tom=0;
    }

    cout << (tom?"Tom\n":"Jerry\n");
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

const int MOD = 998244353;
vector<int> fact, ifact;
const int N = 3e6+10;


int modInverse(int a, int p)
{
    int q = p - 2;
    int res = 1;
    while (q > 0)
    {
        if (q & 1)
            res = (res * a) % p;
        a = (a * a) % p;
        q >>= 1;
    }
    return res % p;
}


int nCrModP(int n, int r, int p)
{
    if (n < r)
        return 0;
    if (r == 0)
        return 1;

    return (fact[n] * ifact[r] % p * ifact[n - r] % p) % p;
}



signed main(){

    fact.push_back(1);
    ifact.push_back(1);

    for (int i = 1; i <= N; i++)
    {
        fact.push_back((fact[i - 1] * i) % MOD);
        ifact.push_back(modInverse(fact[i], MOD) % MOD);
    }


    fastIO;
    int a, b, c, d;
    cin >> a >> b >> c >> d;
    int f = b+c+d;
    int ans = 0;

    for(int x = 0; x<=b; x++)
    {
        ans += (nCrModP(a+x-1, a-1, MOD)*nCrModP(f-x, c, MOD))%MOD;
        ans%=MOD;
    }

    cout << ans%MOD << endl;

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long

void solve(){
    int n, x, ans = 0;
    cin >> n >> x;
    int a[n], b[n];
    for(int i=0; i<n; i++) cin >> a[i];
    for(int i=0; i<n; i++) cin >> b[i];

    int maxx[n];
    maxx[n-1] = a[n-1];

    for(int i=n-2; i>=0; i--) maxx[i] = max(maxx[i+1], a[i]);

    for(int i=0; i<n; i++)
    {
        if(x >= b[i] && x-1 >= (i == n-1 ? INT_MIN:maxx[i+1]))
        {
            x--;
            ans++;
        }
    }

    cout << ans << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n, m, a, b, j;
    cin>>n>>m>>a>>b;
    int arr[n][m];
    memset(arr, 0, sizeof(arr));

    if(n*a == m*b) 
    {
        cout<<"YES\n";
        int start = 0;
        for(int i=0; i<n; i++)
        {
            int count = 0;
            for(j = start; count != a; j = (j+1)%m)
            {
                arr[i][j] = 1;
                count++;
            }
            start = j;
        }

        for(int i=0; i<n; i++)
        {
            for(int j = 0; j<m; j++) cout<<arr[i][j];
            cout<<endl;
        }
    }
    else cout<<"NO\n";
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



void solve(){
    int n, a;
    cin >> n;
    cout << "digit" << endl;
    cin >> a;

    cout << "digit" << endl;
    cin >> a;

    cout << "digit" << endl;
    cin >> a;

    cout << "mul 9" << endl;
    cin >> a;

    cout << "digit" << endl;
    cin >> a;

    cout << "add " << n-9 << endl;
    cin >> a;

    cout << "!" << endl;
    cin >> a;
     
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



void solve(){
    int x, y, k;
    cin >> x >> y >> k;
    if((y <= min(k, x) || x <= min(y, k)) && (x <= 2*k && y <= 2*k)) cout << "Alice\n";
    else cout << "Bob\n";
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 




signed main(){
    fastIO;
    int n;
    cin >> n;

    

    char arr[n][n];
    for(int i=0; i<n; i++) for(int j=0; j<n; j++) cin >> arr[i][j];

    queue <pair<int, int>> q;
    vector<pair<int, int>> temp;
    string ans = "" + arr[0][0];
    q.push({0, 0});

    while(ans.size() != 2*n-1)
    {
        
    }

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


signed main(){
    fastIO;
    int n, m, k;
    cin>>n>>m>>k;

    int a[n];

    for(int i = 0; i<n; i++) cin>>a[i];

    for(int i=0; i<m; i++)
    {
        int li, ri, di;
        cin>>li>>ri>>di;
        
    }

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


signed main(){
    fastIO;
    string s;
    cin >> s;
    int q, n = s.length();
    cin>>q;

    int pref[n+1][26];

    for(int j = 0; j<26; j++)
    {
        pref[0][j] = 0;
    }

    for(int i = 1; i<=n; i++)
    {
        for(int j = 0; j<26; j++) pref[i][j] = pref[i-1][j];
        pref[i][s[i - 1] - 'a']++;
    }

    for(int i = 0; i<q; i++)
    {
        int l, r;
        cin>>l>>r;
        l--;
        if(s[l] != s[r-1] || r - l == 1) cout<<"Yes\n";
        else{
            int c = 0;
            for(int i=0; i<26; i++)
            {
                if(pref[r][i] - pref[l][i] > 0) c++;
            }
            if(c >= 3) cout<<"Yes\n";
            else cout<<"No\n";
        }   
    }
}





#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, u = 0;
    cin>>n;
    for(int i = 0; i<n; i++)
    {
        char c;
        cin>>c;
        if(c == 'U') u++;
    }
    if(u%2 == 1) cout<<"YES\n";
    else cout<<"NO\n";
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, k;
    cin>>n>>k;
    vector<pi> v;
    for(int i=0; i<n; i++)
    {
        int a;
        cin>>a;
        v.push_back(make_pair(a, i));
        
    }

    sort(v.begin(), v.end());
    vector<pi> v1;
    for(pi p: v)
    {
        v1.push_back(make_pair(p.second, -1));
    }

 
    int count = 1, num = 0, zero = 0;
    v1[0].second = num%k + 1;
    num++;

    for(int i=1; i<n; i++)
    {
        
        if(v[i].first == v[i-1].first) count ++;
        else count = 1;
        if(count > k) 
        {
            v1[i].second = 0;
            zero++;
        }
        if(v1[i].second != 0)
        {
            v1[i].second = num%k+1;
            num++;
        }
    }

    int a = (n-zero)%k, ind = n-1;
    while(a != 0)
    {
        
        if(v1[ind].second != 0) {
            v1[ind].second = 0;
            a--;
        }
        ind--;
    }


    sort(v1.begin(), v1.end());
    for(pi p: v1){
        cout<<p.second<<" ";
    }
    cout<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n, m;
    cin >> n >> m;
    vector<vector<int>> v(n, vector<int>(m));
    vector<int> minn(m);

    for(int i=0; i<n; i++) 
    {
        for(int j=0; j<m; j++) cin >> v[i][j];
        sort(v[i].begin(), v[i].end());
    }

    minn = v[0];

    for(int j: v[0]) cout << j << " ";
    cout << endl;


    for(int i=1; i<n; i++)
    {

        vector<pair<int, int>> vv(m);

        for(int j=0; j<m; j++) vv[j] = {minn[j], j};

        sort(vv.begin(), vv.end());
        reverse(vv.begin(), vv.end());

        vector<int> v1(m);

        for(int j=0; j<m; j++) v1[vv[j].second] = v[i][j];

        v[i] = v1;
        
        for(int j=0; j<m; j++)
        {
            minn[j] = min(minn[j], v[i][j]);
            cout << v[i][j] << " ";
        }
        cout << endl;

    }
    

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

int tc;


void solve(){
    int n, m, v;
    cin >> n >> m >> v;
    // if(tc == 49) cout << n << "." << m << "." <<v<<".";
    int arr[n];
    for(int i=0;i<n; i++) 
    {
        cin >> arr[i];
        // if(tc == 49) cout << arr[i] << ".";
    }

    int a1[n], a2[n], pref[n+2];
    int sum1=0, sum2=0;
    pref[0] = 0;
    pref[n+1] = INT64_MAX;

    for(int i=0;i<n; i++)
    {   
        pref[i+1] = pref[i] + arr[i];
        sum1 += arr[i];
        sum2 += arr[n-i-1];
        if(sum1 >= v)
        {
            if(i == 0) a1[i] = 1;
            else a1[i] = a1[i-1] + 1;
            sum1 = 0;
        }
        else
        {
            if(i == 0) a1[i] = 0;
            else a1[i] = a1[i-1];
        }

        if(sum2 >= v)
        {
            if(i == 0) a2[n-i-1] = 1;
            else a2[n-i-1] = a2[n-i] + 1;
            sum2 = 0;
        }

        else
        {
            if(i == 0) a2[n-i-1] = 0;
            else a2[n-i-1] = a2[n-i];
        }
    }
    int ans = INT64_MIN;

    // cout << pref[1] << endl;

    // for(int i: a1) cout << i << " ";
    // cout << endl;
    // for(int i: a2) cout << i << " ";
    // cout << endl;

    for(int i=n; i>=0; i--)
    {
        int x;
        if(i == n) x = 0;
        else x = a2[i];
        int j = lower_bound(a1, a1+n, m - x) - a1;


        if(m-x == 0) ans = max(ans, pref[i]);

        ans = max(ans, pref[i] - pref[j+1]);

        // cout << i << ": " << x << " " << j << " :: " << pref[i] - pref[j+1] << endl;
    }
    if(ans < 0) cout << -1 << endl;
    else cout << ans << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    for(tc=1; tc<=t; tc++){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

set<pair<int, int>> edges;
set<pair<int, int>> querries;

void ask(int a, int b)
{
    querries.insert(make_pair(a, b));
    cout << "? " << a << " " << b << endl; 
    
    int v;
    cin >> v;

    if(v == a)
    {
        edges.insert(make_pair(a, b));
        return;
    }

    if(querries.find(make_pair(a, v)) == querries.end() && querries.find(make_pair(v, a)) == querries.end())
        ask(a, v);
    if(querries.find(make_pair(v, b)) == querries.end() && querries.find(make_pair(b, v)) == querries.end())
        ask(v, b);
}

void solve(){
    int n;
    cin>>n;

    for(int i=2; i<=n; i++)
    {
        if(querries.find(make_pair(1, i)) == querries.end() && querries.find(make_pair(i, 1)) == querries.end())
            ask(1, i);
    }

    if(n == 995) cout<<"jada"<<querries.size()<<"\n";

    if(querries.size() > 15*n) cout<<"jada\n";


    cout<<"! ";
    for(pair <int, int> p: edges) cout<<p.first<<" "<<p.second<<" ";
    cout<<endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        edges.clear();
        querries.clear();
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


signed main(){
    fastIO;
    int n, ans =0;
    cin >> n;
    int arr[n];
    for(int i=0; i<n; i++) cin >> arr[i];
    int k;
    cin >> k;

    for(int i: arr) ans += (k<=i);
    cout << ans << endl;

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve()
{
    int n, k, sum = 0;
    cin >> n >> k;
    vector<pair<pair<int, int>, int>> v(n);
    vector<int> ans(n);    

    for(int i=0; i<n; i++)
    {
        cin >> v[i].first.first;
        v[i].second = i;
    }

    for(int i=0; i<n; i++) cin >> v[i].first.second;

    sort(v.begin(), v.end());

    multiset <int> s;

    for(int i=0; i<n; i++)
    {   
        ans[v[i].second] = sum;
        if(s.size() < k)
        {
            s.insert(v[i].first.second);
            sum += v[i].first.second;
        }
        else
        {
            auto ptr = s.begin();
            if(v[i].first.second >= *ptr)
            {
                sum -= *ptr;
                s.erase(ptr);
                s.insert(v[i].first.second);
                sum += v[i].first.second;
            }
        }
    }

    for(int i: ans) cout << i << " ";
    cout << endl;


}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    long long int n, sum=0;
    cin>>n;
    int arr[n];
    for(int i=0; i<n; i++){
        long long int a;
        cin>>a;
        arr[a-1]=i;
    }
    for(int i=0; i<n-1; i++){
        if(arr[i+1]-arr[i]<0){
            sum++;
        }
    }
    cout<<sum<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

// #include <iostream>
// #include<bits/stdc++.h>
// using namespace std;

// int main() {
//     int t;
//     cin>>t;
//    for(int i = 0 ; i<t;i++)
//        {
//            int c = 0 , sum = 0;
//            int l,r,n;
//            cin>>n>>l>>r;
//            int a[n];
//            for(int j=0;j<n;j++)
//                {
//                    cin>>a[j];
//                }
//            for(int j = 0;j<n;j++)
//                {
//                    sum = sum + a[j];
//                    if(a[j]==0)
//                    {
//                        continue;
//                        }
//                    else
//                    {
//                    if (sum<l)
//                    {
//                        continue;
//                    }
//                    else if (sum <= r )
//                    {
//                        c++;
//                        sum = 0;
//                        continue;
//                    }
//                    else
//                    {
//                        if(a[j]>r)
//                        {
//                            sum = 0;
//                        }
//                        else if(a[j]<l)
//                        {
//                            sum = a[j];
//                        }
//                        else
//                        {
//                            sum = 0;
//                            c++;
//                        }
//                    }
//                    }
//                }
// cout<<c<<endl;
//        }
//     return 0;
// }


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    
}

signed main(){
    fastIO;
    int t = 10000;
    int tt=t;
while(tt--)
cout<<1<<" ";
while(t--) cout<<"R";
    
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n, m, count=0;
    long long int k, H;
    cin>>n>>m>>k>>H;
    long long int h[n];
    for(int i=0; i<n; i++){
        cin>>h[i];
        if(abs(h[i]-H)%k==0 && abs(h[i]-H)/k != 0 && abs(h[i]-H)/k <= m-1){
            count++;
        }
    }
    cout<<count<<endl;

}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    long long int n;
    cin>>n;
    long long int m = (1+sqrt(1+8*n))/2;
    cout<<n-(m*(m-3))/2<<endl;
}

int main(){
    
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    
    int n;
    cin>>n;
    int arr[n], ans[n];
    string s;

    memset(ans, -1, sizeof(ans));
    
    for(int i=0; i<n; i++) cin>>arr[i];

    cin>>s;

    for(int i=0; i<n; i++)
    {
        if(ans[i] == -1)
        {
            int p = i+1, a = 0;
            if(s[p-1] == '0') a++;
            while(arr[p-1] != i+1)
            {
                p = arr[p-1];
                if(s[p-1] == '0' && p != i+1) a++;
            }
            p = i+1;
            ans[p-1] = a;

            while(arr[p-1] != i+1)
            {
                p = arr[p-1];
                ans[p-1] = a;
            }
        }
    }
    for(int i:ans) cout<<i<<" ";

    cout<<endl;


}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;



void solve(){
    int n;
    cin>>n;
    int arr[n+1];
    arr[n] = -1;
    for(int i=0; i<n; i++){
        int a;
        cin>>a;
        arr[i] = a-i;
    }
    sort(arr, arr+n);
    lli ans = 0, c = 0;
    for(int i=0; i<n; i++){
        if(arr[i]  == arr[i+1]){
            
            c++;
        }
        else{
            ans += (c*(c+1))/2;
            c = 0;
        }
    }
    cout<<ans<<"\n";
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n, last = -1;
    cin>>n;
    vector<pair<int, int>> v(n);
    for(int i=0; i<n; i++)
    {
        cin>>v[i].first>>v[i].second;
        v[i].first--;
        v[i].second--;
    }
    sort(v.begin(), v.end());
    for(int i=0; i<n; i++)
    {
        last = max(last+1, v[i].first);
        if(v[i].second < last) 
        {
            cout<<"No\n";
            return;
        }
    }
    cout<<"Yes\n";

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

signed main(){
    fastIO;

    int n, m;
    
    cin >> n >> m;
    vector<bool> visited(n+1, 0);
    vector<vector<int>> adj(n+1);

    for(int i=0; i<m; i++)
    {
        int a, b;
        cin>>a>>b;
        adj[a].push_back(b);
        adj[b].push_back(a);
    }

    function<void(int)> dfs = [&](int u) -> void
    {
        visited[u] = 1;
        for(int v: adj[u])
        {
            if(!visited[v]) dfs(v);
        }
    };

    vector<int> ans;
    for(int i=1; i<=n; i++)
    {
        if(!visited[i]) 
        {
            dfs(i);
            ans.push_back(i);
        }
    }

    cout << ans.size() - 1<<endl;
    for(int i=0; i<ans.size()-1; i++)
    {
        cout << ans[i] << " " << ans[i+1]<<endl;
    }

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


const int MOD = 1e9+7;

int abModm(int a, int b, int m){
    a%=m;
    int res = 1;
    while (b > 0) {
        if (b & 1)
            res = (res * a)%m;
        a = (a * a)%m;
        b >>= 1;
    }
    return res;
}

signed main(){
    fastIO;
    
    int n, k, elem = 0;
    cin >> n >> k;

    int ans = abModm(n, k, MOD);

    vector<vector<int>> adj(n);
    vector<bool> visited(n, 0);

    for(int i = 0; i<n-1; i++)
    {
        int u, v, c;
        cin >> u >> v >> c;
        u--, v--;
        if(c == 0)
        {
            adj[u].push_back(v);
            adj[v].push_back(u);
        }
    }

    function <void(int)> dfs = [&](int u) -> void
    {
        visited[u] = 1;
        elem++;
        for(int v: adj[u])
        {
            if(!visited[v])
            {
                dfs(v);
            }
        }
    };

    for(int i=0; i<n; i++)
    {
        if(!visited[i])
        {
            dfs(i);
            ans += (MOD - abModm(elem, k, MOD))%MOD;
            ans %= MOD;
            elem = 0;
        }
    }

    cout << ans%MOD << endl;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;

int tri(int a){
    int i = 1;
    while((i*(i+1))/2 <= a ){
        i++;
    }
    return i-1;
}


void solve(){
    int n, k;
    cin>>n>>k;
    int r = (tri(k)*(tri(k)+1))/2;
    int l = k - r;

for(int i=n - tri(k)-1; i>0; i--){cout<<-1000<<" ";}
     int p = tri(k) - l + 1;
     if(n-tri(k)-1>=0) cout << -(p*(p+1))/2 << " ";
    for(int i=0; i < tri(k); i++) cout << i + 2 << " ";
    cout<<endl;
}

int main(){
    //cout<<tri(2);
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n, arr[26], c=0;
    for(int i=0; i<26; i++){
        arr[i]=0;
    }
    string s;
    cin>>n>>s;
    for(int i=0; i<n; i++){
        arr[int(s[i])-65] += 1;
        if(arr[int(s[i])-65]==1){
            c+=1;
        }
    }
    cout<<n+c<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int k, q;
    cin>>k>>q;
    int arr[k];
    for(int i=0; i<k; i++){
        cin>>arr[i];
    }
    for(int i=0; i<q; i++){
        int a;
        cin>>a;
        if(a<arr[0]){
            cout<<a<<" ";
        }
        else cout<<arr[0]-1<<" ";
    }
    cout<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long


void solve(){
    int n, m;
    cin >> n >> m;
    int arr[m];
    for(int i=0; i<m; i++) cin >> arr[i];
    sort(arr, arr+m);

    int ans[6];
    int ptr=0;

    for(int i=0; i<n/2; i++)
    {
        int a = arr[ptr], b = arr[m-ptr-1];
        ans[0]=ans[2]=ans[4]=a;
        ans[1]=ans[3]=ans[5]=b;
        for(int ii: ans) cout << ii << " ";
        cout << endl;
        rotate(ans, ans+1, ans+6);
        for(int ii: ans) cout << ii << " ";
        cout << endl;
        ptr++;
    }

    if(n%2)
    {
        int a = arr[ptr], b = arr[m-ptr-1];
        ans[0]=ans[2]=ans[4]=a;
        ans[1]=ans[3]=ans[5]=b;
        for(int ii: ans) cout << ii << " ";
        cout << endl;
    }

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    lli n, q;
    cin>>n>>q;
    lli arr[n];
    for(lli i=0; i<n; i++){
        cin>>arr[i];
        }
    lli psum[n+1];
    psum[0]=0;
    for(lli i=1; i<n+1; i++){
        psum[i] = psum[i-1];
        if(arr[i-1]!=1) psum[i] += arr[i-1];
        
    }
    for(lli i=0; i<q; i++){
        lli l, r;
        cin>>l>>r;
        if(l==r) cout<<"NO\n";
        else if(psum[r]-psum[l-1] >= r-l+1) cout<<"YES\n";
        else cout<<"NO\n";
        
        
        
    }
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


signed main(){
    fastIO;

    string s;
    cin>>s;

    int pref1[s.length() + 1], pref2[s.length() + 1], ac = 0, bc = 0;
    pref1[0] = 0;
    pref2[0] = 0;
    for(int i=0; i<s.length(); i++)
    {
        pref1[i+1] = pref1[i];
        pref2[i+1] = pref2[i];
        if(s[i] == 'A') 
        {
            pref1[i+1] += 1;
            ac++;
        }
        else 
        {
            pref2[i+1] += 1;
            bc++;
        }
    }

    if(ac%2 == 1 || bc%2 == 1)
    {
        cout << "NO\n";
        return 0;
    }

    for(int i=0; i<s.length(); i++)
    {
        int l1 = lower_bound(pref1, pref1 + s.length(), pref1[i]+ac/2) - pref1;
        int r1 = upper_bound(pref1, pref1 + s.length(), pref1[i]+ac/2) - pref1;

        int l2 = lower_bound(pref2, pref2 + s.length(), pref2[i]+bc/2) - pref2;
        int r2 = upper_bound(pref2, pref2 + s.length(), pref2[i]+bc/2) - pref2;

        if(max(l1, l2) < min(r1, r2))
        {
            cout << "YES\n";
            cout << i+1 << " " << min(r1, r2) << endl;
            return 0;
        }
    }
    cout << "NO\n";
}



#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    int arr[n], ind[n+1];
    ind[n] = 0;

    for(int i=0; i<n; i++){
        cin>>arr[i];
        ind[arr[i]-1] = i;
    }

    int s = 1, l = 1, a = 0;
    
    for(int i=1; i<=n; i++){
        if(ind[i-1] > ind[i]) {
            l = i;
            if(s <= (n+1)/2 && l >= (n/2 + 1)){
                a = min(l - (n/2 + 1) + 1, (n+1)/2 - s + 1);
                if(n%2==1) a--;
            }
            s = i+1;
        }
    }

    if(n%2==1) a = 1 + 2*a;
    else a = 2*a;
    cout << (n-a)/2 << endl;;

    
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;



void solve(){
    lli n, x, maxx = 0, minn = INT_MAX;
    cin>>n>>x;
    lli arr[n];
    for(lli i=0; i<n; i++)
    {
        cin>>arr[i];
        maxx = max(maxx, arr[i]);
        minn = min(minn, arr[i]);
    }

    lli ans = 0;

    for(lli i=0; i<n-1; i++)
    {
        ans += abs(arr[i+1]-arr[i]);
    }

    ans += max((lli)0, min(2*(x - maxx), min(x-arr[0], x-arr[n-1])));
    ans += max((lli)0, min(2*(minn - 1), min(arr[0] - 1, arr[n-1] - 1)));

    cout<<ans<<endl;

}

int main(){
    fastIO;
    lli t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



void solve(){
    int n, x;
    cin >> n >> x;
    int ans = x, ones=0;

    for(int i=0; i<=33; i++)
    {
        if((x>>i)&1)
        {
            ones++;
        }
    }



    if(x == 0 && n == 1) cout << -1 << endl;
    else if(x == 0)
    {
        cout << (n%2 == 0? n : n+3) << endl;
    }
    else if(x == 1)
    {
        cout << (n%2 ? n : n+3) << endl;
    }
    else cout << ans + max(((n-ones)%2 ? (n-ones) + 1 : (n-ones)), (int)0) << endl;


}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long


vector<int> ans(vector<int> v, int bot)
{
    if(bot == 1) return v;
    int i = 1;
    while(i <= bot) i *= 2;
    i/=2;

    vector<int> anss;

    if(i == bot)
    {
        int val = 0;
        for(int i=0; i<bot; i++) val ^= v[i];
        anss.push_back(val);
        for(int i=bot; i<(int)v.size(); i++)
        {
            val ^= (v[i]^v[i-bot]);
            anss.push_back(val);
        }
        return anss;
    }
    else
    {
        vector<int> v1 = ans(v, i);
        return ans(v1 ,bot-i+1);
    }
}


signed main(){
    fastIO;
    int n, k=1;
    cin >> n;
    vector<int> arr(n);
    for(int i=0; i<n; i++) cin >> arr[i];

    int bot = n - k + 1;

    vector<int> v = ans(arr, bot);

    for(int i: v) cout << i << ' ';

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;



int main(){
    fastIO;
    int n, k;
    cin>>n>>k;
    int arr[n];
    int ans=INT_MAX;
    for(int i =0; i<n; i++){
        cin>>arr[i];
    }



    int nl=-1, pf=-1, z=-1;

    for(int i=0; i<n; i++){
        if(arr[i]==0) z = i;
        if(arr[i]<0) nl = i;
        if(arr[i]>0) {
            pf = i;
            break;
        }
    }
    if(z != -1){
        if(z+k<=n) ans = min(ans, arr[z+k-1]);
        
        if(z-k+1 >= 0) ans = min(ans, abs(arr[z-k+1]));
    }

    if(pf != -1){
        if(pf+k<=n) ans = min(ans, arr[pf+k-1]);
        

    }

    if(nl != -1){
        if(nl-k+1 >= 0) ans = min(ans, abs(arr[nl-k+1]));
    }

    for(int i=0; i+k-1<n; i++){
        

        if(arr[i]<=0 && arr[i+k-1]>=0){
        int a = 2*min(abs(arr[i]), abs(arr[i+k-1])) + max(abs(arr[i]), abs(arr[i+k-1]));
        ans = min(ans, a);
        }
    }
   


    cout<<ans;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;

const int MOD = 1e9 + 7;



lli InverseModulo(lli a, lli p){

    lli q = p-2;

    lli res = 1;
    while (q > 0) {
        if (q & 1)
            res = (res * a)%p;
        a = (a * a)%p;
        q >>= 1;
    }
    return res%p;
}


int main(){
    fastIO;
    int n, m;
    cin>>n>>m;
    lli a=1, b=1;
    for(int i = 1; i<=2*m; i++){
        a *= (2*m+n-i)%MOD;
        a %= MOD;
    }

    for(int i=1; i<=2*m; i++){
        b *= i;
        b%=MOD;
    }
    cout<<(a*InverseModulo(b, MOD))%MOD;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;
#define MOD 998244353

lli abModm(lli a, lli b, lli m){
    a%=m;
    lli res = 1;
    while (b > 0) {
        if (b & 1)
            res = (res * a)%m;
        a = (a * a)%m;
        b >>= 1;
    }
    return res;
}

lli f(lli n)
{
    if(n == 0) return 0;
    if(n%2 == 0)
        return ((lli)443664157 * (((3 * n - 2) * abModm(2, n-1, MOD) + 1) % MOD)) % MOD;
    return ((lli)443664157 * (((3 * n - 2) * abModm(2, n-1, MOD) - 1) % MOD)) % MOD;
}

int main(){
    
    fastIO;
    lli n, m, ans = 0, ocount = 0;
    cin>>n>>m;
    char arr[n][m];

    for(int i=0; i<n; i++)
    {
        for(int j=0; j<m; j++)
        {
            cin>>arr[i][j];
            if(arr[i][j] == 'o') 
                ocount++;
        }
    }

    for(lli row = 0; row < n; row++)
    {
        lli l = 0;
        for(lli col = 0; col < m; col++)
        {
            if(arr[row][col] == 'o') 
                l++;
            else 
            {
                ans = (ans + f(l) * abModm(2, ocount - l, MOD)) % MOD;
                l = 0;
            }
        }
        ans = (ans + f(l) * abModm(2, ocount - l, MOD)) % MOD;
    }

    for(lli col = 0; col < m; col++)
    {
        lli l = 0;
        for(lli row = 0; row < n; row++)
        {
            if(arr[row][col] == 'o') 
                l++;
            else 
            {
                ans = (ans + f(l) * abModm(2, ocount - l, MOD)) % MOD;
                l = 0;
            }
        }
        ans = (ans + f(l) * abModm(2, ocount - l, MOD)) % MOD;
    }
    cout<<ans;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;

lli gcd(lli a, lli b){
if(a ==0 || b==0) return a+b;
if(a>b) return gcd(a%b, b);
else return gcd(a, b%a);
}


int main(){
    fastIO;
    lli n;
    cin>>n;

    if(n==1 || n==2){
        cout<<n;
        return 0;
    }

    if(n%2){
        cout<<n*(n-1)*(n-2);
        return 0;
    }

    lli m = n*(n-1), i;
    for(i=n-2; i>=1; i--){
        if(gcd(m, i) == 1) break;
    }
    cout<<max(max(m*i, (m*(n-2))/2), (n-1)*(n-2)*(n-3));
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n, t;
    cin>>n>>t;
    int a[n], b[n];
    int ent=0, index;
    for(int i=0; i<n; i++){
        cin>>a[i];
    }
    for(int i=0; i<n; i++){
        cin>>b[i];
    }

    for(int i=0; i<n; i++){
        if(a[i]+i <= t){
            if(ent<b[i]){
                ent = b[i];
                index = i+1;
            }
        }
    }
    if(ent){
        cout<<index<<endl;
    }
    else{
        cout<<-1<<endl;
    }
}

int main(){
    int q;
    cin>>q;
    while(q--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n;
    cin>>n;
    int b[n];
    vector <int> v;
    for(int i=0; i<n; i++){
        cin>>b[i];
    }
    v.push_back(b[0]);
    for(int i=1; i<n; i++){
        if(b[i-1]<=b[i]){
            v.push_back(b[i]);
        }
        else{v.push_back(b[i]);v.push_back(b[i]);}
    }
    int s=v.size();
    cout<<s<<endl;
    for(int i=0; i<s; i++){
        cout<<v[i]<<" ";
    }
    cout<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;


signed main(){
    fastIO;
    int n;
    cin >> n;
    char arr[n][n];
    for(int i=0; i<n; i++) for(int j=0; j<n; j++) cin >> arr[i][j];

    int dp[n][n];

    for(int i=0; i<n; i++)
    {
        for(int j=0; j<n; j++)
        {
            if(i == 0 && j == 0) dp[i][j] = 1;
            else if(i == 0) {dp[i][j] = dp[i][j-1];}
            else if(j == 0) {dp[i][j] = dp[i-1][j];}
            else dp[i][j] = dp[i-1][j] + dp[i][j-1];
            if(arr[i][j] == '*') dp[i][j] = 0;
            dp[i][j] %= (int)1e9+7;
        }
    }

    cout << dp[n-1][n-1];
}



#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    string s;
    cin>>s;
    string s1 = "hello";
    int j = 0;
    for(int i=0; i<s.length(); i++)
    {
        if(s1[j] == s[i]) 
        {
            if(j == 4) {
                cout<<"YES\n";
                return;
            }
            j++;
        }
    }
    cout<<"NO\n";
}

int main(){
    fastIO;
    int t=1;
    //cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    long long int n;
    cin>>n;
    long long int sum=0;
    for(int i=0; i<n+1; i++){
        int a;
        cin>>a;
        sum += a;
    }
    cout<<sum-((n*(n+1))/2)<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int a, b;
    cin>>a>>b;
    if(a%2==0 && b%2==0) cout<<"YES\n";
    else if(a%2==1 && b%2==1) {cout<<"NO\n";}
    else if(a == 2*b || b==2*a) {cout<<"NO\n";}
    else cout<<"YES\n";
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin >> n;
    int pos = 0;
    int i = 1;
    int mul = -1;
    
    while(pos >= -n && pos <= n)
    {
        pos += mul * (2*i-1);
        i++;
        mul *= -1;
    }

    cout << (mul == -1 ? "Kosuke" : "Sakurako") << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
   string s;
   cin>>s;
   int qcount=0;
   if(s[0]=='0'){
    cout<<0<<endl;
   } 
   else{
    for(int i=0; i<s.length(); i++){
        if(s[i]=='?'){
            qcount++;
        }
    }
    if(s[0]=='?'){
        cout<<9*pow(10, qcount-1)<<endl;
    }else{
        cout<<pow(10, qcount)<<endl;
    }
   }
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



void solve(){
    int n, m;
    cin >> n >> m;
    vector<string> v;

    string word = "aeknr";

    for(int i=0; i<n; i++)
    {
        string s;
        cin >> s;

        for(int i=0; i<m; i++)
        {
            if(s[i] == 'n') s[i] = 'a';
            else if(s[i] == 'a') {s[i] = 'e';}
            else if(s[i] == 'r') {s[i] = 'k';}
            else if(s[i] == 'e') {s[i] = 'n';}
            else if(s[i] == 'k') {s[i] = 'r';}
        }
        v.push_back(s);
    }

    sort(v.begin(), v.end())



}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

// #include <bits/stdc++.h>
// #define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
// using namespace std;
// #define int long long 



// vector<int> fact, ifact;

// const int N = 2e6+10;
// const int MOD = 998244353;

// int modInverse(int a, int p)
// {
//     int q = p - 2;
//     int res = 1;
//     while (q > 0)
//     {
//         if (q & 1)
//             res = (res * a) % p;
//         a = (a * a) % p;
//         q >>= 1;
//     }
//     return res % p;
// }

// signed main(){

//     fact.push_back(1);
//     ifact.push_back(1);

//     for (int i = 1; i <= N; i++)
//     {
//         fact.push_back((fact[i - 1] * i) % MOD);
//         ifact.push_back(modInverse(fact[i], MOD) % MOD);
//     }


//     fastIO;
//     int n, m;
//     cin >> n >> m;

//     vector<vector<int>> adj(n+1);
//     vector<int> visited(n+1, 0);
//     vector<int> cc, elem(n+1, 1), ans(n+1, 1);

//     for(int i=0; i<m; i++)
//     {
//         int u, v;
//         cin >> u >> v;
//         u--, v--;
//         swap(u, v);
//         adj[u].push_back(v);
//         visited[v] = 1;
//     }

//     for(int i=0; i<n; i++)
//     {
//         if(!visited[i]) cc.push_back(i);
//         visited[i] = 0;
//     }

//     for(int i: cc)
//     { 
//         adj[n].push_back(i);
//     }   


//     function <void(int)> dfs = [adj, &visited, &ans, &elem, &dfs](int u) -> void
//     {

//         visited[u] = 1;
//         bool nochild = 1;

//         // cout << u << endl;


//         for(int v: adj[u])
//         {
//             // cout << u << " -> " << v << endl;
//             if(!visited[v])
//             {
//                 nochild = 0;
//                 dfs(v);
                
//                 // cout << u << " -> " << v << ": " << ifact[v] << endl;
//             }

//                 elem[u] += elem[v];
//                 ans[u] = (ans[u] * ans[v]) % MOD;
//                 ans[u] = (ans[u] * ifact[elem[v]]) % MOD;
//         }

//         if(nochild)
//         {
//             elem[u] = 1;
//             ans[u] = 1;
//         }

//         ans[u] = (ans[u] * fact[elem[u] - 1]) % MOD;

//     };

  

//     // for(int i=0; i<=n; i++)
//     // {
//     //     cout << i << ": ";
//     //     for(int j: adj[i]) cout << j << " ";
//     //     cout << endl;
//     // }

//     // for(int i: adj[3]) cout << i << endl;


//     dfs(n);

//     // for(int i: visited) cout << i << " ";

//     // cout << elem[n] << endl;
//     cout << ans[n] << endl;

// }


// #include <bits/stdc++.h>
// using namespace std;
// const int MOD = 998244353;

// // Modular multiplication
// long long mod_mul(long long a, long long b) {
//     return (a * b) % MOD;
// }

// // Modular exponentiation
// long long mod_exp(long long base, long long exp) {
//     long long result = 1;
//     while (exp) {
//         if (exp & 1) result = mod_mul(result, base);
//         base = mod_mul(base, base);
//         exp >>= 1;
//     }
//     return result;
// }

// // Modular inverse
// long long mod_inv(long long a) {
//     return mod_exp(a, MOD - 2);
// }

// // Precompute factorials and modular inverses of factorials
// vector<long long> fact, inv_fact;
// void precompute_factorials(int n) {
//     fact.resize(n + 1);
//     inv_fact.resize(n + 1);
//     fact[0] = 1;
//     for (int i = 1; i <= n; i++) {
//         fact[i] = mod_mul(fact[i - 1], i);
//     }
//     inv_fact[n] = mod_inv(fact[n]);
//     for (int i = n - 1; i >= 0; i--) {
//         inv_fact[i] = mod_mul(inv_fact[i + 1], i + 1);
//     }
// }

// // Combination function C(n, k)
// long long comb(int n, int k) {
//     if (k > n || k < 0) return 0;
//     return mod_mul(fact[n], mod_mul(inv_fact[k], inv_fact[n - k]));
// }

// // Depth-First Search to calculate subtree sizes and DP
// void dfs(int node, vector<vector<int>> &tree, vector<long long> &dp, vector<int> &subtree_size) {
//     dp[node] = 1;
//     subtree_size[node] = 1;
//     for (int child : tree[node]) {
//         dfs(child, tree, dp, subtree_size);
//         dp[node] = mod_mul(dp[node], dp[child]);
//         dp[node] = mod_mul(dp[node], comb(subtree_size[node] + subtree_size[child] - 1, subtree_size[child]));
//         subtree_size[node] += subtree_size[child];
//     }
// }

// int main() {
//     ios::sync_with_stdio(false);
//     cin.tie(nullptr);

//     int n, m;
//     cin >> n >> m;

//     vector<vector<int>> tree(n + 2); // The virtual root is at node n+1
//     vector<int> in_degree(n + 1, 0);

//     for (int i = 0; i < m; i++) {
//         int x, y;
//         cin >> x >> y;
//         tree[y].push_back(x); // Reverse the direction for topological sorting
//         in_degree[x]++;
//     }

//     int virtual_root = n + 1;
//     for (int i = 1; i <= n; i++) {
//         if (in_degree[i] == 0) {
//             tree[virtual_root].push_back(i); // Connect the virtual root to all roots
//         }
//     }

//     precompute_factorials(n);

//     vector<long long> dp(n + 2, 0);
//     vector<int> subtree_size(n + 2, 0);

//     dfs(virtual_root, tree, dp, subtree_size);

//     cout << dp[virtual_root] << '\n';
//     return 0;
// }


#include <bits/stdc++.h>
using namespace std;
const int MOD = 998244353;

// Modular Multiplication
long long mod_mul(long long a, long long b) {
    return (a * b) % MOD;
}

// Modular Exponentiation
long long mod_exp(long long base, long long exp) {
    long long result = 1;
    while (exp) {
        if (exp & 1) result = mod_mul(result, base);
        base = mod_mul(base, base);
        exp >>= 1;
    }
    return result;
}

// Precompute Factorials and Modular Inverses
vector<long long> fact, inv_fact;
void precompute_factorials(int n) {
    fact.resize(n + 1);
    inv_fact.resize(n + 1);
    fact[0] = 1;
    for (int i = 1; i <= n; i++) {
        fact[i] = mod_mul(fact[i - 1], i);
    }
    inv_fact[n] = mod_exp(fact[n], MOD - 2);
    for (int i = n - 1; i >= 0; i--) {
        inv_fact[i] = mod_mul(inv_fact[i + 1], i + 1);
    }
}

// Combination Function C(n, k)
long long comb(int n, int k) {
    if (k > n || k < 0) return 0;
    return mod_mul(fact[n], mod_mul(inv_fact[k], inv_fact[n - k]));
}

// Tree DP to Count Valid Permutations in a Subtree
void dfs(int node, vector<vector<int>> &tree, vector<long long> &dp, vector<int> &subtree_size) {
    dp[node] = 1;
    subtree_size[node] = 1;
    for (int child : tree[node]) {
        dfs(child, tree, dp, subtree_size);
        dp[node] = mod_mul(dp[node], dp[child]);
        dp[node] = mod_mul(dp[node], comb(subtree_size[node] + subtree_size[child] - 1, subtree_size[child]));
        subtree_size[node] += subtree_size[child];
    }
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    int n, m;
    cin >> n >> m;

    vector<vector<int>> tree(n + 1); // Adjacency list for the graph
    vector<int> in_degree(n + 1, 0);

    // Read constraints and construct the graph
    for (int i = 0; i < m; i++) {
        int x, y;
        cin >> x >> y;
        tree[x].push_back(y);
        in_degree[y]++;
    }

    // Topological sorting to check for cycles
    queue<int> q;
    for (int i = 1; i <= n; i++) {
        if (in_degree[i] == 0) q.push(i);
    }

    vector<int> topo_order;
    while (!q.empty()) {
        int node = q.front();
        q.pop();
        topo_order.push_back(node);
        for (int child : tree[node]) {
            in_degree[child]--;
            if (in_degree[child] == 0) q.push(child);
        }
    }

    // If we can't cover all nodes, the graph has a cycle
    if ((int)topo_order.size() != n) {
        cout << 0 << '\n';
        return 0;
    }

    // Tree-based DP
    precompute_factorials(n);

    vector<long long> dp(n + 1, 0);
    vector<int> subtree_size(n + 1, 0);

    for (int i = n; i >= 1; i--) { // Reverse topological order
        if (in_degree[topo_order[i - 1]] == 0) {
            dfs(topo_order[i - 1], tree, dp, subtree_size);
        }
    }

    long long result = dp[topo_order[0]]; // Result is stored in the first topological root
    cout << result << '\n';

    return 0;
}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

vector<int> fact, ifact;
const int N = 1e6+10;
const int MOD = 998244353;

int modInverse(int a, int p)
{
    int q = p - 2;
    int res = 1;
    while (q > 0)
    {
        if (q & 1)
            res = (res * a) % p;
        a = (a * a) % p;
        q >>= 1;
    }
    return res % p;
}


int nCrModP(int n, int r, int p)
{
    if (n < r)
        return 0;
    if (r == 0)
        return 1;

    return (fact[n] * ifact[r] % p * ifact[n - r] % p) % p;
}


void solve(){
    int arr[26], ans = 1;
    for(int i=0; i<26; i++) cin >> arr[i];

    int sum = accumulate(arr, arr+26, (int)0);
    int sum1 = sum/2;
    int sum2 = (sum+1)/2;

    int dp[sum+1];

    memset(dp, 0, sizeof(dp));
    dp[0]=1;

    ans *= (fact[sum1]*fact[sum2])%MOD;
    ans %= MOD;

    for(int i: arr)
    {
        ans *= ifact[i];
        ans %= MOD;
        if(i != 0) for(int j=sum; j>=i; j--) dp[j] += dp[j-i];
    }

    ans *= dp[sum1];
    ans %= MOD;

    cout << ans << endl;


}

signed main(){

    fact.push_back(1);
    ifact.push_back(1);

    for (int i = 1; i <= N; i++)
    {
        fact.push_back((fact[i - 1] * i) % MOD);
        ifact.push_back(modInverse(fact[i], MOD) % MOD);
    }


    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;
#define int long long

signed main(){
    int n, k, ans=0, sz = 5152, a;
    cin >> n >> k;

    int dp[2][k+1][sz];
    memset(dp, -1, sizeof(dp));
    dp[1][0][0]=0;

    for(int i=0; i<n; i++)
    {
        int five = 0, two = 0;
        cin >> a;
        int b=a;

        while(!(a%5))
        {
            a/=5;
            five++;
        }
        while(!(b%2))
        {
            b/=2;
            two++;
        }

        for(int j=0; j<=k; j++) for(int l=0; l<sz; l++) dp[0][j][l]=dp[1][j][l];
        for(int j=1; j<=k; j++) for(int l=0; l<sz; l++) dp[1][j][l] = max(dp[0][j][l], (l >= five ? dp[0][j-1][l-five]+(dp[0][j-1][l-five] != -1 ? two : 0): 0));
    }

    for(int i=0; i<sz; i++) ans = max(ans, min(i, dp[1][k][i]));

    cout << ans;
}

/*
#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, m;
    cin>>n>>m;
    int arr[n][m];
    for(int i=0; i<n; i++){
        for(int j=0; j<m; j++){
            char c;
            cin>>c;
            if(c=='W') arr[i][j]=1;
            else arr[i][j] = -1;
        }
    }
    if(n==1){
        if(arr[0][0]==arr[0][m-1]) cout<<"YES\n";
        else cout<<"NO\n";
        return ;
    }
    if(m==1){
        if(arr[0][0]==arr[n-1][0]) cout<<"YES\n";
        else cout<<"NO\n";
        return ;
    }
    
        if(arr[0][0]*arr[n-1][m-1] == 1 || arr[0][m-1]*arr[n-1][0]==1){
            cout<<"YES\n";
            return ;
        } 
        int c=0;
    bool flag = 1;
    for(int i=0; i<m-1; i++){
        if(arr[0][i] != arr[0][i+1]) flag = 0;
    }
    if(flag==1) {
        c++;
    }

    flag = 1;
    for(int i=0; i<m-1; i++){
        if(arr[n-1][i] != arr[n-1][i+1]) flag = 0;
    }
    if(flag==1) {
        c++;
    }

    flag = 1;
    for(int i=0; i<n-1; i++){
        if(arr[i][0] != arr[i+1][0]) flag = 0;
    }
    if(flag==1) {
        c++;
    }

    flag = 1;
    for(int i=0; i<n-1; i++){
        if(arr[i][m-1] != arr[i+1][m-1]) flag = 0;
    }
    if(flag==1) {
        c++;
    }
    if(c==2)
    cout<<"NO\n";
    else cout<<"YES\n";

}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}
*/

#include <bits/stdc++.h>
using namespace std;
typedef long long int lli;
 
int same_checker(string s){
    int flag = 0;
    if(s[0] == 'W'){
        flag = 1;
        //return 1;
    }
    for(int i=0; s[i] != '\0'; i++){
        if(s[i] != s[0]){
            return -1;
        }
    }
    return flag;
}
 
int main(){
    
    int t;
    cin>>t;
    while(t--){
        int n, m;
        cin>>n>>m;
        string sC1 = "", sC2 = "";
        int r1, r2, c1, c2;
        for(int i=0; i<n; i++){
            string s;
            cin>>s;
            sC1 += s[0];
            sC2 += s[m-1];
            if(i==0){
                r1 = same_checker(s);
            }
            else if(i==n-1){
                r2 = same_checker(s);
            }
        }
        c1 = same_checker(sC1);
        c2 = same_checker(sC2);
        if(r1 + r2 == 1 || c1+c2==1){
            cout<<"NO"<<endl;
        }
        else{
            cout<<"YES"<<endl;
        }
    }
 
    return 0;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;

const lli N = 5010;
const lli MOD = 998244353;
lli dp[N][N];
lli sum[N];


int main(){
    fastIO;
    lli n;
    cin>>n;
    lli arr[n];
    for(lli i=0; i<n; i++) cin>>arr[i];
    sort(arr, arr+n);
    memset(sum, 0, sizeof(sum));
    for(lli i=0; i<N; i++){
        for(lli j=0; j<N; j++){
            dp[i][j]=0;
        }
    }
    dp[arr[0]][arr[0]]++;
    sum[arr[0]]++;
    for(lli i=1; i<n; i++){


        for(lli j = N-1; j>arr[i]; j--){
            dp[j][arr[i]] += (sum[j-arr[i]])%MOD;
            dp[j][arr[i]] %= MOD;
        }



        for(lli j=N-1; j>arr[i]; j--){
            sum[j] += (sum[j-arr[i]])%MOD;
            sum[j] %= MOD;
        }
        dp[arr[i]][arr[i]]++;
        sum[arr[i]]++;
        dp[arr[i]][arr[i]] %= MOD;
        sum[arr[i]] %= MOD;
        
    }


   lli ans = 0;
   for(lli i=0; i<N; i++){
    for(lli j=0; j<N; j++){
        if(j>i/2) ans += j*dp[i][j];
        else ans += ((i+1)/2)*dp[i][j];
        ans %= MOD;
    }
}
cout<<ans;

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;


void solve(){
    lli n;
    cin>>n;
    lli arr[n];
    for(lli i=0; i<n; i++) cin>>arr[i];
    lli minn = INT64_MAX, maxx=0;
    for(lli i=0; i<n-1; i++)
    {
       maxx = max(arr[i], arr[i+1]);
       minn = min(minn, maxx);
    }
    cout<<minn-1<<endl;
}

int main(){
    fastIO;
    lli t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n, a, b, c;
    cin >> n >> a >> b >> c;

    int ans = 3 * (n/(a+b+c));
    n%=(a+b+c);

    if(n > 0 && n <= a) ans++;
    else if(n > a && n <= a+b) {ans += 2;}
    else if(n > a+b) {ans += 3;}

    cout << ans << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}


/*
#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long lli lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;

lli binpow(lli a, lli b) {
    lli res = 1;
    while (b > 0) {
        if (b & 1)
            res = res * a;
        a = a * a;
        b >>= 1;
    }
    return res;
}

const lli N = lli(3e5)+10;
const lli mod = lli(1e9) + 7;

lli f[N];

void solve(){
    lli n, k;
    cin>>n>>k;
    lli c=0;
    for(lli i=0; i<k; i++){
        lli x, y;
        cin>>x>>y;
        if(x==y) c++;
        else c += 2;
    }
    cout<<f[n-c]%mod<<endl;
}

lli main(){
    f[0] = 1;
    f[1] = 1;
    f[2] = 3;

    for(lli i=3; i<N; i++){
        f[i] = ((2*(i-1))*f[i-2] + f[i-1])%mod;
    }
    
    
    fastIO;
    lli t;
    cin>>t;
    while(t--){
        solve();
    }
}
*/


#include <bits/stdc++.h>
using namespace std;
typedef long long int lli;

#define MOD 1000000007


int main(){
    
    lli t;
    cin>>t;
    while(t--){
        lli n, k;
        cin>>n>>k;
        lli sq_side = n-k;
        while(k--){
            lli r, c;
            cin>>r>>c;
            if(r!=c){
                sq_side--;
            }
        }
        n=sq_side;
        lli memo[n+1];
        memo[0]=1;
        memo[1] = 1;
        memo[2] = 3;
        if(n>=3){
            for(lli i=3; i<=n; i++){
                memo[i] = ((memo[i-1]) + ((2*(i-1)*(memo[i-2]))))%MOD;
            }
            
        }
        cout<<(memo[n])<<endl;
    }
    return 0;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;

vector<pair<int, int>> moves(int n)
{
    vector<pair<int, int>> ans;
    
    if(n==1)
    {
        ans.push_back(make_pair(1, 3));
        return ans;
    }
    vector<pair<int, int>> prev = moves(n-1);
    for(pair<int, int> p:prev)
    {
        ans.push_back(make_pair((4-p.first)%3 + 1, (4-p.second)%3 + 1));
    }
    ans.push_back(make_pair(1, 3));
    for(pair<int, int> p:prev)
    {
        ans.push_back(make_pair((3-p.first%3), (3-p.second%3)));
    }
    return ans;
}



int main(){
    fastIO;
    int n;
    cin>>n;
    cout<<moves(n).size()<<endl;
    for(pair<int, int> p:moves(n))
    {
        cout<<p.first<<" "<<p.second<<endl;
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


signed main(){
    fastIO;
    int h, w, n;
    cin >> h >> w >> n;
    vector<set<int>> row(h+1), col(w+1);

    for(int i=0; i<n; i++)
    {
        int a, b;
        cin >> a >> b;
        row[a].insert(b);
        col[b].insert(a);
    }

    int q;
    cin >> q;
    while(q--)
    {
        int t, x;
        cin >> t >> x;
        if(t == 1)
        {

            cout << row[x].size() << endl;
            for(int i: row[x]) col[i].erase(col[i].find(x));
            row[x].clear();
        } 
        else
        {
            cout << col[x].size() << endl;
            for(int i: col[x]) row[i].erase(row[i].find(x));
            col[x].clear();
        }
    }

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n, m;
    cin >> n >> m;
    int nn;

    for(int i=0; i<=65; i++)
    {
        if((n/( 1LL<<i )) == 1)
        {
            nn = n - (1LL << i);
            break;
        }
    }

    int a = (nn^m);

    int b = a^n;

    if((n^m) < n) cout << "1\n" << n << " " << m << endl;
    else if(a < n && b < n) cout << "2\n" << n << " " << b << " " << m << endl;
    else cout << -1 << endl;


}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


signed main(){
    fastIO;
    int n, q;
    cin >> n >> q;

    int type[q], num[q];
    string quer[q];


    for(int i=0; i<q; i++)
    {
        cin >> type[i] >> num[i];
        if(type[i] == 2) cin >> quer[i];
    }

    int curr = 0;

    vector<string> ans;
    
    for(int i=q-1; i>=0; i--)
    {
        if(curr == 0) if(type[i] == 3) curr = num[i];
        else 
        {
            if(type[i] == 1) if(num[i] == curr) curr = 0;
            else if(type[i] == 2 && num[i] == curr) ans.push_back(quer[i]);
        }
    }

    reverse(ans.begin(), ans.end());

    for(string s: ans) cout << s;
    cout << endl;

}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    string s;
    cin>>s;
    bool yes = 0;
    for(int i=0; i<s.length()-1; i++)
    {
        if(s[i] != s[i+1])
        {
          yes = 1;  
        }
    }
    if(yes)
    {
        cout<<"YES\n";
        for(int i=0; i<s.length()-1; i++)
        {
            if(s[i] == s[i+1]) cout << s[i];
            else{
                cout<<s[i+1];
                s[i+1] = s[i];
            }
        }
        cout<<s[s.length()-1]<<endl;
    }
    else cout<<"NO\n";
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


signed main(){
    fastIO;
    int n;
    cin >> n;

    int arr[n], dp[n];
    dp[0]=0;

    for(int i=0; i<n; i++) cin >> arr[i];
    for(int i=1; i<n; i++) dp[i] = min(dp[i-1] + abs(arr[i] - arr[i-1]), (i >= 2 ? dp[i-2] + abs(arr[i] - arr[i-2]): INT_MAX));

    cout << dp[n-1];
    
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



signed main(){
    fastIO;
    int n, m;
    cin >> n >> m;
    char arr[n][m];

    vector<vector<bool>> visited(n, vector<bool>(m, 0));
    queue <pair<int, int>> q;
    

    for(int i=0; i<n; i++)
    {
        for(int j=0; j<m; j++) 
        {
            cin >> arr[i][j];
            if(arr[i][j] == 'E')
            {
                q.push({i, j});
                visited[i][j] = 1;
            }
            if(arr[i][j] == '#') visited[i][j]=1;
            
        }
    }


    while(!q.empty())
    {
        pair<int, int> p = q.front();
        q.pop();

        int x = p.first, y = p.second;

        if(x>0 && !visited[x-1][y])
        {
            visited[x-1][y] = 1;
            arr[x-1][y] = 'v';
            q.push({x-1, y});
        }

        if(y>0 && !visited[x][y-1])
        {
            visited[x][y-1] = 1;
            arr[x][y-1] = '>';
            q.push({x, y-1});
        }

        if(x<n-1 && !visited[x+1][y])
        {
            visited[x+1][y] = 1;
            arr[x+1][y] = '^';
            q.push({x+1, y});
        }

        if(y<m-1 && !visited[x][y+1])
        {
            visited[x][y+1] = 1;
            arr[x][y+1] = '<';
            q.push({x, y+1});
        }
    }

    for(int i=0; i<n; i++)
    {
        for(int j=0; j<m; j++) cout << arr[i][j];
        cout << endl;
    }
}

#include <bits/stdc++.h>
using namespace std;

int nextIndex(string s, int startindex, char c){
int i = startindex + 1;
while(c != s[i]){
i++;
}
return i;
}

void solve(){
    int n;
    string s, a;
    cin>>n>>s;
    for(int i=0; i<n; ){
        a.push_back(s[i]);
        i = nextIndex(s, i, s[i])+1;
    }
cout<<a<<endl;

}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    string x, y;
    cin>>x>>y;
    string x1="", y1="";
    bool first = 1;
    for(lli i=0; i<x.length(); i++){
        if(x[i]==y[i]){
            x1.push_back(x[i]);
            y1.push_back(y[i]); 
        }
        else if(first){
            if(x[i]-y[i]>0){
                x1.push_back(x[i]);
                y1.push_back(y[i]);
            }
            else {
                x1.push_back(y[i]);
                y1.push_back(x[i]);
            }
            first = 0;
        }
        else {
          if(y[i]-x[i]>0){
                x1.push_back(x[i]);
                y1.push_back(y[i]);
            }
            else {
                x1.push_back(y[i]);
                y1.push_back(x[i]);
            }
        }
    }
    cout<<x1<<endl<<y1<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}





#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int, int> pi;

void solve()
{
    int n, m;
    cin >> n >> m;
    char arr[n][m];
    int row[n], col[m];
    memset(row, 0, sizeof(row));
    memset(col, 0, sizeof(col));

    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
        {
            cin >> arr[i][j];
            if (arr[i][j] == '#')
            {
                row[i]++;
            }
        }
    }

    for (int j = 0; j < m; j++)
    {
        for (int i = 0; i < n; i++)
        {
            if (arr[i][j] == '#')
                col[j]++;
        }
    }

    int m1 = 0, m2 = 0, r, c;

    for (int i = 0; i < n; i++)
    {
        if (row[i] > m1)
        {
            m1 = row[i];
            r = i;
        }
    }

    for (int j = 0; j < m; j++)
    {
        if (col[j] > m2)
        {
            m2 = col[j];
            c = j;
        }
    }
    cout << r + 1 << " " << c + 1 << endl;
}

int main()
{
    fastIO;
    int t;
    cin >> t;
    while (t--)
    {
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

vector<int> uber, score;
int finalAns;

void dfs(int node, int parent, vector<vector<int>>& graph, vector<int>& coins) {
    int local = 0;
    int maxDist = coins[node] ? 0 : -1;

    for (int uber1 : graph[node]) {
        if (uber1 == parent) continue;
        dfs(uber1, node, graph, coins);
        maxDist = max(maxDist, uber[uber1]);
        if (uber[uber1] > 2) local += 2;
        local += score[uber1];
    }

    score[node] = local;
    uber[node] = (maxDist == -1 ? -1 : maxDist + 1);
}

void reroot(int node, int parent, vector<vector<int>>& graph, vector<int>& coins, int current) {
    int max1 = coins[node] ? 0 : -1;
    int max2 = -1;

    for (int uber2 : graph[node]) {
        if (uber[uber2] > max1) {
            max2 = max1;
            max1 = uber[uber2];
        } else if (uber[uber2] > max2) {
            max2 = uber[uber2];
        }
    }

    for (int uber3 : graph[node]) {
        if (uber3 == parent) continue;
        int now = current;
        if (uber[uber3] > 2) now -= 2;

        if (uber[uber3] == max1) {
            if (max2 + 1 > 2) now += 2;
            uber[node] = (max2 == -1 ? -1 : max2 + 1);
        } else {
            if (max1 + 1 > 2) now += 2;
            uber[node] = (max1 == -1 ? -1 : max1 + 1);
        }

        finalAns = min(finalAns, now);
        reroot(uber3, node, graph, coins, now);
    }
}

int collectTheCoins(vector<int>& coins, vector<vector<int>>& edges) {
    int n = coins.size();
    vector<vector<int>> graph(n);

    for (auto& e : edges) {
        graph[e[0]].push_back(e[1]);
        graph[e[1]].push_back(e[0]);
    }

    uber.resize(n);
    score.resize(n);

    dfs(0, -1, graph, coins);
    finalAns = score[0];
    reroot(0, -1, graph, coins, finalAns);
    return finalAns;
}


int main()
{
    int n;
    cin >>n;
    vector<int> pass(n);
    vector<vector<int>> edges(n-1, vector<int>(2));

    for(int i=0; i<n; i++) cin >> pass[i];
    for(int i=0; i<n-1; i++) cin >> edges[i][0] >> edges[i][1];


    cout << collectTheCoins(pass, edges);

}

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int, int> pi;

void solve()
{
    int a, b, c;
    cin >> a >> b >> c;

    if (a == 0)
    {
        if (c > 1)
            cout << -1 << endl;
        else if (c == 1)
        {
            cout << b << endl;
        }
        else if (b != 0)
        {
            cout << -1 << endl;
        }
        else
            cout << 0 << endl;
        return;
    }

    int aa = a + 1;
    int num = 1, level = -1;
    if ((aa & (aa - 1)) == 0)
        level--;

    while (aa != 0)
    {
        num *= 2;
        aa /= 2;
        level++;
    }

    int rem = (num - 1) - a;
    int last_level = num / 2 - rem;
    int zeros = 2 * last_level + rem;
    num /= 2;

    if (c != zeros)
        cout << -1 << endl;
    else
    {
        if (last_level == 0 && b != 0)
            level++;
        if (rem > 0 && b >= rem)
            b -= rem;
        else
            b = 0;
        cout << level + 1 + (b + c - 1) / c << endl;
    }
}

int main()
{
    fastIO;
    int t;
    cin >> t;
    while(t--)
    {
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    lli n, k;
    cin>>n>>k;
    if(k%3==0){
    if(n%(k+1) == k || (n%(k+1))%3 != 0) cout<<"Alice\n";
    else cout<<"Bob\n";
    }
    else if(n%3==0) cout<<"Bob\n";
    else cout<<"Alice\n";
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

/*
#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli, lli> pi;

lli close_to_zero(lli a, lli b)
{
    if (a > 0 && b > 0)
        return min(a, b);
    if (a < 0 && b < 0)
        return max(a, b);
    if (a > 0 && b < 0)
    {
        if (a + b > 0)
            return b;
        else
            return a;
    }
    if (a + b > 0)
        return a;
    return b;
}

void solve()
{

    lli n, sum = 0, bsum = 0;
    cin >> n;
    bool parity = 0;

    lli arr[n];
    vector<lli> ans(n);
    for (lli i = 0; i < n; i++)
        cin >> arr[i];
    lli minn = INT_MAX, min_index;

    for (lli i = 0; i < n; i++)
    {
        if (close_to_zero(minn, arr[i]) == arr[i])
        {
            min_index = i;
            minn = arr[i];
        }
    }

    for (lli i = 0; i < n; i++)
    {
        if (i != min_index)
        {
            if (parity)
            {
                ans[i] = (arr[i] / abs(arr[i])) * abs(minn / __gcd(arr[i], minn));
                sum += ans[i] * arr[i];
            }

            else
            {
                ans[i] = -1 * (arr[i] / abs(arr[i])) * abs((minn / __gcd(arr[i], minn)));
                sum += ans[i] * arr[i];
            }
            parity = !parity;
        }
    }

    ans[min_index] = -1 * sum / arr[min_index];

    if (sum == 0)
    {
        if (min_index != 0)
        {
            lli news = (ans[0] / abs(ans[0])) * abs((arr[min_index]));
            lli temp = arr[0];
            ans[0] += (ans[0] / abs(ans[0])) * abs((arr[min_index]));
            ans[min_index] -= (news * temp) / arr[min_index];
        }
        else
        {
            lli news = (ans[1] / abs(ans[1])) * abs((arr[min_index]));
            lli temp = arr[1];
            ans[1] += (ans[1] / abs(ans[1])) * abs(arr[min_index]);
            ans[min_index] -= (news * temp) / arr[min_index];
        }
    }

    for (lli i : ans)
        cout << i << " ";
    cout << endl;
}

int main()
{
    fastIO;
    lli t;
    cin >> t;
    while (t--)
    {
        solve();
    }
}
*/


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    int arr[n], b[n];
    for(int i=0; i<n; i++)
    {
        cin>>arr[i];
    }

    if(n%2 == 0)
    {
        for(int i=0; i<n; i+=2)
        {
            b[i] = arr[i+1];
            b[i+1] = -arr[i];
        }
        for(int i:b) cout<<i<<" ";
        cout<<endl;
    }

    else
    {
        for(int i = 0; i<n-3; i+=2)
        {
            b[i] = arr[i+1];
            b[i+1] = -arr[i];
        }
        if(arr[n-1]*arr[n-2] > 0)
        {
            b[n - 3] = arr[n-1] + arr[n-2];
            b[n - 2] = -arr[n-3];
            b[n-1] = -arr[n-3];
        }

        else if(arr[n-1] * arr[n-3] > 0)
        {
            b[n - 2] = arr[n-1] + arr[n-3];
            b[n - 1] = -arr[n-2];
            b[n-3] = -arr[n-2];
        }
        else{
            b[n - 1] = arr[n-2] + arr[n-3];
            b[n - 2] = -arr[n-1];
            b[n-3] = -arr[n-1];
        }

        for(int i:b) cout<<i<<" ";
        cout<<endl;
    }


}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, m, k, ans = 0;
    cin>>n>>m>>k;
    int b[n], c[m];
    for(int i=0; i<n; i++) cin>>b[i];
    for(int i=0; i<m; i++) cin>>c[i];

    for(int i=0; i<n; i++)
    {
        for(int j=0; j<m; j++)
        {
            if(b[i] + c[j] <= k) ans++;
        }
    }
    cout<<ans<<endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

const int N = 1e6+10;
const int MOD = 1e9+7;
int dp[N];

signed main(){
    memset(dp, 0, sizeof(dp));
    dp[0] = 1;

    fastIO;
    int n, x;
    cin >> n >> x;
    int c[n];
    
    for(int i=0; i<n; i++) cin >> c[i];

    for(int j=0; j<n; j++)
    {
        for(int i=1; i<=x; i++)
        {
            if(i - c[j] >= 0) dp[i] = (dp[i] + dp[i-c[j]])%MOD;
        }
    }

    cout << dp[x] << endl;
}

// #include <bits/stdc++.h>
// #define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
// using namespace std;
// #define int long long 

// typedef vector<int> vi;
// typedef pair<int,int> pi;


// void solve(){
//     int n;
//     cin>>n;
//     string s;
//     cin>>s;
//     if(s[0] == s[n-1]) cout<<"NO\n";
//     else cout<<"YES\n";

// }

// signed main(){
//     fastIO;
//     int t;
//     cin>>t;
//     while(t--){
//         solve();
//     }
// }


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;
const int MOD = 1e9+7;

int abModm(int a, int b, int m){
    a%=m;
    int res = 1;
    while (b > 0) {
        if (b & 1)
            res = (res * a)%m;
        a = (a * a)%m;
        b >>= 1;
    }
    return res;
}

signed main(){
    fastIO;
    int n, l, r;
    cin>>n>>l>>r;
    if(l > 2*100000 + 10)
    {
        cout<<0<<endl;
        return 0;
    }
    int arr[n];
    int big = 0;
    map<int, int> freq;
    for(int i=0; i<n; i++) 
    {
        cin>>arr[i];
        if(arr[i] > r) big++;
        else freq[arr[i]]++;
    }

    int ans = 1;
    ans *= abModm(2, big, MOD);

    for(auto p:freq)
    {
        if(p.first < l) ans *= (abModm(2, p.second, MOD) - 1);
        ans %= MOD;
    }

    for(int i=0; i<l; i++)
    {
        if(freq.find(i) == freq.end())
        {
            cout<<0<<endl;
            return 0;
        }
    }

    int a = 1, b = 1, c = 0;

    for(auto p:freq)
    {
        if(p.first >= l && p.first <= r)
        {
            c++;
            a *= abModm(2, p.second, MOD);
            a %= MOD;
            b *= (abModm(2, p.second, MOD) - 1);
            b%=MOD;
        }
    }
    if(c != r - l + 1) b = 0;


    ans *= (a-b);
    cout<<ans%MOD<<endl;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

const int MOD = 998244353;

int abModm(int a, int b, int m){
    a%=m;
    int res = 1;
    while (b > 0) {
        if (b & 1)
            res = (res * a)%m;
        a = (a * a)%m;
        b >>= 1;
    }
    return res;
}

bool cmp(pair<int, int> p1, pair<int, int> p2){
    if(max(p1.first, p1.second) > max(p2.first, p2.second)) return 1;
    if(max(p1.first, p1.second) < max(p2.first, p2.second)) return 0;
    if(min(p1.first, p1.second) > min(p2.first, p2.second)) return 1;
    return 0;
}

void solve(){
    int n;
    cin >> n;
    int p[n], q[n];

    for(int i=0; i<n; i++) cin >> p[i];
    for(int i=0; i<n; i++) cin >> q[i];

    int max1[n], max2[n];
    int m1=0, m2 = 0;

    for(int i=0; i<n; i++)
    {
        if(i == 0)
        {
            max1[0]=max2[0]=0;
            m1 = p[0];
            m2=q[0];
        }
        else 
        {
            if(p[i] > m1)
            {
                m1 = p[i];
                max1[i] = i;
            }
            else max1[i]=max1[i-1];

            if(q[i] > m2)
            {
                m2 = q[i];
                max2[i] = i;
            }
            else max2[i]=max2[i-1];
        }
    }

    

    for(int i=0; i<n; i++)
    {
        int ind1 = max1[i];
        int ind2 = max2[i];

        pair<int, int> p1 = {p[ind1], q[i-ind1]};
        pair<int, int> p2 = {p[i-ind2], q[ind2]};


        if(cmp(p1, p2))
        {
            cout << (abModm(2, p1.first, MOD) + abModm(2, p1.second, MOD)) % MOD << " ";
        }
        else 
        {
            cout << (abModm(2, p2.first, MOD) + abModm(2, p2.second, MOD)) % MOD << " ";
        }
    }
    cout << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int arr[3];
    cin>>arr[0]>>arr[1]>>arr[2];
    sort(arr, arr+3);
    cout<<arr[2]-arr[0]<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
typedef long long int lli;
void solve(){
    lli y, x;
    cin>>x>>y;
    lli a = max(x, y)*(max(x, y)-1)+1;
    if(y==x) cout<<a;
    else if(y>x){
        if(y%2==0) cout<<a-(y-x);
        else cout<<a+(y-x);
    }
    else{
        if(x%2==0) cout<<a-y+x;
        else cout<<a+(y-x);
    }
    cout<<endl;
}

int main(){
    
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



void solve(){
    int n, a, b, c, d;
    cin >> n >> a >> b >> c >> d;
    int ans = 0;
    for(int x=0; x<=n; x++)
    {
        int y = n-x;
        ans = max(ans, x*a+y*b+c*x*y);
        ans = max(ans, x*a+y*b+d*x*y);
    }

    cout << ans << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include<iostream>
using namespace std;
int main(){
    int a[3];
    int b;
    a[0] = 0;
    a[1] = 0x18A;
    a[2] = 0;
    b = 014;
    cin>>b;
  
  cout<<a[1]<<" "<<b;
  return 0;
}


// #include <bits/stdc++.h>
// #define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
// using namespace std;
// #define int long long 



// void solve(){
//     int n, m;
//     cin >> n >> m;

//     int check[n];
//     for(int i=0; i<n; i++) cin >> check[i];


//     vector<vector<pair<int, int>>> adj(n);

//     for(int i=0; i<m; i++)
//     {
//         int u, v, w;
//         cin >> u >> v >> w;
//         adj[u-1].push_back({v-1, w});
//     }

//     vector<int> topo;
//     vector<bool> visited(n, 0);

//     function <void(int)> dfs = [&](int u) -> void
//     {
//         visited[u]=1;
//         for(pair<int, int> v: adj[u])
//         {
//             if(!visited[v.first])
//             {
//                 dfs(v.first);
//             }
//         }
//         topo.push_back(u);
//     };

//     dfs(0);

//     reverse(topo.begin(), topo.end());


//     vector<pair<int, int>> min_max(n);

//     min_max[0] = {0, 0};

//     for(int i=1; i<n; i++) min_max[i] = {INT_MAX, INT_MIN};

//     for(int u: topo)
//     {
//         for(pair<int, int> v: adj[u])
//         {
//             if(v.second <= min_max[u].first) min_max[v.first].first = min(min_max[u].first, min_max[v.first].first);
//             else if(min_max[u].second + check[u] >= v.second) min_max[v.first].first = min(max(v.second, min_max[u].first), min_max[v.first].first);

//             if(min_max[u].second + check[u] >= v.second) min_max[v.first].second = max(min_max[u].second + check[u], min_max[v.first].second);
//         }
//     }

//     for(int i=0; i<n; i++) cout << min_max[i].first << " " << min_max[i].second << endl;


//     if(min_max[n-1].first <= min_max[n-1].second) cout << min_max[n-1].first << endl;
//     else cout << -1 << endl;

// }

// signed main(){
//     fastIO;
//     int t;
//     cin>>t;
//     while(t--){
//         solve();
//     }
// }

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long

void solve() {
    int n, m;
    cin >> n >> m;

    vector<int> check(n);
    for (int i = 0; i < n; i++) cin >> check[i];

    vector<vector<pair<int, int>>> adj(n); // {to, weight}
    for (int i = 0; i < m; i++) {
        int u, v, w;
        cin >> u >> v >> w;
        adj[u - 1].emplace_back(v - 1, w);
    }

    using T = tuple<int, int, int>; // (collected, node, battery)
    priority_queue<T, vector<T>, greater<T>> pq;
    pq.emplace(0, 0, 0); // collected = 0, node = 0, battery = 0

    // visited[node][battery] = collected
    vector<unordered_map<int, int>> visited(n);

    while (!pq.empty()) {
        auto [collected, u, battery] = pq.top(); pq.pop();

        if (visited[u].count(battery) && visited[u][battery] <= collected) continue;
        visited[u][battery] = collected;

        int new_battery = battery + check[u];

        for (auto &[v, w] : adj[u]) {
            if (new_battery < w) continue;
            int need = max(0LL, w - battery); // how many batteries to take at u
            int new_collected = collected + need;
            int next_battery = new_battery;

            if (!visited[v].count(next_battery) || visited[v][next_battery] > new_collected) {
                pq.emplace(new_collected, v, next_battery);
            }
        }
    }

    if (visited[n - 1].empty()) {
        cout << -1 << '\n';
    } else {
        int ans = LLONG_MAX;
        for (auto &[batt, collected] : visited[n - 1]) {
            ans = min(ans, collected);
        }
        cout << ans << '\n';
    }
}

signed main() {
    fastIO;
    int t;
    cin >> t;
    while (t--) solve();
}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, m, k;
    cin>>n>>m>>k;
    if((n*(m-1))/m <= k) cout<<"NO"<<endl;
    else cout<<"YES\n";
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long ll ;
typedef vector<ll> vi;
typedef pair<ll,ll> pi;

ll dp[100005];


ll solve(ll arr[], ll i){
    
    if(i>=100000) return dp[i] = (i)*arr[i];
    if(dp[i] != -1) return dp[i];
    return dp[i] = max(i*arr[i] + solve(arr, i+2), solve(arr, i+1));
}

int main(){
    for(ll i=0; i<100005; i++) dp[i] = -1;
    fastIO;
    ll n;
    cin>>n;
    ll freq[100005];
    for(ll i=0; i<100005; i++) freq[i] = 0;
    for(ll i=0; i<n; i++){
        ll x;
        cin>>x;
        freq[x]++;
    }
     //for(ll i=0; i<10; i++) cout<<freq[i]<<" ";

    cout<<solve(freq, 0);
    
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;

void solve(){
    int x, y, z, k, ans = 0;
    cin >> x >> y >> z >> k;

    for (int s1 = 1; s1 <= x; s1++)
    {
        for (int s2 = 1; s2 <= y; s2++)
        {
            if (k % (s1 * s2) == 0 && k / (s1 * s2) <= z)
            {
                int s3 = k / (s1 * s2);
                ans = max(ans, (x - s1 + 1) * (y - s2 + 1) * (z - s3 + 1));
            }
        }
    }

    cout << ans << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long

void solve(){
    int n, ans = 0;
    cin >> n;
    int arr[n];
    vector<vector<int>> adj(n);
    vector<bool> visited(n, 0);

    for(int i=0; i<n; i++)
    {
        cin >> arr[i];
        adj[arr[i]-1].push_back(i);
    }

    function <int(int)> dfs = [&](int u) -> int
    {
        int ans = 1;
        visited[u] = 1;
        for(int v: adj[u])
            if(!visited[v])
                ans += dfs(v);
        return ans;
    };
    
    for(int i=0; i<n; i++)
    {
        int u;
        cin >> u;
        u--;
        if(!visited[u])
        ans += dfs(u);
        cout << ans << " ";
    }
    cout << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;






void solve(){ 
    int n;
    cin>>n;
    long long int a[n], cd[n], cd1[n];
    bool yes = true;
    for(int i=0; i<n-1; i++){
        cin>>a[i];
    }



 if(a[n]>(n*(n+1))/2){
    yes = false;
 }

else if(a[0] != 1){
        cd[0] = 1;
        cd[1] = a[0]-1;
        for(int i=2; i<n; i++){
            cd[i] = a[i-1]-a[i-2];
        }
            sort(cd, cd+n);
    for(int i=0; i<n; i++){
        if(cd[i] != i+1){
            yes = false;
            break;
        }
    }
    }
else if( a[n] < (n*(n+1))/2){

    cd[0] = 1;
    
        for(int i=1; i<n-1; i++){
            cd[i] = a[i]-a[i-1];
        }
        cd[n-1] = (n*(n+1))/2 - a[n-2];
            sort(cd, cd+n);
    for(int i=0; i<n; i++){
        if(cd[i] != i+1){
            yes = false;
            break;
        }
    }
}
else{


}
   
  



    if(yes){
        cout<<"YES"<<endl;
    }
    else{
        cout<<"NO"<<endl;
    }

}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
  int n;
  cin>>n;
  string s;
  cin>>s;
  bool possible = 0;
  int farr[26];
  
    for(int i=0; i<26; i++) farr[i]=0;
  if(n%2==1) {
    cout<<-1<<endl;
    return;
    }

//   for(int i=0; i<n; i++){
//     farr[s[i]-'a'] += 1;
//   }
// sort(farr, farr+26, greater<int>());

//   int v = 0;

  
//   for(int i=0; i<26; i++){
//     v += farr[i];
//     if(v == n/2) possible = 1;
//   }
for(int i=0; i<n/2; i++)
{
    if(s[i]==s[n-i-1]){
        farr[s[i]-'a'] += 1;
    }
}

int sum = 0;
sort(farr, farr+26, greater<int>());
sum = 0;
for(int i=0; i<26; i++){
    cout<<farr[i]<<" ";
    if(i%2==0) sum += farr[i];
}
cout<<sum<<endl;

}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

const int N = 1e;
int dp[N];


bool possible(int t, int arr[], int n, int w, int f)
{
    int a = t*w, b = t*f;
    int s1 = a+b;

    int ans = dp[min(a, b)];

    if(ans <= s1 - accumulate(arr, arr+n, (int)0)) return 1;

    return 0;
}

void solve(){
    int w, f, n;
    cin >> w >> f >> n;

    int s[n];
    
    for(int i=0; i<n; i++) cin >> s[i];


    for(int i=0; i<N; i++) dp[i] = i;

    for(int i=0; i<n; i++)
    {
        for(int j=N-1; j>=1; j--)
        {
            if(j - s[i] >= 0) dp[j] = min(dp[j], dp[j - s[i]]);
        }
    }


    int l = (accumulate(s, s+n, (int)0) + w + f - 1)/(w+f), r = (accumulate(s, s+n, (int)0) + min(w, f) - 1)/min(w, f);

    int mid = (l+r)/2;

    while(r > l)
    {
        if(possible(mid, s, n, w, f)) r = mid;
        else l = mid+1;

        mid = (l+r)/2;
    }

    cout << r << endl;
}

signed main(){

    

    


    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int, int> pi;

vector<bool> visited;
vector<int> adj;

bool dfs(int u, set<int> &elements)
{

    bool t = 0;

    if (elements.find(u - 1) != elements.end())
        t = 1;
    if (elements.find(u + 1) != elements.end())
        t = 1;

    elements.insert(u);
    visited[u] = 1;
    if (!visited[adj[u]])
        t = t | dfs(adj[u], elements);
    return t;
}

void solve()
{

    int n, exclude = 0, corr = 1;
    cin >> n;
    visited.clear();
    adj.clear();
    visited.resize(n + 1, 0);
    adj.resize(n + 1);

    for (int i = 1; i <= n; i++)
    {
        int a;
        cin >> a;
        adj[i] = a;
    }

    for (int i = 1; i <= n; i++)
    {
        if (!visited[i])
        {
            set<int> elements;
            if (dfs(i, elements))
                corr = -1;
            exclude++;
        }
    }

    cout << n - exclude + corr << endl;
}

int main()
{
    fastIO;
    int t;
    cin >> t;
    while (t--)
    {
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    int arr[n];
    bool unit_digit[2], yes = 1;
    memset(unit_digit, 0, sizeof(unit_digit));
    for(int i=0; i<n; i++){
        cin>>arr[i];
        if(arr[i] % 10 == 5) arr[i] += 5;
        if(arr[i] % 10 == 1) arr[i] += 1;
        if(arr[i] % 10 == 3) arr[i] += 9;
        if(arr[i] % 10 == 4) arr[i] += 18;
        if(arr[i] % 10 == 6) arr[i] += 6;
        if(arr[i] % 10 == 7) arr[i] += 25;
        if(arr[i] % 10 == 8) arr[i] += 14;
        if(arr[i] % 10 == 9) arr[i] += 23;
    }
    for(int i=0; i<n; i++){
        if(arr[i]%10 == 0) unit_digit[0] = 1;
        else unit_digit[1] = 1;
    }
    if(unit_digit[0] == 1 && unit_digit[1] == 1) yes = 0;
    else if(unit_digit[0] == 1){
        for(int i=0; i<n-1; i++){
            if(arr[i]!=arr[i+1]){
                yes = 0;
                break;
            }
        }
    }
    else{
        for(int i=0; i<n-1; i++){
            if(abs(arr[i+1]-arr[i])%20 != 0){
                yes = 0;
                break;
            }
        }
    }
    if(yes) cout<<"Yes\n";
    else cout<<"No\n";
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n;
    cin >> n;

    vector<vector<int>> adj(n+1);
    int dp[n+1];

    for(int i=2; i<=n; i++)
    {
        int a;
        cin >> a;
        adj[a].push_back(i);
        adj[i].push_back(a);
    }


    function <void(int, int)> dfs = [&](int u, int p) -> void
    {
        
        multiset<int> childs;

        for(int v: adj[u])
        {
            if(v != p)
            {
                
                dfs(v, u);
                childs.insert(dp[v]);
            }
        }
        
        if(childs.size() == 0) dp[u] = 0;
        else
        {
            if(childs.size() == 1)
            {
                dp[u] = *childs.begin() + 1;
                return;
            }
            while(childs.size() > 1)
            {
             
                int maxx = 0;
                auto ptr = childs.begin();
                maxx = *ptr;
                ptr++;
                maxx = max(maxx, *ptr);
                childs.erase(childs.begin());
                childs.erase(childs.begin());
                childs.insert(maxx + 1);
            }

            auto ptr = childs.begin();
            dp[u] = *ptr;
        }
    };

    dfs(1, -1);
    cout << dp[1] << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n, x, y;
    cin>>n>>x>>y;
    int arr[x], b[x];

    for(int i=0; i<x; i++) cin>>arr[i];
    sort(arr, arr+x);
    lli ans = x-2;
    for(int i=0; i<x-1; i++){
        b[i] = arr[i+1]-arr[i]+1;
    }
    b[x-1] = n-arr[x-1]+arr[0]+1;
    sort(b, b+x);
    for(int i=0; i<x; i++){
        //cout<<b[i]<<" ";
        if(b[i]>=3){
        if(y - b[i] + 3 >= 0){

            ans += b[i]-2;
            //cout<<ans<<endl;
            y -= b[i]-3;
        }
        else{
            ans += y;
            y = 0;
            break;
            }
        }

    }
    cout<<ans<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

vector<vector<int>> adj;
vector<int> c;

vector <int> dp;

int dfs(int u, int p)
{
    if(dp[u] != -1) return dp[u];
    
    int ans = 0;
    bool nochild = 1;
    for(int v:adj[u])
    {
        if(v != p)
        {
            dfs(v, u);
            ans+=dp[v];
            nochild = 0;
        }
    }
    if(nochild) return dp[u] = c[u];
    return  dp[u] = min(c[u], ans);
}

void solve(){
    int n, k;
    cin>>n>>k;

    c.clear();
    adj.clear();
    dp.clear();

    c.resize(n+1);
    adj.resize(n+1);
    dp.resize(n+1, -1);
    for(int i=0; i<n; i++) cin>>c[i+1];
    for(int i=0; i<k; i++)
    {
        int u;
        cin>>u;
        c[u] = 0;
    } 

    for(int i=0; i<n; i++)
    {
        int a;
        cin>>a;
        while(a--)
        {
            int u;
            cin>>u;
            adj[i+1].push_back(u);
        }
    }

    for(int i=1; i<=n; i++)
    {
       cout << dfs(i, -1) << " ";
    }
    
    cout<<endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n, m;
    cin >> n >> m;
    int arr[n];

    for(int i=0; i<n; i++)
    {
        string s;
        cin >> s;
        arr[i] = s.size();
    }

    int a = 0, ans = 0;

    for(int i=0 ; i<n; i++)
    {
        if(arr[i] + a > m) break;
        else 
        {
            ans ++;
            a+=arr[i];
        }
    }

    cout << ans << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



signed main()
{
    fastIO;
    string s;
    cin >> s;
    int ans = 0;
    for(int i=0; i<s.size()-1; i++) ans += (s[i] - s[i+1] + 10)%10;
    cout << ans + s.size() + (s[s.size()-1] - '0') << endl;
}

#include <bits/stdc++.h>
using namespace std;


bool sort1(const pair<long long int, int> &a, const pair<long long int, long long int> &b){
    if(a.first != b.first ){
        return (a.first < b.first);
    }
    else{
        return (a.second>b.second);
    }
}


void solve(){
    long long int n, k;
    cin>>n>>k;
    //long long int health[n][2];
    vector<pair<long long int, long long int> > health;
    for(int i=0; i<n; i++){
        int a;
        cin>>a;
        health.push_back(make_pair(a, i+1));
        if(health[i].first%k==0){
            cout<<i+1<<" ";
        }else{
            health[i].first = health[i].first%k;
        }
    }
    sort(health.begin(), health.end(), sort1);
   for(int i=n-1; i>=0; i--){
        if(health[i].first%k!=0){
            cout<<health[i].second<<" ";
        }
    }
    cout<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int n, m, k, minn = INT_MAX, ans = 0;
    cin >> n >> m >> k;
    
    char arr[n][m];

    for(int i=0; i<n; i++) for(int j=0; j<m; j++) cin >> arr[i][j];

    int pref[n+1][m+1];

    memset(pref, 0, sizeof(pref));

    for(int i=1; i<=n; i++)
    {
        for(int j=1; j<=m; j++)
        {
            pref[i][j] = pref[i-1][j] + pref[i][j-1] - pref[i-1][j-1];
            pref[i][j] += (arr[i-1 ][j-1] == 'g');
            ans += (arr[i-1 ][j-1] == 'g');
        }
    }

    for(int i=0; i<n; i++)
    {
        for(int j=0; j<m; j++)
        {
            if(arr[i][j] == '.')
            {
                int x1 = max(i-k+1, (int)0);
                int y1 = max(j-k+1, (int)0);

                int x2 = min(i+k-1, n-1);
                int y2 = min(j+k-1, m-1);

                minn = min(minn, pref[x2+1][y2+1] - pref[x1][y2+1] - pref[x2+1][y1] + pref[x1][y1]);
            }
        }
    }

    cout << ans - minn << endl;

}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

bool kproper(string s1, int k, int p)
{

    string s;

    for(int i=p; i<s1.length(); i++)
    {
        s.push_back(s1[i]);
    }

    for(int i=p-1; i>=0; i--) s.push_back(s1[i]);


    int n = s.length();
    for(int i=0; i<n; i++)
    {  
        if((i/k)%2 == 0)
        {
            if(s[i] != s[0]) return 0;
        }
        else if(s[i] == s[0]) return 0;
    }
    return 1;
}


void solve(){
    int n, k;
    cin >> n >> k;
    string s;
    cin >> s;

    int count = 1, p = n;

    for(int i=1; i<s.length(); i++)
    {
        
        if(s[i] == s[i-1]) count++;
        else 
        {
            if(count < k)
            {
                p = i;
                break;
            }
            if(count>k)
            {
                p = i-k;
                break;
            }
            count  = 1;
        }
    }

    if(kproper(s, k, p)) cout << p << endl;
    else cout << -1 << endl;
    
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long

void solve()
{
    int n;
    cin >> n;
    int arr[n], ans=0;
    for(int i=0; i<n; i++) cin >> arr[i];    

    for(int i=0; i<n; i++)
    {
        for(int j=i; j<n; j++)
        {
            int prev = 0;
            bool can=1;
            for(int k=i+1; k<=j; k++)
            {
                if((arr[k]+1)/2 > prev+1) prev++;
                else if(prev < arr[k]) {prev = arr[k];}
                else can=0;
            }
            ans += can;
        }
    }

    cout << ans << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 



void solve(){
    int n, m;
    cin >> n >> m;
    int arr[n];

    for(int i=0; i<n; i++) cin >> arr[i];

    sort(arr, arr+n);
    reverse(arr, arr+n);

    for(int i=0; i<n; i++) 
    {
        if(m - arr[i] >= 0) m -= arr[i];
        else break;
    }

    cout << m << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;

bool skipped(int arr[], int n, int ind)
{
    int prev = __gcd(arr[0], arr[1]);
    if(ind == 0) prev = __gcd(arr[1], arr[2]);
    else if(ind == 1) {prev = __gcd(arr[0], arr[2]);}
    
    for(int i=0; i<n-1; i++)
    {
        if(i == ind) i++;
        if(i != ind-1 && __gcd(arr[i], arr[i+1]) < prev)
        {
            prev = __gcd(arr[i], arr[i+1]);
            return 0;
        }
        else if(i == ind - 1 && i < n-2)
        {
            if(__gcd(arr[i], arr[i+2]) < prev)
            {
                return 0;
            }
            prev = __gcd(arr[i], arr[i+2]);
            i++;
        }
        else
        {
            prev = __gcd(arr[i], arr[i+1]);
        }
    }
    return 1;
}

void solve()
{
    int n;
    cin>>n;
    int a[n], prev, ind = -1;
    for(int i=0; i<n; i++) cin>>a[i];
    prev = __gcd(a[0], a[1]);

    for(int i=1; i<n-1; i++)
    {
        if(__gcd(a[i], a[i+1]) < prev)
        {
            ind = i;
            if(skipped(a, n, i-1) || skipped(a, n, i) || skipped(a, n, i+1))
            {
                cout<<"YES\n";
                return;
            }
            else 
            {
                cout<<"NO\n";
                return;
            }
        }
        prev = __gcd(a[i], a[i+1]);
    }

    if(ind == -1)
    {
        cout<<"YES\n";
    }
    else 
    {
        cout<<"NO\n";
    }

    
}

signed main(){
    fastIO;
    int t;
    
    cin>>t;
    while(t--){
        solve();
    }
    
    
}

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;
typedef long long int lli;

string d(string s, lli a)
{

    string ans = "";

    for (lli i = 0; i < s.length(); i++)
    {
        while (ans.size() != 0 && ans[ans.size() - 1] > s[i] && ans.size() + s.size() - i > a)
        {
            ans.pop_back();
        }
        if (ans.length() < a)
            ans.push_back(s[i]);
    }
    return ans;
}

void solve()
{
    string s;
    lli sum = 0, v, pos;
    cin >> s >> pos;
    lli n = s.length(), ind;
    for (lli i = 0; i < n; i++)
    {
        sum += n - i;
        if (sum >= pos)
        {
            v = pos - sum + n - i;
            ind = i;
            break;
        }
    }
    cout << d(s, s.length() - ind)[v - 1];
}

int main()
{
    fastIO;

    lli t;
    cin >> t;
    while (t--)
    {
        solve();
    }
}



#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;

int main(){
    fastIO;
    int n, k;
    cin>>n>>k;
    //k-=1;
    cout<<1 + (n-2)/(k-1);
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int a, b, c;
    cin>>a>>b>>c;
    if(a+b+c-min(min(a, b), min(b, c))>=10){
        cout<<"YES"<<endl;
    }
    else{
        cout<<"NO"<<endl;
    }
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int xminn, xmaxx, n1, n2, m1, m2;
    cin >> xminn >> n1 >> m1;
    xmaxx = xminn;
    n2=n1, m2=m1;

    while(n1-- && xmaxx) xmaxx = xmaxx/2;
    while(m2-- && xminn >1) xminn = (xminn+1)/2;
    while(m1-- && xmaxx >1) xmaxx = (xmaxx+1)/2;
    while(n2-- && xminn) xminn = xminn/2;
    cout << xminn << " " << xmaxx << endl;

    cout << ((long long)500000004*25)%1000000007 << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){

    int a, b, c, d;
    cin >> a >> b >> c >> d;

    if(d%2 == 1) d--;

    int x = a%2+b%2+c%2;

    if(x == 0)
    {
        cout << (a + b + c + d + 1)/2 << endl;
    }
    else if(x == 3)
    {
        cout << 1 + (a + b + c + d - 2)/2 << endl;   
    }
    else if(x == 1)
    {
        cout << (a + b + c + d)/2 << endl;
    }
    else cout << (a + b + c + d - 1)/2 << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;

const lli N = 2e5+10;

lli dp[N];


lli sum(lli arr[], lli n, lli ind, lli num){
    if(dp[ind][num]!=-1) return dp[ind][num];
    lli s = 0;
    if(num<=0) return dp[ind][num] = 0;

    if ((n-ind)%2==1 && (n-ind+1)/2 == num)
           return dp[ind][num] = arr[ind] + sum(arr, n, ind+2, num-1);

    for(lli i=ind; i<n; i++){
        
       if((n-(i+2)+1)/2 >= num-1){

            s = max(arr[i] + sum(arr, n, i+2, num-1), s);
        }
        
    }
    
    return dp[ind][num] = s;
}

int main(){
    fastIO;
  
    
    for(int i=0; i<N; i++){
        for(int j=0; j<N/2; j++){
            dp[i][j]=-1;
        }
    }
    lli n;
    cin>>n;
    lli arr[n];
    for(lli i=0; i<n; i++) cin>>arr[i];
    cout<<sum(arr, n, 0, n/2);

 
}





#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve()
{
    int n, ans=0;
    cin >> n;
    int arr[n];

    set<int> s;
    for(int i=0; i<n; i++) cin >> arr[i];
    
    for(int i=0; i<n+1; i++)
    {
        if(i<n && arr[i] == 0) rotate(arr, arr+i, arr+n);
        s.insert(i);
    }

    for(int i=0; i<n; i++)
    {
        s.erase(s.find(arr[i]));
        ans += *s.begin();
    }

    cout << ans << endl;


}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
#define int long long 

const int P = 1e9+7;

int InverseModulo(int a, int p){

    int q = p-2;
    int res = 1;
    while (q > 0) {
        if (q & 1)
            res = (res * a)%p;
        a = (a * a)%p;
        q >>= 1;
    }
    return res%p;
}

void solve(){
    int n;
    cin>>n;
    int arr[n], N = 0;
    for(int i=0; i<n; i++)
    {
        cin>>arr[i];
        N += arr[i];
        N %= P;
    }

    N *= N;
    N%=P;

    for(int i=0; i<n; i++)
    {
         N -= (arr[i]*arr[i])%P;
         N %= P;
    }

    int D = (n*(n-1));
    int g = gcd(N, D);

    N/=g;
    D/=g;

    N%=P;
    D%=P;

    N *= InverseModulo(D, P);
    cout<<(N%P + P)%P<<endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}



#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    lli n;
    cin>>n;
    cout<<(n*(n+1)*(4*n-1))/6<<" "<<2*n-1<<endl;
    lli c = 2;
    lli in = n;
    for(lli i=0; i<2*n-1; i++){
        
        cout<<c<<" "<<in<<" ";
        for(int j=1; j<=n; j++){
            cout<<j<<" ";
        }
        cout<<endl;
        c = (2*c)%3;
        if(i % 2 == 0) in--;
    }
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    string s, s1 = "abcdefghijklmnopqrstuvwxyz";
    cin >> s;
    int n = s.size();
    int ans = 0;

    for(int i=1; i<n; i++)
    {
        if(s[i] == s[i-1] || (i > 1 && s[i] == s[i-2])) 
        {
            for(char c: s1)
            {
                if(c != s[i-1] && (i == n-1 || c != s[i+1]) && (i == 1 || c != s[i-2]) && (i == n-2 || c != s[i+2]))
                {
                    s[i] = c;
                    break;
                }
            }
            ans++;
        }
    }

    cout << ans << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int, int> pi;

void solve()
{
    int n;
    string s;
    bool leading_zero = 1;
    cin >> n >> s;
    int psum[n];
    psum[0] = s[0] - '0';

    for (int i = 1; i < n; i++)
    {
        psum[i] = psum[i - 1] + (s[i] - '0');
    }
    for (int i = n - 1; i >= 1; i--)
    {
        psum[i - 1] += psum[i] / 10;
        psum[i] %= 10;
    }

    for (int i : psum)
    {
        if (i != 0)
            leading_zero = 0;

        if (!leading_zero)
            cout << i;
    }
    cout << endl;
}

int main()
{

    fastIO;
    int t;
    cin >> t;
    while (t--)
    {
        solve();
    }
}

#include <bits/stdc++.h>
#include <algorithm>
#include <iostream>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;


int gcd(int a, int b){
    if (b == 0)
       return a;
    return gcd(b, a % b); 
}


void solve(){
    int n, g, ans=0;
    cin>>n;
    int arr[n];
    for(int i=0; i<n; i++){
        cin>>arr[i];
    }
    vector <int> factor;
    for(int i=1; i<sqrt(n); i++){
        if(n%i==0){
            factor.push_back(i);
        }
    }
    
    for(int i=sqrt(n); i>0; i--){
        if(n%i==0){
            factor.push_back(n/i);
        }
    }
    for(int k:factor){
        if(k!=n){
        g = gcd(abs(arr[0]-arr[k]), abs(arr[1]-arr[k+1]));
        for(int i=2; i<n-k; i++){
            g = gcd(g, abs(arr[i]-arr[i+k]));
        }
        if(g!=1){
            ans++;
        }
    }}
cout<<ans+1<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n;
    cin>>n;
    long long int arr[n];
    for(int i=0; i<n; i++){
        cin>>arr[i];
    }
    sort(arr, arr+n);
    long long int a = arr[0]*arr[1];
    long long int b = arr[n-2]*arr[n-1];
    cout<<max(a, b)<<endl;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

void solve(){
    int n;
    cin >> n;
    string s;
    cin >> s;
    vector<int> done(n, 0);
    for(int i=0; i<n; i++)
    {
        if(s[i] == '1')
        {
            if(i>0&&s[i-1] == '0' && !done[i-1])
            {
                done[i-1] = done[i] = 1;
            }
        }
        else 
        {
            if(i>0&&s[i-1] == '1' && !done[i-1])
            {
                done[i-1] = done[i] = 1;
            }
        }
    }   

    for(int i=0; i<n; i++)
    {
        if(s[i] == '0' && !done[i])
        {
            cout << "No\n";
            return;
        }
    }
    cout << "Yes\n";
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

// #include <bits/stdc++.h>
// #define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
// using namespace std;
// #define int long long 

// void solve(){
//     int n, k, ans = 0;
//     cin>>n>>k;
//     int arr[n];
//     for(int i=0; i<n; i++) cin>>arr[i];
//     map<vector<pair<int, int>>, int> mp;
    
//     for(int i=0; i<n; i++)
//     {
//         vector<pair<int, int>>v;
//         for(int j = 2; j*j<=arr[i]; j++)
//         {
//             int cnt = 0;
//             while(arr[i] % j == 0)
//             {
//                 arr[i] /= j;
//                 cnt++;
//             }
//             if(cnt % k != 0)
//             {
//                 v.push_back(make_pair(j, cnt%k));
//             }
//         }
//         if(arr[i] != 1) v.push_back(make_pair(arr[i], 1));
//         mp[v]++;
//     }

//     for(auto vv:mp)
//     {
//         vector<pair<int, int>> v;
//         bool same = 1;
//         for(pair<int, int> p:vv.first)
//         {
//             v.push_back(make_pair(p.first, k - p.second));
//             if(p.second != k-p.second) same = 0;
//         }

//         ans += mp[vv.first] * mp[v];
//         if(same)
//         {
//             ans -= mp[v];
//         }
//     }

//     cout << ans/2 << endl;

    
   
// }

// signed main(){
//     fastIO;
//     int t;
//     //cin>>t;
//     t = 1;
//     while(t--){
//         solve();
//     }
// }



#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;




signed main(){
    fastIO;
    int c = 1;
    for(int i=1; i<=50; i++)
    {
        for(int j=i+1; j<=50; j++)
        {
            for(int k=j+1; k<=50; k++)
            {
                if(i*k == j*j)
                {
                 cout<<c<<": "<<i<<" "<<j<<" "<<k<<endl;
                 c++;
                }
            }
        }
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

vector<string> grey(int n)
{

    vector<string> ans;
    if(n == 1)
    {
        ans.push_back("0");
        ans.push_back("1");
        return ans;
    }
    vector<string> g = grey(n-1);
    for(string s: g)
    {
        ans.push_back('0' + s);
    }
    for(int i=g.size()-1; i>=0; i--)
    {
        ans.push_back('1' + g[i]);
    }
    return ans;
}

int main(){
    fastIO;
    int n;
    cin>>n;
    for(string s:grey(n))
    {
        cout<<s<<endl;
    }
 
}

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int, int> pi;

class DSU
{
    vector<int> baap;
    vector<int> sadasya;

public:
    vector<vector<int>> adj;
    vector<int> edges;
    DSU(int n)
    {
        baap.resize(n, -1);
        sadasya.resize(n, 0);
        adj.resize(n);
        edges.resize(n, 0);
        for (int i = 0; i < n; i++)
        {
            baap[i] = i;
            sadasya[i] = 1;
            adj[i].push_back(i);
        }
    }

    int dada(int insaan)
    {
        if (insaan == baap[insaan])
            return insaan;

        return baap[insaan] = dada(baap[insaan]);
    }

    void shaadi(int u, int v)
    {
        edges[u]++;
        edges[v]++;
        u = dada(u);
        v = dada(v);
        if (u == v)
            return;
        if (sadasya[v] < sadasya[u])
        {
            swap(u, v);
        }

        for (int i : adj[u])
            adj[v].push_back(i);
        adj[u].clear();

        baap[u] = v;
        sadasya[v] += sadasya[u];
    }

    int kitne_sadasya(int u)
    {
        return sadasya[dada(u)];
    }
};

int main()
{
    fastIO;
    int n, m, ans = 0;
    cin >> n >> m;
    DSU gaon(n + 1);

    for (int i = 0; i < m; i++)
    {
        int u, v;
        cin >> u >> v;
        gaon.shaadi(u, v);
    }
    
    for (vi v : gaon.adj)
    {
        if (v.size() >= 3)
        {
            bool cycle = 1;
            for (int i : v)
            {
                if (gaon.edges[i] != 2)
                    cycle = 0;
            }
            if (cycle)
                ans++;
        }
    }
    cout << ans << endl;
}

#include <bits/stdc++.h>
#define fastIO                        \
    ios_base::sync_with_stdio(false); \
    cin.tie(NULL);                    \
    cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli, lli> pi;

int main()
{
    fastIO;
    lli n;
    cin >> n;
    lli arr[n];

    map<lli, lli> mp;
    for (lli i = 0; i < n; i++)
        cin >> arr[i];

    for (lli i = n - 1; i >= 0; i--)
    {
        if (mp.find(1 + arr[i]) != mp.end())
        {
            mp[arr[i]] = 1 + mp[arr[i] + 1];
        }
        else
            mp[arr[i]] = 1;
    }

    lli maxx = 0, num;

    for (auto p : mp)
    {
        if (p.second > maxx)
        {
            maxx = p.second;
            num = p.first;
        }
    }

    cout << maxx << endl;

    for (lli i = 0; i < n; i++)
    {
        if (arr[i] == num)
        {
            cout << i + 1 << " ";
            num++;
        }
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

void solve(){
    int n, k;
    cin>>n>>k;
    for(int i=0; i<n; i++){
        for(int j=0; j<k; j++){
            cout<<char(j+97);
        }
    }
    cout<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
// #define int long long 

const int MOD = 1e9+7;
const int LOG = 20;

int abModm(int a, int b, int m){
    a%=m;
    int res = 1;
    while (b > 0) {
        if (b & 1)
            res = (res * a)%m;
        a = (a * a)%m;
        b >>= 1;
    }
    return res;
}

signed main(){
    fastIO;
    int n, m;
    cin >> n >> m;

    vector<vector<int>> adj(n + 1);
    vector<bool> visited(n + 1, 0);
    vector<int> cycle_id(n + 1, -1);
    vector<int> dp(n+1, 0);
    vector<vector<int>> up(n+1, vector<int>(LOG, 0));
    vector<int> depth(n+1, 0);

    for(int i=0; i<m; i++)
    {
        int u, v;
        cin >> u >> v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    int id = n+1;

    function <void(int)> dfs = [&](int u) -> void
    {
        visited[u] = 1;

        for(int v: adj[u])
        {
            if(visited[v] && v != up[u][0]) 
            {
                cycle_id[u] = id++;
                break;
            }
        }

        for(int v: adj[u])
        {
            if(!visited[v])
            {
                depth[v] = depth[u] + 1;
                up[v][0] = u;
                for(int i=1; i<LOG; i++) up[v][i] = up[up[v][i-1]][i-1];
                dfs(v);
            }
        }

        if(cycle_id[u] == -1)
        {
            cycle_id[u] = u;
            for(int v: adj[u])
            {
                if(v == up[u][0]) continue;
                if(cycle_id[v] != v)
                {
                    bool down = 0;

                    for(int vv : adj[v])
                    {
                        if(vv != u && up[vv][0] != v && depth[vv] > depth[v]) down = 1;
                    }

                    if(!down) cycle_id[u] = cycle_id[v];
                }
            }
        }
    };
    
    function <void(int)> dfs1 = [&](int u) -> void
    {
        dp[u] = dp[up[u][0]];
        if(cycle_id[up[u][0]] != cycle_id[u] && cycle_id[u] != u) dp[u]++;
        
        visited[u] = 1;
        
        for(int v: adj[u])
        {
            if(!visited[v])
            {
                dfs1(v);
            }
        }
    };

    function <int(int, int)> lca = [&](int u, int v) -> int
    {
        if(depth[u] < depth[v]) swap(u, v);
        int k = depth[u] - depth[v];

        for(int i = LOG-1; i>=0; i--) if(((k>>i)&1)) u = up[u][i];
        
        if(u == v) return u;

        for(int i=LOG-1; i>=0; i--) 
        {
            if(up[u][i] != up[v][i])
            {
                u = up[u][i];
                v = up[v][i];
            }
        }

        return up[u][0];
    };

    dfs(1);    
    for(int i=0; i<=n; i++) visited[i] = 0;
    dfs1(1);

    int q;
    cin >> q;
    while(q--)
    {
        int u, v;
        cin >> u >> v;
        int p = dp[u] + dp[v] - 2 * dp[lca(u, v)];
        if(cycle_id[lca(u, v)] != lca(u, v)) p++;
        cout << abModm(2, p, MOD) << endl;
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

class segtree
{
    int size;
    vector<int> sums;

public:
    segtree(int n = 1)
    {
        size = 1;
        while (size < n)
            size *= 2;
        sums.assign(2 * size, INT_MAX);
    }

    void build(vector<int> &v, int x, int lx, int rx)
    {
        if(rx - lx == 1)
        {
            if(lx < v.size())
                sums[x] = v[lx];
            return;
        }

        int m = (lx+rx)/2;

        build(v, 2*x+1, lx, m);
        build(v, 2*x+2, m, rx);

        sums[x] = min(sums[2*x+1], sums[2*x+2]);
    }

    void build(vector<int> &v)
    {
        build(v, 0, 0, size);
    }

    void set(int i, int v, int x, int lx, int rx)
    {
        if (rx - lx == 1)
        {
            sums[x] = v;
            return;
        }

        int m = (lx + rx) / 2;

        if (i < m)
            set(i, v, 2 * x + 1, lx, m);
        else
            set(i, v, 2 * x + 2, m, rx);

        sums[x] = min(sums[2 * x + 1], sums[2 * x + 2]);
    }

    void set(int i, int v)
    {
        set(i, v, 0, 0, size);
    }

    int sum(int l, int r, int x, int lx, int rx)
    {
        if (l >= rx || r <= lx)
            return INT_MAX;
        if (lx >= l && rx <= r)
            return sums[x];

        int m = (lx + rx) / 2;
        int s1 = sum(l, r, 2 * x + 1, lx, m);
        int s2 = sum(l, r, 2 * x + 2, m, rx);

        return min(s1, s2);
    }

    int sum(int l, int r)
    {
        return sum(l, r, 0, 0, size);
    }
};


signed main(){
    fastIO;
    int n, m;
    cin >> n >> m;

    vector<int> delta(2*n+1, 0);

    for(int i=0; i<m; i++)
    {
        int a, b;
        cin >> a >> b;
        a--, b--;

        delta[a]++;
        delta[b+1]--;
    }

    for(int i=1; i<=2*n; i++) delta[i]+=delta[i-1];

    segtree st(2*n+1);
    st.build(delta);

    int q;
    cin >> q;
    while(q--)
    {
        int a, b;
        cin >> a >> b;
        a--, b--;
        cout << delta[a] + delta[b] - 2*st.sum(a, b+1)<<endl;
    }
}



#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<lli> vi;
typedef pair<lli,lli> pi;

void solve()
{
    lli n;
    cin>>n;
    string s;
    cin>>s;
    string s1=s;
    lli ans=0;
    for(lli i=1; i<=n; i++){
        if(s1[i-1]=='0')
        {
            for(lli j=i; j<=n; j+=i)
            {
                if(s[j-1]=='0')
                {
                    ans += i;
                    s[j-1] = '1';
                }
                else if(s1[j-1] == '1')
                {
                    break;
                }
            }
        }
    }
    cout<<ans<<endl;
}

int main(){
    fastIO;
    lli t;
    cin>>t;
    while(t--)
    {
        solve();
    }
}




#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin >> n;
    int ans = 0;
    for(int i=1; i<=n; i++)
    {
        ans += abs(i - (n-i+1));
    }

    cout << ans/2+1<<endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

void solve(){
    int n, m = 0, M = INT_MAX;
    cin>>n;
    int a[n];
    for(int i=0; i<n; i++){
        cin>>a[i];
    }
    for(int i=0; i<n-1; i++){
        if(a[i]>a[i+1]){
            m = max(m, (a[i]+a[i+1]+1)/2);
        }
        else if(a[i]<a[i+1]){
            M = min(M, (a[i]+a[i+1])/2);
        }
    }
if(M>=m){
    cout<<m<<endl;
}
else{
    cout<<-1<<endl;
}

}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NUint); cout.tie(NUint)
using namespace std;
#define int long long 

signed main() {
    int h, w;

    cin >> h >> w;

    vector<vector<int>> arr(h, vector<int>(w));
    
    for (int i = 0; i < h; ++i) for (int j = 0; j < w; ++j) cin >> arr[i][j];

    vector<bool> domino(h*w, false);

    int ans = 0;

    function <void(int)> dfs = [&](int ind) -> void
    {
        int n = h * w;

        if (ind == n) 
        {
            int Xor = 0;
            for (int i = 0; i < n; ++i) 
            {
                if (!domino[i])
                {
                    int r = i / w, c = i % w;
                    Xor ^= arr[r][c];
                }
            }
            ans = max(ans, Xor);
            return;
        }

        if (domino[ind]) 
        {
            dfs(ind + 1);
            return;
        }

        int r = ind / w, c = ind % w;

        
        dfs(ind + 1);

        
        if (c + 1 < w && !domino[ind + 1]) 
        {
            domino[ind] = 1;
            domino[ind + 1] = 1;
            dfs(ind + 1);
            domino[ind] = 0;
            domino[ind + 1] = 0;
        }

        
        if (r + 1 < h && !domino[ind + w]) 
        {
            domino[ind] = 1;
            domino[ind + w] = 1;
            dfs(ind + 1);
            domino[ind] = 0;
            domino[ind + w] = 0;
        }
    };

    dfs(0);
    cout << ans << endl;
}


#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(int k){

    
    
    int n, m;
    cin>>n>>m;
    
    
    int a[n], b[n];
    for(int i=0; i<n; i++){
        cin >> a[i];
    }
    for(int i=0; i<n; i++){
        cin >> b[i];
    }


    lli sum = 0;
    for(int i=m; i<n; i++){
        sum += min(a[i], b[i]);
    }

    lli minn[m], minnn = INT_MAX;
    minn[0] = min(a[m-1], b[m-1]);
    for(int i=1; i<m; i++){
        minn[i] = minn[i-1] + min(a[m-i-1], b[m-i-1]);
    }

    minnn = a[m-1];
    for(int i=1; i<m; i++){
        minnn = min(minnn, minn[i-1] + a[m-i-1]);
    }
    cout<<sum + minnn << endl;
}

int main(){
    
    fastIO;
    int t;
    cin>>t;
    for(int k=1; k<=t; k++){
        solve(k);
    }
}

#include <bits/sdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 

typedef vector<int> vi;
typedef pair<int,int> pi;


void solve(){
    int n;
    cin>>n;
    
    for(int i=2; i*i<=4*n; i++)
    {
        if(n >= (i*(i+1))/2 && (n - (i*(i+1))/2)%i == 0) 
        {
            cout<<i<<endl;
            return;
        }
    }
    cout<<-1<<endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

typedef long long int lli;
typedef vector<int> vi;
typedef pair<int,int> pi;

const lli N = lli(1e7);

lli spf[N+1];


void SPF(lli n){
   
   memset(spf, 0, sizeof(spf));

    for(lli i=2; i<=n; i++) {
       if(spf[i] == 0){
        spf[i]=i;
        for(lli j = i*i; j<=n; j += i) {
            if(spf[j] == 0) spf[j] = i;
        }
       }
    }


   /*for(int i=2; i<=n; i++){
      if(spf[i] == 0){
         spf[i] = i;
         for(int j = i*i; j<=n; j += i) {
            if(spf[j] == 0) spf[j] = i;
            }
      }
   }
   */
   
 
}

int main(){
    SPF(N);
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;

void solve(){
    int n;
    cin>>n;
    if(n<=3){
        cout<<-1<<endl;
    }
    else if(n==4){
        cout<<"3 1 4 2"<<endl;
    }
    else{
        
       
            int a=1;
            for(int i=0; i<(n+1)/2; i++){
                cout<<a<<" ";
                a+=2;
            }
            a-=2;
            a-=3;
            cout<<a<<" ";
            if(n%2==0){
                cout<<n<<" ";
            }
            a+=2;
            cout<<a<<" ";
            if(a>4){
                a-=4;
                cout<<a<<" ";
                a-=2;
                while(a!=0){
                cout<<a<<" ";
                a-=2;
            }
            
        }
    }
    cout<<endl;
}

int main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

void solve(){
    int n, x, c;
    cin>>n>>x;
    int arr[n];
    c = x;
    if(n%x==0){

    arr[0]=x;
    for(int i=2; i<n; i++){
        if(i!=x){
            arr[i-1]=i;
        }
        else{
            arr[i-1]=n;
        }
    }
    arr[n-1]=1;


    for(int i=2; i*x<n; i++){
        if((i*x)%c==0 && n%(i*x)==0){
            int a = arr[c-1];
            int b = arr[i*x-1];
            arr[i*x-1] = a;
            arr[c-1] = b;
            c = i*x;
        }
    }
    for(int i=0; i<n; i++){
        cout<<arr[i]<<" ";
    }
    cout<<endl;
}
else{
    cout<<-1<<endl;
}
}

int main(){
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    int x, y;
    cin >> x >> y;
    cout << y + ((x>y) ? x : -(y%x)/2) << endl;
}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

star

#include<bits/stdc++.h>
using namespace std;
int main(){
	int t;
	cin>>t;
	for(int l=0;l<t;l++){
		int n;
		cin>>n;
		long long int arr[n+1];
		for(int i=0;i<n;i++){
			cin>>arr[i];
		}
		sort(arr,arr+n);
		arr[n]=-1;
		vector<long long int>v;
		for(int i=0;i<n;i++){
			if(arr[i]!=arr[i+1]){
				v.push_back(arr[i]);
			}
		}

		int sum=n-1;
		int size=v.size();
		int ans=1;
		for(int j=size-1;j>=0;j--){
			long long int num=v[j]-sum;
		long long int s=0;
			long long int e=j;
			long long int mid=(s+e)/2;
			while(e>=s){
				if(v[mid]>num){
					e=mid-1;
				}
				else if(v[mid]<num){
					s=mid+1;
				}
				else{
					break;
				}
				mid=(e+s)/2;
			}
			int k=mid;	
			if(v[k]==num){
			}
			else{
				k++;
			}	
			ans=max(ans,1+j-k);
		}
		cout<<ans<<endl;
	}
return 0;
}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 




signed main(){
    fastIO;
    int n, q;
    cin >> n >> q;
    int arr[n];

    int ans = 0;

    memset(arr, 0, sizeof(arr));

    while(q--)
    {
        int ind;
        cin >> ind;
        ind--;

        bool no = 1;

        if(ind == 0)
        {    
            if((ind+1 < n && arr[ind+1] == 0)||(n==1)) 
            {
                if(arr[ind]) ans--;
                else ans++;
            }
        }
        else if(ind == n-1)
        {
            if((ind-1 >= 0 && arr[ind-1] == 0) || (n==1)) 
            {
                if(arr[ind]) ans--;
                else ans++;
            }
        }
        else
        {
            if(arr[ind-1] && arr[ind+1])
            {
                if(arr[ind]) ans++;
                else ans--;
            }
            if(!arr[ind-1] && !arr[ind+1])
            {

                if(arr[ind]) ans--;
                else ans++;

            }
        }

        cout << ans << endl;
        


        arr[ind] = 1-arr[ind];
    }

}

#include <bits/stdc++.h>
#define fastIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)
using namespace std;
#define int long long 


void solve(){
    string s;
    int x;
    cin >> s >> x;

    string s1;
    for(int i=0; i<s.size(); i++) s1.push_back('1');

    for(int i=0; i<s.size(); i++)
    {
        if(s[i] == '0')
        {
            if(i+x < s.size()) s1[i+x] = '0';
            if(i-x >= 0) s1[i-x] = '0';
        }
    }

    string s2;
    for(int i=0; i<s.size(); i++)s2.push_back('0');

    for(int i=0; i<s.size(); i++)
    {
        if(s1[i] == '1')
        {
            if(i+x < s.size()) s2[i+x] = '1';
            if(i-x >= 0) s2[i-x] = '1';
        }
    }

    if(s != s2) cout << -1 << endl;
    else cout << s1 << endl;


}

signed main(){
    fastIO;
    int t;
    cin>>t;
    while(t--){
        solve();
    }
}

#include <bits/stdc++.h>
using namespace std;

const int N = 10e5;

int main(){
    int a[N], b[N];
    memset(a, -1, sizeof(a));
    memset(b, -1, sizeof(b));
    int n1, n2;
    
    cin>>n1;
    int a1[n1], b1[n1];
    for(int i=0; i<n1; i++){
        cin>>a1[i];
    }
    
    for(int i=0; i<n1; i++){
        cin>>b1[i];
    }
    for(int i=0 ;i<n1; i++){
        a[a1[i]-1]=b1[i];
    }

    cin>>n2;
    int c1[n2], d1[n2];
    for(int i=0; i<n2; i++){
        cin>>c1[i];
    }
    
    for(int i=0; i<n2; i++){
        cin>>d1[i];
    }
    for(int i=0 ;i<n2; i++){
        b[c1[i]-1]=d1[i];
    }
    int ans=1;
    for(int i=0; i<N; i++){
        if(a[i]<b[i]){
            ans=0;
            break;
        }
        else if(a[i]>b[i]){
            ans *= 2;
        }
    }
    cout<<ans;

}

